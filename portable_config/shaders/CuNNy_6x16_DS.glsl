// CuNNy 6x16 BILINEAR MPV NVL DS
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */


//!DESC CuNNy-6x16-BILINEAR-MPV-NVL-DS-in
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND LUMA
//!SAVE in
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
#define l0(x, y) F(LUMA_tex((vec2(clamp(pos + ivec2(x, y), ivec2(0), sz) * ivec2(1, 1) + ivec2(0, 0)) + vec2(0.5)) * LUMA_pt).r)
shared F G[1][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			G[0][ay][ax] = l0(x - 1, y - 1);
		}
	}
	barrier();
	F s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2];
	r0 += V4(-6.606e-02, 9.811e-02, 1.788e-02, -4.003e+00) * s0_0_0;
	r1 += V4(-1.401e-02, 2.313e-02, 4.907e-01, -4.915e-02) * s0_0_0;
	r2 += V4(-5.059e-01, -9.809e-02, 2.458e-02, -1.075e-01) * s0_0_0;
	r3 += V4(4.713e-02, 6.087e-02, -4.575e-02, -1.316e-02) * s0_0_0;
	r0 += V4(-9.542e-02, -1.790e-01, -1.468e-02, -4.973e-01) * s0_0_1;
	r1 += V4(1.629e-03, -1.831e-01, -7.349e-02, 2.109e-02) * s0_0_1;
	r2 += V4(2.323e-01, -6.637e-02, 1.792e-01, 9.106e-02) * s0_0_1;
	r3 += V4(9.443e-02, -9.729e-02, 4.751e-02, 2.542e-02) * s0_0_1;
	r0 += V4(-6.999e-02, -2.755e+00, -8.196e-03, 1.294e-01) * s0_0_2;
	r1 += V4(5.343e-03, -3.623e-01, -1.660e-02, 5.676e-02) * s0_0_2;
	r2 += V4(2.748e-01, 7.596e-02, 3.783e-02, 9.450e-03) * s0_0_2;
	r3 += V4(5.244e-02, -1.000e-02, -2.326e-02, -1.278e-02) * s0_0_2;
	r0 += V4(-8.599e-02, -4.937e-02, 4.921e-02, 4.239e-02) * s0_1_0;
	r1 += V4(-4.877e-01, -1.180e-02, -2.566e-01, 1.450e-01) * s0_1_0;
	r2 += V4(-4.805e-02, -5.405e+00, 8.803e-02, -1.103e-01) * s0_1_0;
	r3 += V4(8.552e-02, -3.304e-02, -2.132e-01, 5.542e-03) * s0_1_0;
	r0 += V4(-1.668e-02, 9.934e-02, -4.424e-02, 1.407e-01) * s0_1_1;
	r1 += V4(-2.253e-02, 1.797e-01, -1.756e-01, -2.686e-01) * s0_1_1;
	r2 += V4(-2.997e-02, 4.338e-01, -5.858e-01, -6.398e-02) * s0_1_1;
	r3 += V4(1.098e-01, -1.350e-01, 3.612e-01, 3.610e-01) * s0_1_1;
	r0 += V4(-8.166e-02, -5.516e-01, 4.624e-03, -3.950e-02) * s0_1_2;
	r1 += V4(3.763e-03, 3.582e-01, 3.247e-02, -7.389e-02) * s0_1_2;
	r2 += V4(7.885e-02, -6.308e-02, 3.387e-02, 4.064e-01) * s0_1_2;
	r3 += V4(-1.386e-01, -2.939e-01, -1.382e-01, 1.731e-01) * s0_1_2;
	r0 += V4(-4.509e-02, 6.482e-02, 5.293e-01, -2.107e-02) * s0_2_0;
	r1 += V4(6.888e-03, -2.495e-02, -1.727e-01, -9.781e-02) * s0_2_0;
	r2 += V4(-1.351e-02, -1.024e-01, 1.189e-01, -1.277e-01) * s0_2_0;
	r3 += V4(1.692e-01, 3.309e-01, 7.342e-02, -6.142e-03) * s0_2_0;
	r0 += V4(-1.359e-01, 4.780e-02, -5.371e-01, -3.478e-02) * s0_2_1;
	r1 += V4(5.254e-01, 1.860e-02, 1.883e-01, 1.110e-01) * s0_2_1;
	r2 += V4(1.315e-02, -4.245e-01, -3.955e-01, -1.509e-01) * s0_2_1;
	r3 += V4(-9.983e-03, 1.548e-01, -6.159e-02, -2.895e-01) * s0_2_1;
	r0 += V4(-7.408e-02, 1.444e-01, 4.577e-03, 4.770e-02) * s0_2_2;
	r1 += V4(-1.433e-02, 2.290e-03, -1.250e-02, 2.929e-02) * s0_2_2;
	r2 += V4(-1.174e-03, 9.468e-03, 7.250e-02, 5.215e-02) * s0_2_2;
	r3 += V4(1.569e-01, 1.888e-02, -1.139e-02, -2.455e-01) * s0_2_2;
	r0 += V4(-6.574e-04, 3.224e-02, -1.801e-03, 5.578e-02);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(1.885e-03, 1.378e-02, -4.953e-04, 1.968e-01);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(6.468e-03, 4.149e-02, 1.783e-02, 1.222e-02);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-2.169e-01, 2.814e-02, 6.189e-02, 8.981e-03);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-6x16-BILINEAR-MPV-NVL-DS-conv1
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND in
//!BIND LUMA
//!SAVE conv1
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * in_pt;
			V4 sr0 = V4(in_gather(p, 0));
			V4 sg0 = V4(in_gather(p, 1));
			V4 sb0 = V4(in_gather(p, 2));
			V4 sa0 = V4(in_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-1.535e-01, -4.537e-02, 1.425e-01, -8.219e-02, -1.236e-02, 1.408e-01, -6.090e-02, -3.142e-01, 1.794e-01, -2.501e-02, -3.375e-03, 1.678e-01, 1.445e-01, -2.325e-02, -2.870e-01, 2.409e-02) * s0_0_0;
	r1 += M4(2.796e-02, 1.129e-02, 6.721e-02, -1.166e-01, -3.030e-01, -3.418e-01, -7.071e-01, -2.076e-01, 1.125e-01, -4.900e-02, 4.523e-02, 1.350e-01, -7.042e-02, -1.810e-02, -1.615e-01, -9.215e-02) * s0_0_0;
	r2 += M4(-8.474e-02, -2.716e-01, -1.086e-02, 7.417e-03, -1.054e-01, 1.721e-01, -2.031e-01, -1.984e-01, -1.271e-01, -1.891e-01, -5.772e-02, 3.289e-01, -1.121e-01, -1.499e-02, 2.658e-02, 5.563e-02) * s0_0_0;
	r3 += M4(1.154e-01, 7.812e-02, -1.462e-01, -3.002e-02, -1.599e-02, 1.517e-01, -8.043e-02, 9.152e-02, -1.919e-01, 7.515e-02, -1.425e+00, 5.822e-02, -1.755e-01, -7.716e-02, 1.051e-01, 2.645e-01) * s0_0_0;
	r0 += M4(-1.427e-01, 6.738e-02, -2.011e-01, -1.634e-02, 8.439e-02, 2.916e-01, 1.313e-01, 2.372e-01, 2.832e-01, 3.206e-01, 3.452e-01, 9.315e-01, 1.761e-01, 2.391e-01, 3.995e-02, 7.204e-02) * s0_0_1;
	r1 += M4(-6.910e-02, 5.957e-02, 1.607e-01, -8.160e-02, -3.038e-01, -2.646e-02, 4.205e-01, -1.702e-01, -4.618e-01, 3.972e-01, -1.223e+00, 2.107e-01, -1.983e-01, -9.306e-02, -4.384e-02, 3.597e-02) * s0_0_1;
	r2 += M4(-4.754e-02, -2.078e-01, -2.512e-02, -1.608e-01, 5.091e-02, 2.113e-01, 1.768e-01, -6.042e-02, 2.981e-02, 1.417e-02, 4.945e-01, 7.708e-01, 2.146e-01, -2.694e-02, -1.390e-01, -9.701e-02) * s0_0_1;
	r3 += M4(-5.699e-02, 1.713e-01, 9.183e-03, -3.265e-02, -1.362e-01, 6.494e-02, -1.117e-01, -1.136e-01, 4.129e-01, 2.289e-01, -2.045e+00, 9.726e-02, 2.308e-02, -2.450e-02, 8.910e-02, -3.649e-02) * s0_0_1;
	r0 += M4(1.330e-01, 2.208e-01, 6.270e-02, 5.739e-02, 1.537e-01, 2.175e-01, 7.937e-02, 4.247e-02, 1.065e-01, 5.735e-01, -2.270e-03, 5.392e-01, 1.619e-01, -1.831e-01, -1.079e-02, 2.540e-01) * s0_0_2;
	r1 += M4(-1.324e-01, 5.214e-02, 7.374e-02, 1.062e-01, -1.183e-01, 1.269e-02, -1.115e-01, 2.745e-01, -1.254e+00, -1.472e-01, -2.349e-01, -4.218e+00, 1.600e-02, -6.207e-02, -4.787e-02, 1.047e-01) * s0_0_2;
	r2 += M4(-9.918e-02, 1.240e-01, 1.507e-01, -6.620e-02, -1.277e-01, 6.236e-02, -2.470e-02, -9.642e-03, -7.917e-03, 2.145e-01, 3.128e-03, 1.170e-02, -1.942e-02, -4.482e-02, 2.345e-02, 7.705e-03) * s0_0_2;
	r3 += M4(7.086e-02, -8.423e-03, -9.225e-02, 1.114e-02, -4.819e-03, 5.248e-02, -1.582e-01, 4.402e-02, 4.962e-02, -3.146e-01, -3.492e-01, 2.529e-01, 2.061e-01, -2.152e-01, -3.769e-01, 1.307e-01) * s0_0_2;
	r0 += M4(-8.756e-02, 6.901e-02, 1.920e-01, 5.119e-02, 4.225e-01, 2.694e-01, 2.113e-01, -5.219e-06, -6.144e-02, -6.108e-03, -1.431e-03, -2.946e-02, 1.940e-01, 2.392e-02, -1.680e-02, 2.233e-01) * s0_1_0;
	r1 += M4(-7.983e-02, 4.861e-02, -3.901e-02, -1.990e-01, 1.075e-01, 1.563e-01, -8.881e-01, -5.838e-01, 1.113e-01, 8.066e-02, 2.676e-01, 1.704e-02, 2.978e-01, 2.261e-01, -3.762e-01, -6.013e-02) * s0_1_0;
	r2 += M4(-3.662e-02, 1.045e-01, 4.130e-02, 7.115e-02, 4.738e-01, 1.534e-01, 4.602e-01, 8.784e-01, 2.796e-02, 8.657e-02, 1.189e-01, -2.096e-01, 5.083e-04, -1.324e-01, 1.785e-01, -1.339e-01) * s0_1_0;
	r3 += M4(-9.872e-02, -4.551e-02, 6.117e-02, -1.498e-01, -2.980e-01, 4.398e-01, -7.384e-01, 1.145e-01, 6.497e-02, 1.198e-01, -5.980e-01, -1.352e-01, -9.824e-02, -1.109e-01, -1.264e-02, 1.437e-01) * s0_1_0;
	r0 += M4(8.215e-02, -1.718e-01, -1.143e-01, -3.446e-02, 1.002e-02, -2.954e-01, -2.267e-01, 4.192e-01, -2.219e-01, -2.261e-01, 2.094e-02, 3.409e-01, 2.803e-01, -4.081e-01, 1.134e-01, 9.194e-02) * s0_1_1;
	r1 += M4(-3.586e-03, -7.505e-02, 1.162e-01, -1.508e-01, -2.210e-01, -6.850e-02, -2.719e-02, 5.004e-01, 1.734e-02, -2.911e-01, 1.262e+00, 2.151e-01, 3.059e-01, -2.549e-01, -2.075e-03, 4.928e-01) * s0_1_1;
	r2 += M4(6.941e-03, 1.213e-01, -1.138e-01, -1.370e-01, 8.052e-02, 7.160e-02, -2.107e-01, 3.212e-01, 1.215e-01, -9.660e-02, 5.178e-01, -7.512e-01, -3.124e-03, -1.133e-01, 7.305e-02, 1.313e-01) * s0_1_1;
	r3 += M4(1.948e-01, 8.967e-02, 3.168e-02, -2.557e-02, 2.105e-01, 1.611e-01, 1.903e-02, 2.165e-01, 5.839e-01, -2.574e-01, -7.242e-01, -2.369e-02, -2.852e-01, 2.372e-02, -9.391e-02, -1.285e-01) * s0_1_1;
	r0 += M4(-6.222e-02, -1.343e-01, 1.313e-01, -8.102e-03, 1.560e-01, -4.265e-02, 1.260e-02, -1.691e-01, 2.210e-01, -1.996e-01, 1.520e-01, 2.634e-01, 2.955e-01, -3.435e-01, 4.783e-01, 9.382e-02) * s0_1_2;
	r1 += M4(-3.593e-02, 5.961e-02, 1.651e-01, -5.096e-02, -1.093e-01, 1.320e-01, -3.840e-01, -2.624e-02, -6.546e-01, -3.583e-01, 6.003e-01, -1.556e-02, 6.419e-01, -1.163e-01, 3.609e-01, 4.546e-04) * s0_1_2;
	r2 += M4(-3.932e-02, 1.606e-01, -5.617e-02, -2.356e-03, 1.067e-01, -1.845e-02, 9.735e-02, 8.814e-02, -2.323e-04, 2.635e-01, 2.265e-01, 5.388e-02, 2.089e-01, -2.361e-01, -1.805e-01, -4.876e-01) * s0_1_2;
	r3 += M4(2.332e-02, 2.278e-02, -1.663e-01, -1.189e-01, -2.508e-01, -1.049e-02, 3.098e-01, 1.562e-01, 1.704e-01, -3.820e-01, 7.871e-02, 4.011e-01, 4.695e-02, 1.052e-01, 1.630e-01, 1.153e-02) * s0_1_2;
	r0 += M4(3.090e-02, 3.718e-02, 2.215e-02, 1.142e-01, 8.257e-01, -2.897e-01, 1.596e-01, 2.308e-01, -2.527e-02, -1.182e-02, 8.696e-02, 3.298e-02, 7.092e-02, -2.423e-01, 9.574e-02, -1.529e-01) * s0_2_0;
	r1 += M4(9.196e-02, -1.235e-01, 1.333e-01, -2.029e-01, -9.526e-01, -1.470e-01, -8.584e-01, 4.292e-02, 1.639e-01, -8.668e-02, 2.429e-01, -2.359e-02, 5.289e-01, -1.509e-01, 1.804e-01, -8.628e-02) * s0_2_0;
	r2 += M4(1.336e-02, -8.230e-02, -3.074e-03, -8.960e-02, 2.056e-01, 1.783e-01, 1.608e-01, 5.423e-02, 9.435e-03, 6.121e-02, 4.291e-02, 1.982e-02, -2.235e-01, -1.994e-02, -1.676e-02, 3.742e-01) * s0_2_0;
	r3 += M4(4.548e-02, -1.694e-02, -1.937e-01, 1.475e-04, 5.542e-01, -1.090e-01, -5.089e-01, 7.449e-02, -4.765e-03, -3.775e-02, 2.162e-01, 5.815e-02, 1.563e-01, 1.386e-01, -2.445e-01, 4.069e-02) * s0_2_0;
	r0 += M4(1.005e-01, -8.735e-02, -1.109e-01, -4.509e-02, 3.698e-01, 1.052e-01, 1.942e-01, 6.374e-02, 4.217e-02, -2.762e-02, -9.966e-04, 7.262e-02, 6.536e-01, 1.171e-01, 8.071e-01, -1.056e-01) * s0_2_1;
	r1 += M4(1.641e-01, 7.234e-02, 7.311e-02, 8.989e-02, 3.910e-01, 1.245e-01, 2.673e-01, 3.320e-01, 1.592e-01, -2.602e-01, 2.642e-01, -3.253e-02, 9.031e-03, 4.789e-01, -7.466e-01, 1.158e-01) * s0_2_1;
	r2 += M4(-6.178e-02, -2.441e-03, 2.317e-02, -2.148e-01, -1.690e-02, 6.170e-01, 3.123e-02, 4.971e-02, 4.381e-02, 2.171e-01, 1.547e-02, -2.544e-01, 4.668e-01, -2.370e-01, 5.070e-01, -2.257e-01) * s0_2_1;
	r3 += M4(-7.405e-03, -1.246e-01, -1.213e-01, 3.728e-02, -5.598e-02, 8.622e-03, 5.137e-02, 1.666e-02, -6.166e-02, -9.203e-02, -2.164e-02, 4.565e-02, 3.943e-01, -2.156e-01, 8.386e-01, 2.151e-01) * s0_2_1;
	r0 += M4(-1.029e-01, 1.919e-01, -1.146e-01, 9.450e-03, -1.510e-01, -3.308e-02, -1.306e-01, 2.216e-01, 1.162e-01, 2.309e-02, -2.315e-03, 1.285e-01, 5.981e-01, -6.369e-01, 3.808e-01, 7.127e-02) * s0_2_2;
	r1 += M4(-1.490e-01, -2.101e-01, -7.648e-02, -1.950e-01, -8.904e-02, 1.057e-01, -5.464e-01, 1.970e-01, 3.806e-02, -1.604e-01, -1.279e-01, 1.222e-02, 7.306e-01, 3.246e-01, 9.807e-01, -2.157e-01) * s0_2_2;
	r2 += M4(7.828e-02, 1.370e-01, 2.371e-02, 5.322e-02, -1.288e-01, -4.025e-02, 4.912e-03, -2.719e-02, 5.464e-03, 7.961e-02, -8.522e-02, -1.009e-01, 1.067e-01, 3.895e-01, 5.906e-01, -8.878e-01) * s0_2_2;
	r3 += M4(-5.728e-02, 5.235e-03, 9.977e-02, -5.679e-02, 9.188e-02, -6.044e-02, -7.906e-02, -2.027e-01, -1.056e-02, 5.756e-02, 1.700e-01, 8.330e-02, 3.486e-01, -6.689e-01, 1.144e+00, -3.139e-01) * s0_2_2;
	r0 += M4(7.282e-02, 2.169e-02, -2.078e-01, -2.007e-02, -1.682e-02, -3.624e-02, 1.749e-01, -1.418e-01, 5.379e-02, -3.358e-02, 1.020e-01, 1.567e-01, 2.163e-01, -2.274e-01, 6.087e-02, -6.262e-02) * s1_0_0;
	r1 += M4(2.845e-01, 2.019e-01, 1.690e-01, 2.665e-01, 2.791e-02, 3.052e-02, 2.251e-01, 1.178e-01, 2.142e-01, -1.814e-01, 8.536e-02, 7.570e-03, 1.253e-02, -1.999e-01, 2.162e-01, 4.421e-01) * s1_0_0;
	r2 += M4(-5.179e-02, -7.579e-02, 5.367e-03, 1.621e-01, -2.551e-02, 9.715e-02, 9.591e-03, 1.074e-02, 1.093e-02, -3.136e-02, 5.722e-02, -2.863e-02, 1.700e-03, 3.307e-03, -3.656e-02, 1.905e-01) * s1_0_0;
	r3 += M4(3.424e-01, -8.135e-02, 1.509e-01, 5.906e-02, 2.297e-01, 8.081e-02, 3.656e-02, -9.199e-02, -1.179e-01, -1.566e-02, 1.002e-01, 7.181e-02, 1.831e-01, -6.093e-02, 7.100e-02, 5.091e-02) * s1_0_0;
	r0 += M4(6.984e-02, 8.228e-02, 1.005e-01, -2.709e-01, -1.852e-01, -1.173e-01, -4.807e-02, -5.591e-02, 7.571e-03, 7.096e-02, 6.464e-02, -1.847e-01, 4.172e-02, -1.964e-01, 1.648e-01, -3.054e-01) * s1_0_1;
	r1 += M4(-2.396e-01, 1.175e-01, -1.737e-01, 2.859e-02, -2.602e-02, 6.438e-02, -6.761e-02, 2.637e-01, 2.453e-02, 1.382e-01, 1.700e-01, 1.438e-01, 9.017e-02, -1.016e-01, 4.235e-02, -5.825e-02) * s1_0_1;
	r2 += M4(-7.870e-02, -1.465e-01, 2.395e-02, -1.586e-01, -6.714e-02, -7.664e-02, 7.351e-02, 2.151e-02, 8.470e-02, 8.316e-02, 9.793e-02, -2.987e-02, -2.131e-02, -2.422e-01, -2.691e-02, 1.345e-01) * s1_0_1;
	r3 += M4(-4.220e-03, -5.510e-02, -2.282e-01, 5.259e-02, -1.460e-01, 6.462e-02, 2.454e-02, 6.627e-02, -6.183e-02, 1.635e-01, -1.850e-01, -1.531e-01, 8.674e-02, -2.543e-01, 1.735e-02, 1.962e-01) * s1_0_1;
	r0 += M4(1.986e-01, 2.086e-01, -2.073e-02, -6.150e-01, 2.150e-02, 1.392e-01, -3.880e-02, -4.370e-02, -1.704e-01, 1.820e-01, 1.068e-01, -2.418e-01, -2.127e-01, -5.496e-02, -2.075e-01, -1.162e-01) * s1_0_2;
	r1 += M4(-9.274e-01, 1.073e-01, 1.745e-01, -2.473e-01, 4.435e-02, -2.379e-02, 1.183e-01, -4.829e-01, -3.181e-02, -6.386e-03, -1.437e-01, -3.190e+00, 1.966e-01, 1.281e-01, 3.889e-02, 2.045e-01) * s1_0_2;
	r2 += M4(1.233e-01, -8.690e-02, 9.278e-02, -4.804e-02, 1.597e-02, 2.709e-02, -1.974e-02, -6.465e-02, 6.191e-02, -9.678e-02, -1.343e-01, -4.037e-02, 1.944e-01, 4.566e-02, 2.776e-02, -4.131e-01) * s1_0_2;
	r3 += M4(-5.514e-02, 1.098e-01, -3.463e-01, 2.996e-01, -1.101e-01, 2.103e-02, 8.976e-02, -1.230e-02, -1.719e-01, 8.658e-02, -5.880e-03, 1.645e-01, -3.896e-01, 4.593e-02, -8.624e-02, -9.287e-02) * s1_0_2;
	r0 += M4(3.060e-01, 1.124e-01, -6.547e-04, -7.010e-02, -6.545e-01, -3.028e-01, -2.323e-01, -5.970e-01, 5.297e-02, -1.785e-02, 1.215e-01, 5.339e-03, 3.329e-01, 2.461e-01, 1.050e-01, -8.047e-02) * s1_1_0;
	r1 += M4(1.254e-01, 1.433e-01, -1.747e-01, 3.001e-01, -8.119e-02, 2.584e-01, 1.818e-01, 2.838e-01, 2.969e-01, -7.202e-02, -1.099e-01, -2.465e-01, 1.022e-01, 1.673e-01, -1.248e-01, 9.899e-02) * s1_1_0;
	r2 += M4(-8.550e-04, 4.738e-02, 1.177e-02, -6.855e-01, -1.382e-01, 2.606e-01, 1.231e-01, 1.430e-02, 4.294e-02, 3.330e-02, 9.391e-02, 1.740e-02, 8.720e-02, 2.164e-01, 8.969e-02, -4.022e-01) * s1_1_0;
	r3 += M4(-4.586e-02, -3.214e-03, -2.949e-02, 3.018e-02, 4.189e-01, -9.250e-02, -6.472e-02, -1.015e-01, 2.241e-02, 1.858e-01, 5.462e-02, 4.442e-03, 6.733e-02, -1.528e-01, -2.073e-01, 1.081e-01) * s1_1_0;
	r0 += M4(-1.002e-01, -2.737e-01, 7.769e-02, 1.933e-01, 3.764e-01, -2.587e-01, 8.827e-02, 1.195e-01, 2.139e-01, -1.220e-01, 3.367e-01, -3.543e-02, 3.653e-01, 1.152e-01, -3.580e-01, 4.093e-01) * s1_1_1;
	r1 += M4(-5.371e-01, 1.696e-01, 1.845e-01, -7.308e-02, -3.291e-01, -1.009e-01, -8.396e-02, 4.210e-01, 4.421e-01, 6.400e-01, 1.113e-01, 3.935e-01, -1.770e-01, 2.661e-02, -1.612e-01, -3.649e-01) * s1_1_1;
	r2 += M4(2.434e-03, 4.496e-02, -4.225e-02, 7.597e-01, -1.929e-01, -1.498e-01, 7.260e-02, 2.323e-01, -7.132e-02, 1.632e-03, 3.068e-01, -4.726e-02, 1.205e-01, 4.800e-01, 7.679e-01, -5.843e-02) * s1_1_1;
	r3 += M4(3.935e-01, -1.921e-02, -2.317e-01, 2.352e-01, -9.311e-02, 2.971e-01, 1.146e-01, 3.736e-01, 2.468e-01, -1.234e-02, -1.093e+00, 2.476e-01, 1.363e-03, 8.134e-01, 2.026e-01, 2.140e-01) * s1_1_1;
	r0 += M4(1.643e-01, 8.325e-02, 4.323e-04, 1.826e-01, -1.450e-01, 4.728e-03, 3.545e-03, 1.064e-01, -3.922e-02, 8.067e-01, 1.335e-01, -6.076e-01, -1.728e-01, 1.585e-01, 1.509e-01, 6.031e-02) * s1_1_2;
	r1 += M4(-6.130e-01, -1.712e-02, -5.932e-01, -3.293e-01, -4.037e-02, -5.959e-02, 8.944e-02, -4.017e-01, -8.938e-01, 5.339e-01, 4.162e-01, -4.074e+00, -2.651e-01, -9.084e-02, 6.129e-02, 3.174e-01) * s1_1_2;
	r2 += M4(3.499e-01, 8.778e-02, -6.918e-02, 1.105e-01, -1.613e-02, -1.739e-02, -1.333e-01, 2.981e-02, 6.987e-02, -1.661e-01, 1.903e-03, -2.916e-01, -2.296e-01, -3.919e-01, 3.750e-03, 2.266e-01) * s1_1_2;
	r3 += M4(3.251e-01, -7.261e-01, -1.959e+00, 7.607e-01, -9.539e-02, 9.351e-02, 6.534e-02, 3.637e-02, 2.331e-01, -2.801e-01, -2.887e-02, 1.740e-01, 1.403e-02, -1.955e-01, 1.098e-01, -1.976e-01) * s1_1_2;
	r0 += M4(-1.281e-01, -2.188e-02, 1.009e-02, 3.799e-02, 5.890e-01, -1.876e-01, 2.436e-02, -3.450e-01, -2.464e-01, 1.821e-02, 4.941e-02, -1.388e-02, -9.438e-02, 6.056e-02, 1.488e-01, 1.080e-01) * s1_2_0;
	r1 += M4(-1.598e-02, 8.736e-02, 1.470e-01, 8.172e-02, 1.796e-01, 1.594e-01, -1.132e+00, -3.245e-01, -3.406e-02, -1.714e-01, 1.185e-01, -1.786e-01, 1.252e-01, -3.411e-02, 1.595e-01, 2.233e-01) * s1_2_0;
	r2 += M4(-3.723e-03, -1.733e-01, 1.296e-01, -7.758e-02, 2.633e-01, 2.260e-01, 2.044e-01, -3.832e-01, 1.312e-02, 8.997e-02, -5.835e-04, -1.252e-01, -3.536e-02, -4.338e-01, -4.520e-01, 2.904e-01) * s1_2_0;
	r3 += M4(-1.892e-02, -9.638e-02, 1.396e-01, -3.582e-02, 2.472e-01, 2.291e-01, -1.354e+00, 1.835e-02, 1.546e-01, -5.211e-02, 8.922e-02, 2.709e-02, -1.220e-01, 4.696e-02, -2.602e-02, -8.573e-02) * s1_2_0;
	r0 += M4(1.688e-01, -3.147e-02, -5.643e-02, -1.898e-01, 1.504e-01, -2.818e-01, 6.990e-04, -2.617e-02, 7.341e-02, 3.955e-02, 1.004e-01, -4.111e-02, -8.134e-03, 6.672e-03, -7.350e-02, -1.014e-01) * s1_2_1;
	r1 += M4(3.871e-02, -5.427e-02, 1.225e-01, 4.335e-02, 3.172e-01, 3.940e-02, -1.710e-01, 1.660e-02, -4.171e-01, 3.172e-01, 1.190e-01, 1.938e-01, 3.601e-02, -8.645e-02, -3.425e-02, -1.759e-01) * s1_2_1;
	r2 += M4(-4.849e-02, -1.165e-01, 2.783e-01, -9.850e-02, 1.646e-01, 1.054e-01, 6.184e-02, 1.371e-01, 5.714e-03, -4.898e-03, 2.529e-01, -3.613e-03, -6.015e-02, -1.245e-01, -2.607e-01, 2.143e-02) * s1_2_1;
	r3 += M4(-4.539e-02, -1.092e-01, -3.125e-01, -4.662e-02, -7.605e-02, 1.563e-01, 7.771e-02, 5.308e-01, 3.824e-01, -3.291e-01, 2.311e-01, 1.378e-01, -2.996e-01, -8.472e-02, 1.263e-01, -1.599e-01) * s1_2_1;
	r0 += M4(1.176e-02, 4.094e-02, 4.693e-02, 1.540e-01, -4.009e-02, 5.771e-02, -9.155e-02, 7.347e-02, 1.001e-02, 1.384e-01, -7.691e-02, 1.855e-02, -1.066e-02, 4.446e-02, -8.811e-02, -1.531e-02) * s1_2_2;
	r1 += M4(1.444e-01, 1.127e-02, 1.645e-01, -1.459e-01, 1.549e-01, 2.156e-01, 1.450e-01, 2.843e-01, -5.364e-01, 1.514e-01, -2.858e-01, -2.588e-02, 2.337e-01, 1.208e-01, -1.086e-01, -9.368e-03) * s1_2_2;
	r2 += M4(1.955e-02, 2.726e-01, -6.500e-02, -1.740e-01, 7.876e-02, 4.744e-02, -6.001e-02, 7.475e-04, -7.571e-02, -2.187e-01, 1.453e-02, 5.620e-01, 5.278e-02, 2.988e-01, -5.074e-02, 5.937e-02) * s1_2_2;
	r3 += M4(-4.534e-02, -7.971e-02, 1.901e-01, 1.207e-01, -8.803e-02, -1.476e-02, 9.427e-02, -1.480e-01, 1.756e-01, -1.129e-01, -1.195e-01, -1.516e-01, 2.994e-01, 1.399e-01, 8.090e-02, 1.796e-01) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(1.317e-02, 2.655e-02, 1.004e-02, 1.343e-01, 5.809e-03, 1.122e-02, -3.078e-02, -1.313e-01, 1.347e-01, 1.353e-01, 1.274e-01, 1.017e-01, 1.256e-02, -4.585e-03, 4.354e-01, -1.955e-01) * s0_0_0;
	r1 += M4(1.962e-01, -4.608e-02, 3.309e-02, -4.992e-02, -1.708e-01, 2.118e-01, 5.023e-03, 3.693e-01, -1.561e-01, 2.948e-01, -1.044e-01, -2.967e-01, -1.212e-01, -6.898e-03, 3.445e-03, -2.492e-01) * s0_0_0;
	r2 += M4(-2.003e-02, 2.283e-02, 4.338e-02, 8.775e-03, 2.879e-02, -8.415e-02, -7.723e-02, 2.864e-01, -5.321e-02, -2.052e-02, -8.786e-02, -9.486e-02, 2.681e-02, -2.462e-02, -1.306e-01, 1.054e-01) * s0_0_0;
	r3 += M4(5.358e-02, 5.159e-02, 9.040e-02, 7.491e-02, 4.217e-02, -4.003e-02, -1.199e-01, 1.095e-01, 2.535e-02, 2.239e-03, 1.732e-01, 1.186e-01, -7.553e-02, -1.243e-02, 1.291e-01, -6.485e-02) * s0_0_0;
	r0 += M4(9.772e-02, 6.851e-02, -1.979e-02, 1.280e-01, 3.313e-01, 7.587e-01, 2.971e-01, 1.780e-02, 3.301e-01, 6.087e-02, -1.903e-02, 3.155e-01, -3.685e-01, -1.676e-01, 6.428e-02, 1.732e-01) * s0_0_1;
	r1 += M4(1.755e-01, -3.599e-02, 5.960e-02, 2.008e-01, -3.678e-01, 3.866e-01, 1.625e-01, -3.349e-02, -2.741e-01, 8.854e-02, 1.044e-01, 8.791e-02, -3.301e-01, 9.244e-02, 3.793e-02, -1.904e-01) * s0_0_1;
	r2 += M4(3.291e-04, 6.930e-02, 3.910e-02, -2.249e-02, 3.039e-01, 1.856e-01, -2.320e-01, -3.203e-01, 8.182e-02, 1.817e-01, 1.925e-01, -6.333e-02, 4.486e-02, -1.177e-01, -8.414e-02, -4.110e-02) * s0_0_1;
	r3 += M4(-3.766e-02, 4.708e-02, 6.842e-02, 4.644e-03, 5.676e-01, 3.547e-01, -1.731e+00, 1.326e-01, 2.996e-01, -2.003e-01, 1.476e-01, -5.357e-02, -3.525e-01, 6.407e-02, -8.144e-01, -8.024e-02) * s0_0_1;
	r0 += M4(5.683e-02, 6.884e-02, 3.424e-02, 8.446e-02, 3.190e-02, -8.924e-01, -2.329e-01, -4.209e-01, 6.914e-03, 2.361e-01, 1.427e-01, 2.733e-01, 4.699e-03, -2.081e-03, -5.574e-02, 1.375e-01) * s0_0_2;
	r1 += M4(-5.509e-03, -4.674e-02, 1.444e-02, -1.354e+00, -9.067e-01, 4.015e-01, 4.237e-01, 5.627e-01, -2.617e-02, 1.695e-01, 9.895e-02, -4.915e-01, 2.259e-01, 2.785e-03, 5.491e-02, 2.632e-01) * s0_0_2;
	r2 += M4(3.188e-02, 1.137e-01, -7.573e-03, -1.127e-01, 3.617e-02, 3.033e-01, -7.231e-02, 3.123e-01, 6.327e-02, 4.510e-02, -5.384e-02, 2.270e-01, 2.931e-02, 1.786e-01, 5.168e-02, 9.303e-03) * s0_0_2;
	r3 += M4(-5.571e-02, 1.359e-02, -3.672e-02, 2.486e-02, -3.778e-01, -6.349e-01, -6.359e-01, 1.258e-01, -6.391e-02, 2.166e-01, 3.397e-03, -7.513e-02, -1.587e-01, -1.441e-02, -1.488e-02, -1.767e-01) * s0_0_2;
	r0 += M4(-9.699e-02, -1.727e-01, 1.055e-01, 5.952e-02, 1.498e-01, 2.108e-01, -1.912e-01, -3.872e-02, 7.681e-02, -6.132e-02, -8.400e-02, 3.505e-02, 2.087e-01, 9.343e-02, 1.591e-01, 5.738e-02) * s0_1_0;
	r1 += M4(-2.456e-01, -1.987e-01, -9.000e-02, -7.459e-02, -2.589e-01, 9.069e-02, 3.234e-01, 1.927e-01, -1.331e-01, -3.089e-01, -5.575e-01, -6.596e-02, -3.015e-01, -2.517e-01, -2.216e-01, 1.497e-01) * s0_1_0;
	r2 += M4(1.072e-02, 9.110e-02, 9.015e-02, -1.233e-01, -3.480e-03, -3.127e-02, 7.296e-02, -1.565e-01, 7.159e-02, 5.640e-02, -2.536e-02, -1.532e-01, -1.239e-01, -2.690e-01, -3.444e-01, 2.355e-01) * s0_1_0;
	r3 += M4(-3.438e-02, -1.431e-02, -1.487e-01, -3.844e-03, -1.870e-01, 1.167e-01, 8.013e-02, -2.063e-02, -2.180e-01, -9.631e-02, 3.496e-01, 8.087e-02, -1.694e-01, 2.166e-01, -7.295e-02, -7.286e-04) * s0_1_0;
	r0 += M4(-9.420e-02, 1.853e-01, 3.869e-01, -1.199e-01, 4.918e-01, -3.625e-02, 7.240e-02, 2.457e-01, 4.013e-01, -1.203e-01, 2.596e-01, -3.828e-02, 1.520e-01, -2.024e-01, 4.900e-02, 9.242e-02) * s0_1_1;
	r1 += M4(-1.665e-01, -1.596e-01, -1.016e-02, -6.173e-02, 4.776e-01, -1.408e-01, 8.708e-01, 2.829e-02, 4.113e-01, 1.261e-01, -3.969e-01, -4.299e-01, -7.962e-01, -3.609e-01, -2.162e-01, -1.117e-01) * s0_1_1;
	r2 += M4(1.340e-01, 1.202e-02, -6.562e-04, -2.222e-01, -1.088e-02, -2.985e-01, -6.076e-01, 3.876e-01, 4.413e-01, 8.090e-02, 2.289e-01, 5.528e-01, 5.404e-02, -6.877e-02, -1.217e-01, 2.144e-01) * s0_1_1;
	r3 += M4(-2.167e-01, 2.476e-01, 3.256e-01, 7.214e-02, 3.883e-01, 8.247e-02, -1.790e+00, 8.483e-02, -2.557e-01, -9.115e-02, 3.117e-02, -8.154e-02, 3.175e-01, -2.421e-01, -3.801e-01, 3.518e-02) * s0_1_1;
	r0 += M4(-1.086e-01, -9.244e-02, 6.383e-02, -2.289e-01, 7.731e-01, -2.937e-02, 6.170e-01, 7.147e-01, 2.922e-02, -1.297e-01, -1.335e-01, -1.257e-01, -1.242e-01, -7.784e-02, 4.601e-02, 7.719e-02) * s0_1_2;
	r1 += M4(-3.142e-01, -1.311e-01, -2.449e-01, -1.012e-02, -4.818e-01, -7.565e-02, 5.374e-01, 3.310e-01, -1.286e-01, -1.832e-01, -2.731e-01, -5.702e-01, 3.237e-01, -3.214e-01, 1.700e-01, -1.720e-01) * s0_1_2;
	r2 += M4(-6.220e-02, -1.730e-01, -1.183e-01, -6.302e-02, 3.578e-01, 9.664e-03, 1.595e-01, 2.178e-01, -1.193e-01, 1.234e-01, -3.708e-02, -9.817e-02, -2.498e-02, 8.802e-02, -3.386e-02, 5.563e-02) * s0_1_2;
	r3 += M4(1.010e-01, 1.847e-01, 2.274e-02, 3.342e-01, 4.831e-01, 4.483e-01, -1.353e+00, -2.612e-02, 2.222e-01, 8.958e-04, 3.142e-02, 5.219e-02, -3.555e-02, -8.285e-02, -6.114e-03, 1.621e-01) * s0_1_2;
	r0 += M4(-3.157e-01, 5.198e-02, -7.933e-02, 2.038e-03, 1.569e-01, -5.595e-02, -2.495e-03, 4.989e-02, 3.102e-01, 1.407e-03, -1.643e-01, -1.518e-01, -2.500e-01, -4.462e-02, -8.571e-02, 1.700e-02) * s0_2_0;
	r1 += M4(-1.781e-01, 2.225e-02, 9.338e-02, -2.326e-01, 4.175e-02, 1.396e-01, -5.111e-02, -2.838e-02, -1.579e-01, -1.708e-01, 6.277e-02, -4.581e-03, 3.743e-01, -2.416e-01, 1.714e-01, -1.293e-01) * s0_2_0;
	r2 += M4(-1.054e-03, 3.192e-01, -1.486e-01, 4.243e-01, 5.236e-02, -1.653e-01, 6.859e-02, -9.095e-02, -7.556e-02, 1.268e-01, -7.662e-02, -1.309e-01, -9.740e-02, -1.101e-01, 1.560e-01, -3.133e-02) * s0_2_0;
	r3 += M4(-2.805e-03, -1.363e-01, -1.019e-01, 8.188e-02, -5.419e-02, -1.666e-01, 1.288e-01, 3.125e-02, -2.645e-01, 8.893e-02, 8.815e-02, 2.525e-02, -4.605e-02, 6.656e-02, 5.253e-02, -4.236e-02) * s0_2_0;
	r0 += M4(-2.088e-01, 9.670e-02, 3.799e-02, 1.086e-01, 4.563e-01, -1.383e-02, 1.449e-01, -2.048e-01, 4.178e-01, 2.679e-01, -1.578e-01, -9.960e-02, -1.495e-01, 5.177e-02, 1.332e-01, 5.234e-03) * s0_2_1;
	r1 += M4(-3.403e+00, 6.568e-02, -9.929e-02, -2.873e-01, -1.251e-01, -1.878e-02, 9.194e-02, -1.026e-01, -6.071e-01, -2.510e-02, 2.690e-01, 1.063e-01, -7.771e-02, -8.460e-02, 4.109e-01, 2.333e-01) * s0_2_1;
	r2 += M4(-1.411e-01, 1.763e-01, 6.817e-02, 1.347e-02, 9.740e-02, 6.198e-03, 1.524e-01, -1.312e-01, -9.125e-02, -2.169e-01, 4.768e-02, -3.133e-01, -2.056e-02, 2.975e-02, -7.883e-02, 1.924e-01) * s0_2_1;
	r3 += M4(2.210e-01, 5.200e-02, -2.474e+00, 1.151e-01, -1.797e-01, -2.306e-02, -7.348e-01, -6.330e-02, -1.515e-01, 5.824e-02, 3.409e-01, 1.171e-01, -4.253e-02, 3.227e-01, -2.228e-01, -1.329e-01) * s0_2_1;
	r0 += M4(1.727e-01, -1.996e-02, -3.400e-02, -3.159e-02, 4.266e-01, 5.995e-02, 2.314e-01, 3.143e-02, 2.282e-02, -2.319e-02, 1.052e-01, 2.003e-01, -1.140e-01, -3.318e-02, 2.855e-02, 2.593e-02) * s0_2_2;
	r1 += M4(-2.510e-01, 2.643e-01, 6.725e-04, 7.986e-01, 2.294e-01, -3.032e-02, 2.990e-01, -6.115e-01, 3.693e-03, -6.794e-02, 3.366e-01, -7.809e-02, -1.358e-01, -1.220e-01, -7.741e-03, -3.622e-01) * s0_2_2;
	r2 += M4(1.212e-01, -3.390e-02, 4.788e-02, 3.093e-02, 1.918e-01, 3.631e-01, 2.307e-01, 4.783e-01, 5.310e-03, 4.426e-02, -1.155e-01, 1.012e-01, 2.084e-02, 8.866e-02, 6.277e-02, -1.072e-01) * s0_2_2;
	r3 += M4(-1.071e-02, -5.462e-02, -1.924e+00, -1.328e-01, -7.111e-01, 1.106e-01, -5.290e-01, 3.397e-01, -9.066e-02, 2.328e-01, -1.942e-01, 4.719e-02, 2.775e-02, -1.440e-01, 2.457e-01, 4.725e-02) * s0_2_2;
	r0 += M4(-4.248e-01, -3.926e-02, -3.312e-02, -4.480e-02, -7.264e-02, -2.603e-02, 5.136e-02, 3.150e-03, -2.528e-01, 8.432e-02, -8.692e-02, -3.020e-01, 2.328e-01, 2.756e-01, 5.912e-03, 1.098e-01) * s1_0_0;
	r1 += M4(-7.752e-03, -5.315e-02, 1.112e-01, 6.428e-02, -3.244e-02, -1.676e-02, 1.009e-01, -2.243e-01, -1.502e-01, 4.338e-02, -5.889e-02, -3.205e-01, -1.712e-01, 2.358e-01, -7.966e-02, -8.354e-01) * s1_0_0;
	r2 += M4(-6.972e-02, 5.669e-02, -1.881e-02, -9.940e-02, 6.072e-02, -2.798e-02, -3.004e-02, -1.393e-01, 1.267e-01, 5.512e-02, -7.745e-02, -9.966e-02, 1.101e-01, 1.636e-01, -2.998e-01, 3.564e-01) * s1_0_0;
	r3 += M4(7.779e-02, -4.957e-03, 2.176e-01, 4.680e-03, 2.095e-02, -5.165e-02, 4.488e-01, -8.376e-02, 2.662e-02, 1.611e-02, 3.833e-02, -6.987e-02, 2.464e-01, 3.192e-01, -7.516e-01, 1.076e-01) * s1_0_0;
	r0 += M4(-1.376e-01, 2.007e-02, -1.239e-01, -1.331e-01, 2.060e-01, 2.054e-01, -1.736e-02, -1.299e-01, 3.913e-02, 1.879e-01, -2.123e-02, 5.283e-01, -7.392e-02, 6.892e-01, 1.779e-01, 1.831e-01) * s1_0_1;
	r1 += M4(-1.869e-01, 6.404e-02, 4.344e-02, 2.691e-01, 2.044e-01, -2.859e-01, -1.216e-01, -3.394e-01, 2.196e-01, 3.365e-01, -2.041e-01, -1.054e-02, 3.570e-02, 3.414e-01, -2.698e-01, 5.242e-01) * s1_0_1;
	r2 += M4(-8.184e-02, 2.507e-02, 4.460e-02, -2.635e-02, -2.223e-02, 1.276e-03, 2.326e-01, 2.247e-01, -8.774e-02, 3.804e-03, 1.665e-01, -1.854e-02, 2.683e-01, 2.048e-01, -1.340e-01, 5.550e-02) * s1_0_1;
	r3 += M4(1.897e-01, 6.213e-02, -5.154e-02, 1.114e-01, -3.776e-02, 2.604e-01, 1.724e-01, 2.441e-02, -2.564e-02, 2.705e-01, 9.402e-02, 2.228e-02, -3.106e-01, -7.898e-02, -8.699e-02, -4.261e-01) * s1_0_1;
	r0 += M4(1.592e-02, 9.869e-02, 1.918e-02, 3.896e-02, -2.338e-02, -8.807e-02, 1.796e-02, -5.058e-02, -1.160e-01, 7.814e-02, 8.961e-02, -2.160e-01, -3.890e-03, 5.519e-02, -3.724e-02, 5.611e-02) * s1_0_2;
	r1 += M4(-3.611e-02, 2.121e-03, 5.889e-02, -5.725e+00, 2.930e-01, -1.962e-01, 7.884e-02, -9.371e-01, -5.176e-02, -9.968e-02, 7.677e-02, -3.228e-01, 5.666e-02, 1.081e-01, 1.617e-01, -1.185e+00) * s1_0_2;
	r2 += M4(-1.178e-01, -5.223e-02, 7.739e-02, 7.633e-02, 4.245e-04, 1.086e-01, -1.392e-01, 1.063e-01, -5.705e-02, -8.370e-02, 1.823e-01, -9.122e-02, 2.632e-03, 2.622e-01, 1.499e-01, -1.730e-02) * s1_0_2;
	r3 += M4(-1.123e-01, 8.224e-02, 8.182e-02, 7.787e-02, 8.895e-02, -2.410e-02, 1.262e-01, -4.148e-02, 4.411e-02, 8.604e-02, 2.379e-02, 7.338e-02, -6.755e-02, -3.563e-02, 1.503e-01, 1.655e-02) * s1_0_2;
	r0 += M4(1.089e-01, 3.501e-02, 7.554e-03, 3.604e-03, -4.721e-02, 1.089e-02, -8.081e-02, -2.316e-01, -7.722e-02, -1.957e-01, -7.678e-02, 1.744e-01, -3.734e-02, 1.712e-01, -1.987e-01, 2.270e-01) * s1_1_0;
	r1 += M4(-4.145e-02, 1.048e-01, -1.880e-01, -1.059e-01, -5.326e-03, 5.627e-02, -4.915e-01, -1.474e-01, 2.691e-02, 2.383e-02, -1.864e-01, -2.788e-01, 5.524e-01, 2.925e-01, 4.309e-01, 1.788e-01) * s1_1_0;
	r2 += M4(-1.193e-02, -8.015e-02, -4.283e-02, 6.109e-02, 1.920e-02, 2.483e-01, 1.612e-01, -4.555e-01, 1.155e-01, 4.377e-02, 3.687e-01, -9.081e-02, -1.218e-01, -1.197e-03, -2.904e-01, 4.995e-02) * s1_1_0;
	r3 += M4(6.463e-02, -3.582e-02, -8.761e-02, 4.839e-02, -2.350e-01, 7.860e-03, -2.041e-01, 2.696e-02, 4.781e-02, 1.002e-01, -1.248e-01, -1.358e-01, 2.757e-01, 3.679e-01, 1.123e-02, -1.548e-01) * s1_1_0;
	r0 += M4(9.414e-02, 6.193e-02, 4.300e-02, 6.720e-02, -3.102e-01, -9.659e-03, -1.285e-01, 6.834e-02, -7.776e-02, -9.554e-02, 5.707e-01, -3.184e-02, 1.783e-02, 6.779e-02, -2.254e-02, -2.605e-01) * s1_1_1;
	r1 += M4(1.092e-01, 7.440e-02, 2.085e-02, 3.077e-01, 1.480e-01, -2.106e-01, -1.096e-01, 1.303e-01, -6.487e-02, -2.741e-01, -2.881e-01, 8.455e-01, -6.748e-01, 3.213e-01, -6.493e-02, 3.274e-01) * s1_1_1;
	r2 += M4(-2.171e-01, -9.478e-02, 7.174e-03, 1.305e-01, -5.286e-02, 2.672e-01, 3.349e-01, -6.661e-01, -3.374e-01, -2.156e-01, -5.816e-01, 1.324e-01, -1.611e-01, -1.255e-01, 4.011e-01, 1.676e-01) * s1_1_1;
	r3 += M4(-5.158e-02, 3.044e-02, -3.861e-02, 8.887e-02, 2.017e-02, 5.655e-02, 1.233e-01, 9.940e-02, -3.907e-02, -4.394e-01, -1.669e-01, -1.368e-01, 2.551e-01, -1.080e-01, -3.032e-02, -3.389e-01) * s1_1_1;
	r0 += M4(1.059e-01, -5.183e-02, 4.775e-02, -6.988e-02, -2.477e-01, -3.169e-02, 8.521e-02, 4.136e-02, 4.676e-01, -7.099e-02, -8.208e-02, 1.261e-01, 3.174e-01, 4.240e-03, 4.383e-02, 1.149e-02) * s1_1_2;
	r1 += M4(1.689e-01, -1.609e-01, 4.313e-03, 7.289e-02, -7.716e-02, 1.900e-02, 9.123e-02, -3.143e-01, -1.337e-01, -2.380e-01, 1.448e-02, -2.946e-01, -2.946e-01, 5.944e-02, -3.527e-01, -2.717e-01) * s1_1_2;
	r2 += M4(-1.829e-01, 1.642e-01, -2.799e-02, -1.082e-01, -1.013e-02, 3.030e-02, 5.075e-02, -9.386e-02, 1.582e-01, 6.566e-02, 9.054e-02, -2.614e-01, -6.949e-02, 2.925e-02, 7.212e-03, -5.442e-02) * s1_1_2;
	r3 += M4(-2.945e-02, 7.300e-02, -9.906e-02, 1.235e-01, 7.197e-02, 3.505e-02, -1.620e-01, 7.713e-02, 6.309e-02, -4.484e-01, -2.677e-02, 3.521e-01, -1.507e-02, -2.373e-01, 1.158e-01, 3.525e-01) * s1_1_2;
	r0 += M4(-7.103e-03, -7.520e-02, -3.722e-02, -1.072e-02, -1.516e-01, 9.409e-02, 5.447e-02, 1.446e-02, -1.484e-01, 3.160e-02, -2.771e-01, 3.320e-02, 1.200e-01, 5.157e-02, 3.001e-02, 8.008e-02) * s1_2_0;
	r1 += M4(6.235e-02, -6.750e-02, 1.086e-01, -6.811e-02, -4.945e-02, 4.692e-02, -2.006e-01, 4.679e-02, -1.241e-01, 1.282e-01, -6.453e-02, -2.660e-01, -8.656e-02, 1.046e-01, -2.091e-01, -9.536e-02) * s1_2_0;
	r2 += M4(-1.245e-01, -2.948e-02, -1.440e-02, 8.875e-03, 3.459e-02, -1.004e-01, -2.352e-01, 4.657e-01, 3.008e-02, -2.122e-01, 3.292e-02, 1.340e-01, 3.337e-02, 7.312e-02, -2.119e-01, -3.740e-01) * s1_2_0;
	r3 += M4(3.924e-02, -1.147e-02, -5.840e-02, -5.739e-02, -4.040e-02, 1.147e-01, 5.191e-02, 4.537e-02, -1.477e-02, 2.223e-01, -1.179e-02, -1.043e-01, -1.822e-01, 4.243e-02, 2.527e-01, 5.053e-02) * s1_2_0;
	r0 += M4(-2.004e-01, 3.958e-02, 6.166e-02, 8.908e-02, -1.067e-01, 3.961e-02, -1.526e-01, -1.834e-02, -1.366e-02, 1.758e-01, -8.414e-02, -2.825e-01, -9.539e-02, -3.821e-02, -1.033e-01, -7.638e-02) * s1_2_1;
	r1 += M4(-8.535e-02, 3.383e-02, -1.196e-01, 1.013e-01, -8.224e-02, 4.627e-02, -8.889e-02, -2.431e-01, -1.534e-01, -4.170e-02, -1.291e-01, 4.729e-01, 6.335e-02, 2.838e-02, -1.139e-01, 1.048e-01) * s1_2_1;
	r2 += M4(-6.264e-02, -2.036e-04, 4.860e-02, -3.267e-02, -5.759e-03, 2.515e-04, 8.040e-02, -2.880e-01, -1.568e-02, 1.833e-01, -1.186e-01, 3.437e-01, -1.635e-01, -3.162e-02, 3.587e-02, 3.431e-01) * s1_2_1;
	r3 += M4(-4.246e-02, 8.428e-02, -7.263e-03, 1.689e-02, -2.477e-01, 6.539e-02, -5.480e-03, -1.949e-02, 1.209e-03, -1.474e-01, -2.673e-02, 1.317e-01, 5.133e-02, -9.777e-02, -1.774e-01, -3.232e-02) * s1_2_1;
	r0 += M4(-1.197e-01, 1.814e-02, -3.457e-02, 2.113e-02, -6.861e-02, 9.926e-02, 1.688e-02, -6.438e-02, -2.350e-01, -1.093e-01, -1.113e-01, 3.963e-02, 4.457e-02, 4.081e-02, 8.080e-03, 3.526e-02) * s1_2_2;
	r1 += M4(1.037e-01, -5.640e-02, 9.667e-02, -1.928e-01, 8.157e-02, 2.929e-02, -4.012e-03, 2.171e-01, 2.048e-01, 5.584e-02, 4.426e-01, -1.148e-02, 5.755e-02, -1.038e-02, 1.537e-01, 1.565e-02) * s1_2_2;
	r2 += M4(-1.199e-01, 3.356e-02, -3.041e-02, -1.766e-02, 4.857e-03, -9.009e-02, -1.783e-01, 1.089e-01, 1.021e-01, -4.378e-02, -2.174e-02, -1.354e-02, -1.140e-02, -3.955e-02, 6.073e-02, 6.461e-04) * s1_2_2;
	r3 += M4(-7.574e-02, -1.221e-01, 1.661e-01, -1.037e-01, -1.019e-01, 1.463e-01, -4.624e-02, -2.438e-02, -1.784e-01, 1.405e-01, 8.387e-02, -4.678e-02, 6.841e-02, -2.659e-02, 1.259e-02, -2.000e-02) * s1_2_2;
	r0 += V4(-4.979e-02, -2.060e-02, 4.903e-02, 5.930e-02);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(3.085e-02, 1.420e-02, -2.704e-02, -5.474e-02);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(3.408e-01, 2.644e-02, 1.427e-02, -1.287e-02);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-1.652e-02, -8.459e-03, 4.579e-02, -2.837e-02);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-6x16-BILINEAR-MPV-NVL-DS-conv2
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv1
//!BIND LUMA
//!SAVE conv2
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv1_pt;
			V4 sr0 = V4(conv1_gather(p, 0));
			V4 sg0 = V4(conv1_gather(p, 1));
			V4 sb0 = V4(conv1_gather(p, 2));
			V4 sa0 = V4(conv1_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-2.548e-02, 4.679e-02, -6.431e-02, -8.287e-03, -6.320e-02, -3.131e-02, 2.526e-01, 6.816e-02, 3.324e-02, -3.271e-02, 6.715e-02, 7.247e-02, 9.517e-02, -5.979e-03, -1.439e-01, -9.272e-02) * s0_0_0;
	r1 += M4(-1.281e-01, 3.228e-02, 2.036e-02, -1.064e-01, -7.738e-03, 1.587e-01, 5.814e-02, 1.020e-02, 3.639e-02, 1.007e-01, -6.408e-02, 6.079e-02, -6.139e-02, 2.979e-02, -5.319e-02, 1.423e-01) * s0_0_0;
	r2 += M4(2.406e-02, 2.958e-01, -1.566e-01, -6.747e-02, -2.510e-01, -2.696e-01, 8.229e-02, 1.439e-01, -8.565e-02, -1.273e-01, 3.026e-01, 1.004e-01, -4.963e-02, 4.703e-02, 1.301e-01, -1.811e-01) * s0_0_0;
	r3 += M4(1.577e-01, 1.463e-02, -3.672e-02, -9.691e-02, 1.015e-01, 2.100e-01, -1.055e-01, 4.512e-02, -7.509e-03, 8.032e-02, 2.859e-02, 1.457e-03, -1.150e-01, -9.045e-02, 5.432e-02, -5.644e-03) * s0_0_0;
	r0 += M4(5.498e-02, 9.090e-02, 1.147e-01, 1.265e-01, -1.667e-01, -1.231e-01, 1.203e-01, -1.154e-01, 2.073e-01, 5.628e-02, -2.062e-02, 2.070e-02, -1.436e-01, -3.679e-02, -7.977e-02, 7.494e-02) * s0_0_1;
	r1 += M4(-1.427e-01, 7.319e-02, -5.705e-02, -5.432e-02, 9.581e-02, 4.418e-02, 1.936e-02, 8.823e-02, 1.677e-02, -1.688e-01, 9.248e-02, 1.293e-01, -1.475e-02, 3.585e-02, -6.062e-03, -6.019e-02) * s0_0_1;
	r2 += M4(-1.009e-01, 6.779e-04, -2.690e-01, 2.668e-01, 1.052e-01, -1.030e-02, 1.978e-01, 2.647e-01, 3.323e-02, -4.512e-02, 1.117e-01, 1.235e-01, 1.036e-01, -2.008e-01, -2.811e-02, -1.831e-02) * s0_0_1;
	r3 += M4(-3.027e-01, 2.244e-01, -1.894e-02, 1.556e-01, 6.992e-02, 2.843e-02, 3.682e-02, 6.041e-02, -6.517e-02, 3.337e-02, -5.614e-02, 1.931e-01, -1.759e-01, 2.295e-02, 3.531e-02, 7.750e-04) * s0_0_1;
	r0 += M4(1.693e-01, -2.426e-01, 5.014e-02, 7.339e-02, 1.852e-01, -2.718e-02, 8.009e-02, -9.854e-02, -1.389e-01, 1.399e-01, -3.269e-02, -5.552e-03, -2.897e-01, 6.130e-02, -1.162e-01, -3.098e-02) * s0_0_2;
	r1 += M4(-2.327e-01, 1.293e-01, -5.466e-02, 1.001e-02, 1.012e-02, -3.782e-02, -6.042e-02, -1.917e-01, 1.773e-01, 1.517e-01, 5.295e-02, 2.326e-01, -1.167e-02, 5.443e-03, 4.563e-02, 5.268e-02) * s0_0_2;
	r2 += M4(-6.739e-02, -6.835e-02, 2.781e-01, 2.260e-01, -1.492e-01, 9.595e-02, -1.472e-01, 1.806e-01, -1.415e-02, -7.330e-03, 2.881e-01, -4.340e-02, 1.652e-02, -1.841e-01, -1.778e-01, -5.398e-02) * s0_0_2;
	r3 += M4(3.059e-02, 8.895e-02, -6.373e-02, -1.140e-01, 4.110e-02, 4.610e-02, 2.175e-02, 5.965e-02, -2.124e-01, 1.907e-01, 3.359e-02, -2.768e-02, 1.008e-01, 6.628e-03, -1.302e-01, -1.800e-01) * s0_0_2;
	r0 += M4(1.756e-02, 9.226e-02, 2.912e-01, 9.353e-02, -2.163e-01, 2.948e-02, 2.681e-02, 1.353e-02, 6.712e-02, 1.043e-01, -4.215e-01, -9.362e-02, 5.558e-02, 4.869e-02, -1.146e-02, -6.815e-02) * s0_1_0;
	r1 += M4(5.722e-02, -3.451e-02, -1.285e-01, -1.231e-01, -1.449e-01, 1.070e-01, 1.115e-01, 1.312e-01, 1.569e-02, 1.673e-01, 1.053e-01, -3.853e-02, -5.459e-02, 6.892e-02, -3.488e-02, -3.055e-01) * s0_1_0;
	r2 += M4(-5.913e-02, -4.380e-03, 1.564e-01, 7.978e-02, 1.790e-01, -8.194e-02, -4.562e-01, 3.883e-02, 6.505e-02, -2.579e-02, -5.727e-03, 1.764e-03, 1.750e-01, 2.997e-01, -1.736e-01, 2.192e-02) * s0_1_0;
	r3 += M4(1.299e-01, 1.802e-01, 2.125e-01, 1.135e-01, 2.098e-01, -2.565e-02, 1.722e-01, 1.770e-01, -4.202e-03, -6.774e-02, -1.394e-01, -2.075e-04, -3.113e-02, -2.818e-02, 1.429e-03, 3.021e-02) * s0_1_0;
	r0 += M4(-6.878e-02, -4.151e-02, 2.463e-01, 1.144e-01, -3.544e-01, -1.661e-02, 1.694e-01, -2.176e-01, -1.284e-01, -4.976e-02, 5.456e-02, 1.673e-01, -9.287e-02, -3.625e-01, 2.886e-02, 2.298e-01) * s0_1_1;
	r1 += M4(1.997e-01, 3.979e-02, 1.324e-01, -2.133e-01, 4.405e-01, -5.207e-02, 1.566e-01, 6.286e-02, -7.998e-02, -1.330e-01, -4.528e-02, -1.949e-01, 1.501e-01, 1.950e-01, 1.523e-01, -5.524e-01) * s0_1_1;
	r2 += M4(5.717e-02, 5.087e-01, -9.306e-03, -2.758e-02, -1.438e-01, 2.181e-01, -2.152e-01, 3.824e-01, 2.911e-01, 1.162e-01, -4.452e-01, -4.318e-02, -2.032e-01, -2.917e-01, -6.124e-01, 2.666e-01) * s0_1_1;
	r3 += M4(1.382e-01, 2.894e-01, 5.706e-02, 2.173e-02, 1.223e-01, 1.125e-01, 1.986e-01, 1.259e-01, -1.545e-01, -1.836e-02, 2.248e-02, -8.803e-02, 3.876e-01, -2.041e-01, 1.626e-01, 3.583e-02) * s0_1_1;
	r0 += M4(2.172e-01, -5.449e-03, 2.921e-01, -2.679e-02, 1.695e-01, 6.870e-04, -1.579e-01, -3.537e-02, 1.781e-01, -3.651e-02, 5.368e-02, 6.576e-02, -4.151e-01, -1.450e-01, -2.351e-02, 1.591e-01) * s0_1_2;
	r1 += M4(-8.275e-03, 9.525e-02, -2.285e-02, 2.942e-03, -1.571e-01, 8.527e-02, -1.048e-02, -2.232e-01, 1.072e-01, -1.189e-01, 3.330e-01, -1.672e-01, 1.126e-01, 8.259e-03, -3.432e-02, 2.358e-01) * s0_1_2;
	r2 += M4(-2.044e-02, 9.379e-02, -3.515e-02, 4.305e-02, 6.662e-02, 1.719e-02, 1.876e-01, 1.774e-01, -4.653e-02, 1.890e-01, -3.372e-01, 8.787e-02, -1.304e-01, -1.233e-01, 1.121e-01, -3.102e-01) * s0_1_2;
	r3 += M4(2.873e-01, 2.092e-01, -8.520e-02, 8.246e-02, -5.121e-02, 7.383e-02, 5.318e-02, 7.135e-02, 1.371e-01, -2.133e-01, 4.772e-02, -5.627e-01, 2.496e-01, 8.459e-02, -2.520e-02, 5.174e-02) * s0_1_2;
	r0 += M4(1.935e-02, -3.381e-02, 2.686e-01, 1.915e-02, -8.850e-02, -6.424e-02, -8.378e-02, 1.665e-01, -1.289e-01, 7.488e-02, 9.219e-03, 1.317e-01, -1.788e-01, 1.625e-02, 1.061e-02, 4.481e-02) * s0_2_0;
	r1 += M4(-1.865e-02, -2.893e-01, -5.143e-02, -1.213e-01, -5.206e-02, 2.589e-01, -9.527e-03, -3.699e-01, -1.083e-02, 2.473e-01, -1.440e-01, 3.695e-02, 9.101e-02, -1.958e-02, 6.821e-02, 2.080e-01) * s0_2_0;
	r2 += M4(8.315e-02, -9.501e-02, -5.826e-02, 3.146e-02, 7.965e-02, 1.502e-02, 1.663e-02, 2.344e-02, -1.264e-01, 1.084e-01, -9.591e-02, -2.958e-02, 4.864e-02, 8.353e-02, 4.148e-03, 4.388e-02) * s0_2_0;
	r3 += M4(5.323e-01, 8.321e-02, -1.239e-01, -8.907e-03, 1.326e-01, 8.736e-02, 2.561e-01, -4.593e-02, -3.707e-01, 6.829e-02, 1.834e-01, 2.277e-02, -5.417e-01, -1.396e-02, 1.446e-01, 5.067e-02) * s0_2_0;
	r0 += M4(2.546e-02, -1.692e-02, 3.035e-01, -2.457e-02, 7.863e-02, 4.181e-02, -2.675e-01, 6.910e-02, -8.276e-02, 1.215e-01, 1.734e-01, -1.197e-02, -3.759e-01, -1.405e-01, 4.201e-01, 9.423e-03) * s0_2_1;
	r1 += M4(8.388e-02, 1.585e-01, 1.196e-01, 1.191e-01, 1.042e-02, -1.353e-01, 2.073e-02, -2.994e-01, 8.540e-03, -1.579e-01, -8.537e-02, -5.711e-01, 9.109e-02, 3.060e-01, 5.796e-02, -6.266e-03) * s0_2_1;
	r2 += M4(3.587e-02, 3.384e-01, -1.410e-01, 1.048e-01, 1.172e-01, -2.030e-01, 2.804e-01, 1.996e-01, -2.869e-02, -7.061e-02, 9.499e-02, -7.996e-03, -3.229e-02, 1.771e-01, 1.384e-01, 1.724e-01) * s0_2_1;
	r3 += M4(7.850e-02, 2.628e-02, 1.634e-01, -2.111e-02, 1.581e-01, 6.675e-02, 3.959e-01, 1.734e-01, -7.250e-01, 1.059e-01, 1.323e-01, -3.662e-02, -1.422e-01, 9.363e-02, 3.472e-01, -1.155e-01) * s0_2_1;
	r0 += M4(1.238e-01, -5.296e-02, -1.983e-01, -8.375e-02, 3.293e-01, 3.855e-02, -2.982e-01, 7.508e-02, -3.125e-02, -1.291e-01, 3.815e-01, 2.624e-01, -1.866e-04, 8.619e-02, 3.454e-02, -1.516e-01) * s0_2_2;
	r1 += M4(-3.477e-02, 6.743e-02, -1.946e-02, 1.391e-01, -2.755e-02, -1.128e-01, 1.029e-01, 7.035e-02, 1.763e-01, -2.223e-01, 1.870e-01, -8.340e-02, 8.157e-02, 3.020e-02, -2.857e-02, 4.329e-02) * s0_2_2;
	r2 += M4(6.665e-02, -1.617e-01, 1.539e-01, -1.854e-03, 7.096e-02, 2.258e-02, 5.007e-02, 1.663e-01, -9.886e-02, 1.978e-01, -2.295e-01, -3.055e-01, -2.991e-02, 1.004e-01, 1.147e-01, 8.497e-02) * s0_2_2;
	r3 += M4(7.675e-01, 1.568e-01, -5.271e-02, -1.429e-02, -5.683e-01, -1.615e-01, -1.150e-02, 4.794e-02, -9.590e-01, -2.524e-02, 2.498e-01, 2.751e-03, 6.156e-01, 5.669e-02, 9.457e-02, 1.715e-02) * s0_2_2;
	r0 += M4(1.184e-01, -9.008e-02, -1.354e-01, -8.324e-02, -1.526e-02, 5.509e-02, -1.245e-01, -1.607e-01, 1.611e-02, 1.383e-01, 8.004e-02, 1.227e-02, -4.439e-01, 5.974e-02, 7.793e-02, 1.281e-02) * s1_0_0;
	r1 += M4(-3.271e-02, 1.257e-01, -6.232e-02, -1.287e-01, 5.014e-03, 1.876e-01, 3.167e-02, 6.357e-03, 1.232e-02, -1.796e-02, 4.774e-02, 1.288e-01, -3.960e-02, 5.851e-02, -4.784e-02, 3.270e-01) * s1_0_0;
	r2 += M4(1.032e-01, 6.533e-02, 1.267e-01, 8.751e-02, 3.155e-01, 6.519e-02, -9.118e-02, -1.350e-01, 1.398e-01, -1.654e-01, 3.911e-01, 1.128e-01, 2.615e-02, -5.645e-02, 3.130e-01, 1.523e-01) * s1_0_0;
	r3 += M4(8.292e-02, -9.349e-02, -4.549e-02, -9.283e-02, -4.967e-03, -2.784e-02, 1.173e-01, 2.519e-02, -1.765e-01, 4.180e-02, -5.185e-02, 3.100e-02, 2.844e-01, 1.901e-01, 1.508e-02, -9.006e-02) * s1_0_0;
	r0 += M4(-1.055e-01, -1.997e-01, -1.147e-01, 4.266e-02, -1.150e-02, -1.996e-02, -2.388e-01, 1.723e-01, -2.242e-01, 1.199e-01, 2.299e-01, 8.014e-02, 8.568e-02, -7.349e-02, -1.907e-02, 5.297e-02) * s1_0_1;
	r1 += M4(-6.864e-02, 2.207e-02, -5.601e-02, 1.509e-01, -1.661e-01, -1.946e-01, -9.715e-02, -4.666e-01, -1.308e-01, -6.765e-02, 9.731e-02, 1.242e-01, 1.352e-01, 1.353e-01, 9.174e-02, -3.263e-01) * s1_0_1;
	r2 += M4(2.292e-01, 5.345e-02, 4.708e-01, 2.017e-03, -7.497e-02, 1.881e-01, -1.244e-02, 6.214e-02, -9.635e-02, -3.980e-01, -5.472e-01, -7.716e-03, -1.317e-02, 1.945e-02, -8.900e-01, -1.406e-01) * s1_0_1;
	r3 += M4(-9.797e-04, -4.897e-02, 7.534e-02, 4.950e-02, -2.245e-01, -8.998e-02, 4.796e-02, -2.585e-01, 2.558e-01, -3.647e-02, -3.840e-02, -5.400e-03, -1.533e-01, 1.610e-01, -2.155e-02, 1.989e-01) * s1_0_1;
	r0 += M4(3.425e-01, -1.151e-02, 3.351e-01, 1.699e-01, -4.170e-01, -2.013e-01, -1.008e-01, 3.324e-01, -4.784e-02, -7.560e-02, -2.147e-01, -1.097e-01, 5.567e-02, -1.158e-01, 3.062e-02, -3.289e-02) * s1_0_2;
	r1 += M4(-2.981e-02, -8.738e-02, -1.478e-01, 4.268e-02, -2.337e-01, 2.756e-01, 3.468e-02, 3.252e-01, 4.311e-02, 2.958e-01, 4.716e-03, 9.887e-02, -9.967e-02, -3.169e-02, -4.793e-02, 1.025e-01) * s1_0_2;
	r2 += M4(9.347e-03, 1.128e-01, -1.160e+00, 1.120e-01, 9.777e-02, 9.402e-02, -3.984e-01, -4.308e-01, 7.023e-02, -4.534e-02, 1.705e-02, 1.424e-01, -1.184e-02, -1.128e-01, 2.034e-01, 1.195e-01) * s1_0_2;
	r3 += M4(8.842e-02, 6.902e-02, 1.686e-01, -3.048e-02, 1.112e-01, -8.761e-02, -1.270e-01, -4.756e-03, 1.267e-01, 5.169e-02, -1.082e-01, -5.908e-02, 2.414e-01, 3.845e-02, 1.678e-02, 1.467e-02) * s1_0_2;
	r0 += M4(1.090e-01, 1.415e-01, -1.826e-01, -8.250e-03, 1.880e-01, 9.220e-03, 1.749e-01, 1.007e-01, -9.793e-02, -1.140e-01, 3.184e-01, 1.791e-01, -3.388e-01, 2.206e-01, -2.256e-02, 9.318e-02) * s1_1_0;
	r1 += M4(3.056e-02, 1.901e-01, -6.233e-02, 8.748e-02, 1.375e-01, 3.951e-01, -5.061e-03, -5.365e-02, 3.910e-02, 4.620e-02, 9.027e-02, -1.899e-01, 7.162e-02, 2.015e-01, 2.247e-01, 3.369e-01) * s1_1_0;
	r2 += M4(2.228e-01, -1.399e-01, -1.223e-01, 3.054e-01, -3.503e-01, 7.279e-02, -6.997e-02, -7.182e-02, -1.833e-01, -1.528e-01, -6.134e-02, -1.104e-01, -8.207e-02, 4.866e-02, -7.129e-01, -1.396e-01) * s1_1_0;
	r3 += M4(5.208e-01, 8.270e-02, 1.868e-01, 5.266e-02, 2.675e-02, -6.090e-02, 1.200e-01, -1.437e-02, -6.915e-02, 8.695e-02, 1.364e-01, 5.212e-02, 7.735e-01, 2.275e-01, 2.807e-02, 4.154e-01) * s1_1_0;
	r0 += M4(-2.715e-01, 2.314e-01, -4.662e-01, -1.785e-01, 2.804e-01, 1.155e-01, 8.241e-02, 6.998e-02, -2.160e-01, 7.313e-02, 2.472e-01, 7.158e-02, 1.732e-02, 1.604e-01, 3.834e-01, 3.529e-01) * s1_1_1;
	r1 += M4(1.681e-01, 1.872e-01, -9.659e-02, 2.571e-01, 1.779e-01, -4.294e-01, -5.869e-02, -4.126e-01, 5.041e-02, 5.076e-03, 7.066e-02, -1.125e-01, 3.250e-01, 6.062e-02, -2.495e-01, -1.047e-01) * s1_1_1;
	r2 += M4(4.256e-02, 1.204e-01, -3.415e-01, -2.163e-01, -9.954e-02, 2.494e-01, 9.875e-01, -3.127e-01, -4.526e-02, -5.394e-01, 1.159e-02, -1.150e-01, -6.300e-02, -1.118e-01, 5.688e-01, 1.750e-01) * s1_1_1;
	r3 += M4(-2.881e-01, 1.635e-02, 6.452e-02, 9.175e-03, -2.193e-02, -2.894e-01, -1.603e-01, 5.338e-03, -2.506e+00, -3.080e-03, 9.205e-02, 3.008e-02, 2.499e-01, 5.098e-01, 4.339e-01, 1.105e-01) * s1_1_1;
	r0 += M4(1.252e-01, -1.961e-01, -4.356e-01, -2.279e-01, -3.335e-01, -9.408e-02, -7.139e-03, 8.987e-02, 1.057e-01, -9.479e-02, 1.851e-01, -4.671e-02, 8.718e-02, 1.718e-02, 1.261e-01, -3.958e-02) * s1_1_2;
	r1 += M4(8.605e-02, -4.844e-02, -1.370e-01, 3.508e-01, 5.024e-02, 4.390e-01, 1.841e-01, 1.671e-01, 7.957e-02, 3.113e-01, 5.016e-02, 1.306e-01, -7.678e-02, 7.598e-03, -8.573e-02, -2.681e-01) * s1_1_2;
	r2 += M4(2.686e-02, 5.294e-01, 9.095e-01, -2.024e-01, 1.645e-01, -1.881e-01, 3.780e-01, -3.758e-01, -6.422e-02, -2.484e-02, -2.920e-01, -2.036e-01, -4.909e-02, -7.080e-03, -2.310e-01, -3.426e-01) * s1_1_2;
	r3 += M4(4.576e-01, -1.039e-01, -2.984e-01, 3.760e-01, -5.971e-02, 5.989e-02, -1.059e-01, 3.082e-02, -8.415e-01, 8.949e-02, -6.857e-02, 8.997e-03, 2.444e-01, 1.264e-01, -7.382e-02, -2.580e-01) * s1_1_2;
	r0 += M4(3.030e-02, 5.489e-02, -1.707e-01, -7.551e-02, -2.283e-01, -4.478e-02, 9.970e-02, 7.405e-02, 4.224e-02, -4.065e-02, -1.312e-01, 3.769e-02, -7.673e-01, 5.994e-02, -2.584e+00, 7.052e-01) * s1_2_0;
	r1 += M4(3.322e-02, -1.685e-01, 5.648e-03, 2.391e-02, -3.043e-02, 4.440e-02, 2.576e-02, -4.214e-03, 9.663e-04, 3.624e-02, 4.530e-02, 1.445e-01, 1.262e+00, 2.444e+00, 1.004e+00, 3.275e+00) * s1_2_0;
	r2 += M4(7.226e-02, 2.634e-02, -5.456e-02, 1.187e-01, 1.265e-01, -2.230e-02, -8.638e-02, -1.352e-01, 1.243e-03, -1.154e-01, 6.421e-02, 1.704e-01, -8.879e-01, 1.894e+00, 4.307e-01, 1.953e-01) * s1_2_0;
	r3 += M4(2.049e-01, 4.694e-03, -1.602e-01, -8.470e-02, -1.025e-01, 1.985e-02, 3.136e-02, -7.706e-02, 1.245e-01, 7.759e-02, -2.708e-02, -2.638e-02, 8.142e-01, 1.429e+00, 9.483e-01, -7.813e-01) * s1_2_0;
	r0 += M4(5.932e-02, -2.713e-02, -9.393e-02, -2.615e-02, 4.610e-02, 1.608e-01, 3.659e-02, -1.091e-01, -1.414e-01, -1.115e-02, -5.749e-02, 3.856e-02, 2.048e-01, 1.082e-01, -5.467e-01, -3.194e-01) * s1_2_1;
	r1 += M4(-4.895e-02, -8.879e-02, -7.316e-02, 6.134e-02, 2.101e-01, 1.492e-01, -4.975e-02, 6.972e-01, -4.949e-02, -9.699e-02, 8.589e-02, 1.818e-02, -2.960e-01, 1.960e-02, 1.116e-01, 1.516e-01) * s1_2_1;
	r2 += M4(8.916e-02, 1.151e-01, 1.245e-01, 1.144e-01, 1.499e-01, 3.467e-01, -3.108e-01, -3.383e-01, 5.136e-02, -2.444e-01, 2.526e-02, -3.285e-02, 1.539e-01, -1.294e-02, 8.453e-01, -2.641e-01) * s1_2_1;
	r3 += M4(-1.367e+00, -4.871e-02, -1.025e-01, 8.181e-02, -1.113e+00, 1.131e-01, -9.389e-02, -1.335e-02, 1.895e-01, -9.073e-04, -8.446e-02, -3.177e-02, -1.905e+00, 5.617e-02, -3.799e-01, -5.330e-01) * s1_2_1;
	r0 += M4(9.312e-02, 1.353e-01, -5.010e-02, 1.146e-01, -3.665e-02, -1.433e-01, -8.228e-02, -9.028e-02, 1.354e-01, -1.265e-01, 9.753e-03, 5.077e-02, -1.063e-01, 4.477e-02, -4.090e-02, 2.290e-01) * s1_2_2;
	r1 += M4(1.898e-02, -5.511e-02, 7.836e-02, -5.329e-02, -1.034e-01, 3.115e-01, -2.743e-02, -2.645e-01, -3.794e-02, 2.006e-01, 6.801e-03, 2.929e-01, 2.199e-01, 1.250e-01, 1.141e-01, 2.505e-01) * s1_2_2;
	r2 += M4(9.321e-02, 3.515e-01, 6.009e-02, 5.826e-02, 7.178e-02, -2.702e-01, -7.452e-02, -3.009e-01, -1.135e-01, -6.302e-02, -2.898e-01, -7.900e-02, -2.857e-02, 1.458e-01, -2.005e-02, 3.994e-01) * s1_2_2;
	r3 += M4(-3.272e+00, 6.784e-02, 5.934e-02, 9.233e-02, -8.843e-01, 3.517e-02, -5.251e-02, 1.635e-02, -3.778e-01, 4.833e-02, 1.982e-02, 1.524e-02, -5.290e-01, 3.504e-01, 2.085e-01, 7.855e-03) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(4.297e-02, 9.350e-02, -9.910e-03, -8.338e-02, -1.155e-01, -3.635e-02, 8.214e-02, -3.758e-02, -2.958e-01, 1.281e-01, 1.097e-01, 5.460e-02, 1.187e-01, -7.738e-02, 3.394e-01, 2.712e-02) * s0_0_0;
	r1 += M4(-4.383e-02, -5.165e-02, 3.485e-02, -4.106e-02, 1.303e-01, 1.072e-01, 6.768e-02, 2.281e-01, 3.657e-02, -1.680e-01, -1.583e-02, 2.959e-01, 9.543e-03, -3.029e-01, 2.020e-02, 5.421e-04) * s0_0_0;
	r2 += M4(1.708e-01, -3.372e-02, -1.311e-02, -1.230e-01, -4.534e-03, -6.134e-02, -6.210e-02, -7.273e-02, -2.420e-01, 9.349e-03, 6.687e-02, 3.823e-02, 6.029e-05, -1.188e-02, -7.868e-02, 2.484e-02) * s0_0_0;
	r3 += M4(-8.619e-02, -2.272e-01, 3.493e-02, 4.065e-02, -2.346e-02, 2.395e-02, -1.111e-01, 1.471e-02, 5.981e-02, 1.605e-01, 2.215e-02, -2.417e-02, -1.544e-01, 5.426e-02, 9.614e-03, -9.629e-03) * s0_0_0;
	r0 += M4(-1.484e-01, 3.849e-01, 8.393e-02, 1.862e-01, 1.605e-01, 4.058e-01, 1.944e-02, 9.727e-02, -4.285e-01, 1.710e-01, 1.511e-01, 2.871e-03, 8.813e-02, 1.250e-01, 1.070e-01, 4.629e-04) * s0_0_1;
	r1 += M4(-9.860e-02, 2.852e-02, -8.114e-02, -4.142e-02, 3.733e-01, -3.787e-01, -1.457e-01, 2.587e-01, 2.771e-02, -1.056e-01, -3.562e-02, 3.364e-01, 5.097e-02, -3.459e-01, -9.054e-02, 3.149e-02) * s0_0_1;
	r2 += M4(-2.494e-01, -2.089e-02, 3.691e-01, -1.836e-01, 1.944e-01, 2.026e-01, -8.482e-02, -4.229e-01, -2.596e-01, -5.534e-02, 2.400e-01, -2.239e-01, -1.556e-01, 3.075e-01, 2.795e-01, 3.679e-01) * s0_0_1;
	r3 += M4(2.290e-01, -3.076e-01, 2.421e-02, -1.082e-01, 2.618e-01, 1.373e-01, 1.643e-01, -4.357e-02, 2.523e-01, 4.040e-02, 6.701e-02, 2.251e-01, 1.273e-01, 1.098e-01, 6.486e-02, 4.149e-02) * s0_0_1;
	r0 += M4(-7.047e-02, -3.898e-02, -1.292e-01, -1.890e-03, 4.126e-01, -7.600e-02, 8.743e-02, -1.870e-02, -2.065e-01, -9.923e-03, 6.195e-02, 1.055e-01, -6.672e-02, -1.518e-01, -1.524e-01, -2.018e-01) * s0_0_2;
	r1 += M4(7.286e-02, -3.852e-02, 5.139e-02, -6.421e-02, -1.646e-03, -7.297e-02, 9.985e-03, -3.793e-02, 2.289e-01, 1.770e-01, -3.408e-02, -6.452e-02, 1.311e-01, -4.580e-01, 5.115e-03, 4.099e-01) * s0_0_2;
	r2 += M4(1.556e-01, 3.503e-02, -5.955e-02, -5.849e-02, 1.554e-01, -1.537e-01, 1.180e-01, 2.410e-01, -4.570e-02, 1.981e-01, -6.237e-01, 2.502e-01, 2.508e-01, 3.321e-01, -1.855e-01, -2.105e-01) * s0_0_2;
	r3 += M4(-1.475e-01, -2.959e-01, -1.102e-02, 6.204e-02, 3.496e-02, -2.695e-02, 1.113e-01, 1.798e-01, -4.922e-02, 9.191e-02, -3.160e-02, 1.956e-02, 2.040e-01, -5.551e-01, -6.766e-02, 1.409e-01) * s0_0_2;
	r0 += M4(-1.575e-01, -9.661e-02, -4.883e-02, 1.028e-01, 4.812e-02, -6.341e-02, -1.003e-01, -2.215e-02, 1.008e-02, -1.089e-02, 8.009e-02, -3.129e-02, 1.539e-02, -8.618e-02, 6.090e-02, -8.576e-02) * s0_1_0;
	r1 += M4(-2.688e-02, 7.642e-02, -8.366e-02, -1.524e-02, 1.465e-01, -6.513e-02, 1.837e-02, -2.191e-01, -2.241e-03, -2.460e-01, 2.208e-02, -9.304e-02, 3.343e-02, -3.387e-01, 3.841e-02, 1.992e-01) * s0_1_0;
	r2 += M4(1.637e-01, 1.769e-02, -9.400e-02, -5.368e-02, 1.127e-01, -3.067e-03, 1.265e-01, -2.323e-01, -3.116e-02, -1.124e-01, 8.318e-02, 6.309e-02, 7.917e-02, -1.860e-01, -8.667e-02, -5.934e-02) * s0_1_0;
	r3 += M4(-5.790e-02, -5.580e-01, -1.567e-01, -1.313e-01, 1.039e-01, 7.293e-02, -2.025e-02, -9.089e-02, 2.573e-01, 1.581e-02, -1.042e-01, -9.699e-02, 1.623e-01, -4.593e-02, -3.367e-02, -4.904e-02) * s0_1_0;
	r0 += M4(4.034e-01, 1.881e-02, -2.881e-01, -2.755e-01, -6.446e-02, 8.174e-02, -2.603e-01, -1.840e-01, 5.176e-02, 5.808e-02, -1.955e-02, -1.114e-01, -1.729e-01, -1.546e-02, 2.511e-02, 4.281e-02) * s0_1_1;
	r1 += M4(-2.085e-01, 2.323e-01, 4.649e-01, -1.075e-02, -7.135e-02, -5.020e-01, 6.092e-02, 5.414e-01, -1.383e-02, -4.297e-01, -9.705e-03, 3.955e-01, -4.913e-02, -4.564e-01, 7.397e-02, 6.175e-01) * s0_1_1;
	r2 += M4(-1.690e-01, -1.312e-02, 9.249e-03, -3.042e-01, 2.114e-01, 2.530e-02, -4.097e-01, -1.592e-01, -1.938e-01, 1.479e-01, -2.831e-01, 1.780e-01, 1.162e-02, -1.138e-02, 9.941e-02, -2.096e-01) * s0_1_1;
	r3 += M4(3.990e-01, -2.413e+00, -2.621e-01, -2.461e-01, 1.258e-01, 2.346e-02, -6.504e-01, 1.785e-01, 6.374e-02, -4.109e-01, -5.018e-01, 7.384e-03, 5.129e-02, 2.822e-01, -1.342e-01, 1.054e-01) * s0_1_1;
	r0 += M4(6.650e-02, -1.256e-02, -7.168e-02, -1.223e-02, 5.344e-02, 1.066e-02, 1.486e-01, 2.135e-03, -2.645e-01, -1.322e-01, -8.771e-03, 4.036e-02, 2.262e-01, 1.201e-01, 1.071e-01, -1.784e-01) * s0_1_2;
	r1 += M4(1.765e-01, -1.362e-02, -5.013e-02, 1.697e-02, 8.356e-02, 6.981e-02, 9.101e-03, -3.788e-02, -7.510e-02, 2.279e-01, -1.263e-01, 4.261e-01, 5.784e-02, -2.026e-01, 1.565e-01, 1.817e-01) * s0_1_2;
	r2 += M4(7.152e-02, 4.041e-03, -4.545e-01, 9.880e-02, 3.046e-01, -1.520e-01, 3.801e-02, 1.518e-01, 7.228e-02, 4.288e-01, 2.874e-01, -3.063e-01, 2.213e-02, 4.443e-01, -1.803e-01, -8.302e-01) * s0_1_2;
	r3 += M4(8.912e-02, -5.916e-01, -2.509e-02, 3.544e-01, 1.150e-01, -3.849e-02, -1.047e-01, 2.805e-01, -5.244e-01, 2.097e-01, -1.817e-02, 5.397e-01, 3.524e-01, 3.873e-01, 3.502e-02, 8.982e-02) * s0_1_2;
	r0 += M4(2.698e-02, -4.598e-02, 1.346e-01, -1.015e-01, -5.331e-02, -3.477e-02, 3.610e-02, -2.309e-02, 1.379e-01, -3.459e-02, 1.375e-01, 6.843e-02, 1.092e-01, -5.039e-02, -9.196e-02, -6.041e-02) * s0_2_0;
	r1 += M4(9.022e-02, 1.608e-01, -9.098e-03, -3.442e-02, -2.445e-02, 1.569e-01, -4.991e-02, -2.378e-01, -4.549e-02, -1.372e-01, -2.005e-02, -2.208e-01, -3.281e-02, -1.233e-01, -8.406e-04, -1.781e-01) * s0_2_0;
	r2 += M4(3.620e-02, -5.722e-02, -9.925e-02, 1.489e-01, -3.772e-02, 1.551e-01, 1.923e-01, 7.815e-02, -1.096e-01, -8.804e-04, 1.679e-01, -7.946e-03, 1.866e-02, 7.939e-02, 1.257e-01, 4.651e-02) * s0_2_0;
	r3 += M4(-2.366e-01, -2.605e-01, 1.342e-01, 4.668e-02, -1.647e-01, 6.583e-02, 6.156e-02, 1.043e-01, 2.002e-01, 9.147e-02, 1.349e-01, -2.850e-02, 4.129e-02, 8.501e-03, -1.052e-01, 1.134e-03) * s0_2_0;
	r0 += M4(-5.145e-02, -1.339e-01, 2.920e-01, 2.291e-01, -8.277e-02, -1.421e-01, 1.026e-01, 1.763e-01, 5.417e-02, 2.941e-02, -1.765e-01, -6.601e-02, 8.336e-02, 7.504e-03, -1.072e-01, 6.111e-02) * s0_2_1;
	r1 += M4(-1.953e-02, -8.326e-02, -6.469e-02, -5.313e-02, -8.797e-02, 6.439e-02, -1.154e-01, -2.137e-01, -7.708e-03, -7.611e-02, -5.070e-03, 1.184e-01, -9.476e-03, -1.694e-01, 4.186e-02, 3.050e-01) * s0_2_1;
	r2 += M4(-1.254e-01, 3.287e-02, 2.155e-01, 1.271e-01, -6.929e-02, 1.294e-01, 1.440e-01, -5.925e-02, -1.262e-02, -1.002e-02, -5.111e-02, 6.601e-02, -1.207e-01, 9.341e-02, 2.190e-02, 6.713e-02) * s0_2_1;
	r3 += M4(2.020e-01, -5.115e-01, 2.169e-01, -1.538e-01, 5.849e-02, -3.064e-02, -5.530e-02, 3.794e-02, -4.389e-01, 3.924e-02, -7.764e-02, 4.976e-02, 7.940e-01, 4.157e-02, -1.011e-01, -4.097e-02) * s0_2_1;
	r0 += M4(-1.581e-01, 5.872e-02, 1.013e-01, -2.644e-02, -1.013e-01, 8.519e-03, 1.751e-01, -2.995e-02, 9.705e-02, 3.641e-02, 2.402e-01, 4.719e-02, 3.288e-02, 3.134e-02, 3.738e-02, -1.453e-01) * s0_2_2;
	r1 += M4(7.929e-02, -2.493e-01, -7.720e-02, 1.421e-01, -6.540e-02, 7.534e-02, -4.407e-02, -8.592e-02, 6.718e-02, -1.021e-01, 1.077e-01, 2.342e-01, -3.207e-02, -1.600e-01, -9.374e-03, 5.831e-02) * s0_2_2;
	r2 += M4(-4.546e-03, 9.670e-02, 7.143e-02, 8.120e-02, -1.853e-02, -5.981e-02, -3.266e-02, -2.989e-02, -9.352e-02, -3.424e-02, -2.554e-01, -1.045e-01, 6.869e-02, -1.618e-02, -1.157e-01, -1.450e-01) * s0_2_2;
	r3 += M4(-1.993e-01, -1.856e-01, 3.797e-02, 1.351e-01, 8.735e-02, -2.863e-03, -1.090e-02, 5.041e-02, -1.078e+00, 7.495e-02, -2.466e-01, -5.032e-02, 8.053e-02, -7.939e-02, -5.237e-02, -9.505e-02) * s0_2_2;
	r0 += M4(1.919e-01, -7.873e-02, -3.677e-02, 3.931e-02, 4.331e-01, 3.841e-02, 2.101e-03, 7.092e-02, -2.132e-01, 1.111e-01, 1.333e-01, -3.127e-02, -1.231e-01, 2.513e-01, 9.541e-02, -1.186e-02) * s1_0_0;
	r1 += M4(7.159e-03, 7.382e-02, 1.329e-02, -2.484e-01, 3.489e-02, -1.802e-01, -4.179e-03, -3.674e-01, 1.252e-01, 5.176e-02, -5.166e-02, 5.928e-02, 2.984e-02, 1.708e-01, 2.726e-02, 7.446e-02) * s1_0_0;
	r2 += M4(1.343e-01, 9.650e-02, 2.397e-01, 2.289e-01, 1.160e-01, 2.630e-01, 2.712e-01, 2.267e-01, -2.732e-01, -1.708e-01, 5.291e-01, 4.823e-02, -9.992e-02, 6.984e-02, 1.036e-01, 5.821e-03) * s1_0_0;
	r3 += M4(8.881e-02, -3.817e-02, -5.274e-02, 7.694e-02, -1.462e-01, -3.027e-02, 7.592e-02, -6.433e-02, -7.458e-02, -9.362e-03, 2.079e-02, 3.447e-02, 1.131e-01, 1.140e-01, 3.923e-02, 8.892e-02) * s1_0_0;
	r0 += M4(3.067e-01, 6.459e-02, -6.308e-02, 9.349e-02, 2.773e-01, -7.692e-02, -6.090e-03, 1.790e-01, -6.707e-02, 3.490e-02, -1.075e-01, -4.877e-03, -1.151e-01, 1.938e-01, 4.579e-03, 1.481e-01) * s1_0_1;
	r1 += M4(-4.397e-02, -1.070e-01, 1.412e-01, -2.498e-01, -2.563e-01, 8.584e-02, -5.528e-02, 3.226e-03, 1.448e-01, 2.183e-01, 1.480e-01, -2.575e-01, 1.117e-01, 2.727e-02, -1.056e-02, -2.699e-01) * s1_0_1;
	r2 += M4(1.588e-01, 1.008e-02, 9.268e-02, 7.915e-02, -6.202e-02, 1.172e-01, 2.204e-01, 6.778e-02, 2.200e-01, -1.702e-02, -7.487e-01, 5.935e-02, 2.045e-01, -8.368e-02, 7.818e-02, -3.823e-02) * s1_0_1;
	r3 += M4(3.116e-02, 1.125e-01, 7.737e-02, 8.454e-02, 1.198e-02, 1.707e-01, -9.899e-02, -2.095e-01, -2.937e-02, 1.287e-01, 9.015e-02, 1.125e-02, 7.628e-02, 1.452e-01, 1.589e-01, -1.487e-01) * s1_0_1;
	r0 += M4(6.257e-02, 3.180e-01, 5.418e-02, -1.575e-01, 1.566e-01, 1.619e-01, 4.960e-02, 1.081e-01, -1.077e-01, 1.832e-01, 1.027e-01, -1.023e-01, 5.143e-02, -7.321e-02, -6.159e-02, 3.477e-02) * s1_0_2;
	r1 += M4(1.296e-01, -1.289e-01, -1.307e-01, 2.094e-01, -1.590e-03, -5.912e-02, -1.806e-02, -3.080e-01, 6.527e-04, -5.062e-02, -1.733e-01, -1.915e-01, 6.529e-03, 6.917e-02, 5.578e-02, 1.751e-03) * s1_0_2;
	r2 += M4(-2.165e-01, -9.603e-02, 2.698e-01, -1.223e-01, -1.600e-01, 1.368e-02, 2.379e-01, 6.283e-02, -3.116e-02, -2.251e-01, -4.391e-03, -1.159e-01, 3.277e-02, -7.044e-02, -1.737e-02, 3.892e-02) * s1_0_2;
	r3 += M4(3.915e-01, -1.364e-01, -5.603e-02, 4.830e-02, 1.164e-01, 1.326e-03, 1.331e-02, 1.076e-01, -2.324e-01, 1.445e-02, 4.760e-02, 5.898e-02, 1.113e-01, 1.737e-01, -4.804e-02, -1.688e-02) * s1_0_2;
	r0 += M4(2.865e-01, 2.549e-02, -1.557e-01, 3.479e-02, 2.254e-01, 2.621e-02, -2.801e-01, 3.296e-03, -3.956e-01, -5.664e-02, -6.924e-03, -7.659e-02, -3.865e-01, -2.552e-02, 1.150e-01, 2.720e-01) * s1_1_0;
	r1 += M4(1.064e-02, -3.349e-01, 7.751e-02, -9.033e-02, -3.235e-02, -4.917e-01, 7.826e-02, 2.264e-02, 5.414e-02, 1.284e-01, 6.119e-02, 3.620e-01, -5.680e-02, 2.641e-02, 9.979e-02, -1.974e-01) * s1_1_0;
	r2 += M4(1.978e-01, 1.954e-02, 1.897e-01, 1.938e-01, 9.112e-02, 1.172e-01, -6.351e-02, -9.189e-02, 1.742e-01, -1.211e-01, -1.973e-01, -2.013e-01, -1.825e-01, -6.916e-02, -1.538e-01, -1.481e-01) * s1_1_0;
	r3 += M4(-9.722e-02, 9.496e-02, -9.082e-02, 1.290e-01, -9.613e-02, -6.344e-02, -2.080e-01, -4.481e-02, -1.385e-01, 1.169e-01, 5.058e-02, 7.429e-02, 2.339e-01, 1.640e-01, -1.508e-01, -1.001e-02) * s1_1_0;
	r0 += M4(-2.859e-01, -1.415e-01, -1.309e-01, -5.161e-02, 3.069e-01, 3.974e-02, -3.792e-01, -9.906e-02, 8.075e-02, 2.166e-01, -6.242e-01, -3.802e-03, 3.945e-02, 1.078e-01, -2.595e-01, -2.526e-01) * s1_1_1;
	r1 += M4(-2.443e-01, 9.421e-02, -6.453e-03, 3.119e-01, -2.378e-01, 1.388e-01, 3.562e-02, 1.597e-01, -3.310e-01, -2.459e-02, -3.990e-02, -1.357e-01, 8.328e-02, 1.377e-01, 1.984e-01, 4.629e-02) * s1_1_1;
	r2 += M4(1.571e-01, -1.486e-01, -4.442e-01, 2.587e-01, 4.955e-01, 7.471e-02, -2.114e-02, 1.164e-01, 6.204e-02, 7.683e-02, 4.455e-02, -1.224e-01, -1.214e-01, 1.350e-01, 3.082e-01, -8.014e-01) * s1_1_1;
	r3 += M4(2.540e-01, -1.126e-01, -1.055e-01, 9.207e-02, 4.226e-03, -6.718e-02, 1.374e-02, -9.413e-02, -6.368e-01, -1.319e-01, 1.503e-01, 2.795e-01, 3.071e-01, 1.234e-01, -2.472e-01, -3.545e-01) * s1_1_1;
	r0 += M4(-3.164e-02, 2.467e-01, -4.652e-03, 6.684e-02, -1.892e-01, -4.153e-02, -2.220e-01, 1.386e-01, -4.648e-01, -1.141e-01, -1.203e-01, 1.733e-01, -3.291e-02, 3.905e-02, 8.182e-02, -1.497e-02) * s1_1_2;
	r1 += M4(3.526e-03, 2.213e-01, -6.628e-02, -4.702e-01, 5.958e-02, -2.786e-02, -1.251e-01, -2.133e-01, 1.231e-01, 7.312e-02, -1.973e-04, -3.890e-01, 1.025e-01, 9.595e-02, -5.700e-02, 2.781e-02) * s1_1_2;
	r2 += M4(8.168e-02, -1.749e-01, -2.772e-01, -5.776e-02, 1.207e-01, -3.204e-01, 2.708e-01, 1.305e-01, -9.782e-02, -1.882e-01, 4.142e-01, 1.085e-01, -4.549e-02, 1.155e-01, -4.402e-02, -1.467e-01) * s1_1_2;
	r3 += M4(-1.063e-01, 2.167e-01, 1.831e-01, -2.979e-01, -6.160e-01, 1.746e-02, 4.641e-02, 2.026e-01, -1.938e-01, -1.523e-01, -1.042e-01, -2.498e-02, -4.329e-02, 2.634e-01, 6.808e-02, -1.017e-02) * s1_1_2;
	r0 += M4(1.088e-01, -2.044e-02, -1.304e-01, -1.787e-02, -4.466e-02, 7.018e-02, -2.943e-02, -2.463e-02, -1.326e-02, 5.710e-02, -1.236e-01, -4.503e-03, 6.410e-02, 1.361e-01, -2.761e-01, 8.549e-02) * s1_2_0;
	r1 += M4(2.186e-03, 6.184e-02, 5.771e-02, 2.794e-01, -6.979e-02, 6.668e-02, 1.953e-02, 4.252e-01, 5.325e-02, 1.896e-02, 5.351e-02, 1.768e-01, 2.608e-02, -8.314e-02, 1.150e-01, 2.059e-01) * s1_2_0;
	r2 += M4(-3.714e-02, -3.456e-02, -3.009e-01, 3.705e-02, 1.072e-01, 2.103e-02, -2.569e-01, -9.879e-02, -3.796e-02, -1.528e-01, 5.089e-02, -1.012e-01, 2.298e-01, 4.937e-02, -1.170e-01, 8.670e-03) * s1_2_0;
	r3 += M4(1.225e-01, 2.815e-02, -8.180e-02, 7.305e-02, -4.878e-01, 5.980e-02, 8.665e-03, -2.650e-03, -2.681e-01, -3.783e-02, 1.031e-02, -1.072e-01, -2.461e-02, 1.361e-01, 4.904e-02, -9.263e-02) * s1_2_0;
	r0 += M4(-6.026e-02, -1.931e-02, 2.591e-01, 2.205e-03, 3.948e-02, 2.273e-02, 1.697e-01, -3.731e-02, -1.097e-01, 2.731e-02, -5.913e-01, -5.569e-03, 1.050e-01, -2.949e-03, -8.645e-02, -2.206e-01) * s1_2_1;
	r1 += M4(-1.163e-01, -1.126e-01, -2.684e-02, -4.328e-01, -3.481e-02, -1.812e-01, 4.225e-02, 1.468e-02, 9.744e-02, 2.509e-02, -4.379e-02, 5.098e-02, -6.019e-02, -5.760e-02, 9.346e-02, -6.987e-02) * s1_2_1;
	r2 += M4(3.745e-02, 1.849e-01, 2.614e-01, -2.109e-01, 1.383e-01, -1.039e-01, -4.457e-01, -2.212e-01, 1.692e-01, -3.661e-01, -1.466e-01, 2.646e-02, 1.729e-01, -4.773e-03, -1.159e-01, -2.815e-01) * s1_2_1;
	r3 += M4(-2.657e-01, -5.174e-02, 9.827e-02, 5.498e-02, -7.115e-01, 5.489e-02, 7.310e-02, 9.180e-02, 4.529e-01, 4.905e-02, 7.386e-02, -1.634e-03, -2.046e-01, -7.666e-02, 1.595e-02, -3.960e-03) * s1_2_1;
	r0 += M4(-1.576e-02, 1.313e-01, -2.569e-01, 1.444e-01, -1.926e-01, -4.456e-02, -7.974e-02, 7.029e-02, -9.614e-02, 1.526e-01, -1.655e+00, 3.122e-02, 1.634e-01, 4.993e-02, -2.360e-01, 1.092e-01) * s1_2_2;
	r1 += M4(-9.111e-03, 5.033e-02, -2.548e-02, -1.409e-01, -4.064e-02, 1.934e-01, 2.019e-02, -4.161e-02, 7.562e-02, -3.658e-01, 8.361e-02, -2.255e-01, -5.495e-02, 9.692e-02, 4.462e-02, -1.088e-01) * s1_2_2;
	r2 += M4(-4.775e-02, -1.024e-01, 1.139e-02, 3.492e-01, 6.588e-03, -7.977e-02, -1.891e-01, -2.310e-01, 1.705e-01, -2.637e-01, -2.160e-01, 3.789e-03, 1.594e-02, 4.040e-02, 7.726e-02, 6.419e-02) * s1_2_2;
	r3 += M4(-1.254e+00, 6.919e-02, 2.147e-01, -8.463e-02, -1.272e+00, 4.147e-03, 3.390e-03, 6.067e-02, -4.365e-01, 1.171e-01, -4.088e-02, -9.204e-02, -4.673e-01, 5.987e-02, 2.826e-02, 3.011e-02) * s1_2_2;
	r0 += V4(8.713e-02, -9.694e-02, -4.251e-02, -1.376e-02);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(-2.424e-02, -7.006e-04, -4.456e-02, -8.390e-03);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-3.262e-02, -6.274e-02, 1.987e-02, 1.627e-01);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-9.357e-02, -9.387e-02, 1.113e-02, 2.520e-02);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-6x16-BILINEAR-MPV-NVL-DS-conv3
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv2
//!BIND LUMA
//!SAVE conv3
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv2_pt;
			V4 sr0 = V4(conv2_gather(p, 0));
			V4 sg0 = V4(conv2_gather(p, 1));
			V4 sb0 = V4(conv2_gather(p, 2));
			V4 sa0 = V4(conv2_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-1.384e-01, -1.372e-02, 3.386e-02, -1.018e-01, 2.135e-02, 1.616e-01, 3.473e-02, 7.893e-02, 1.000e-01, 5.192e-02, -3.756e-02, -6.436e-02, 8.266e-02, -7.448e-02, 2.145e-02, 1.134e-01) * s0_0_0;
	r1 += M4(-9.433e-02, 5.569e-02, -4.378e-02, -1.679e-01, 3.608e-02, 7.668e-02, 9.016e-04, 3.122e-02, 2.267e-02, -1.093e-01, 4.236e-02, -1.886e-01, -6.444e-02, 4.757e-02, -7.898e-03, 7.974e-03) * s0_0_0;
	r2 += M4(1.565e-01, -8.222e-03, 2.230e-01, -1.555e-02, 5.889e-02, -1.126e-01, 1.264e-01, -6.107e-02, -9.422e-02, 1.793e-01, 9.982e-02, -3.884e-02, -9.035e-02, 6.202e-02, -1.178e-01, 3.015e-02) * s0_0_0;
	r3 += M4(3.096e-01, 3.329e-02, 2.387e-01, -2.321e-01, 9.611e-02, -3.597e-02, -1.142e-01, 7.160e-02, 2.672e-02, 1.642e-01, -1.140e-02, -8.713e-02, 1.813e-01, -1.208e-01, 1.917e-01, -1.487e-01) * s0_0_0;
	r0 += M4(-4.353e-01, 2.749e-02, 5.804e-02, -4.181e-02, -8.172e-02, -4.360e-02, -7.585e-02, -1.979e-01, -2.175e-01, -2.955e-01, -1.123e-01, -8.889e-01, 1.153e-01, 3.739e-01, -7.529e-02, 3.818e-01) * s0_0_1;
	r1 += M4(2.798e-02, -6.884e-04, 2.325e-02, 3.365e-02, 3.133e-02, -2.932e-02, -3.742e-02, 6.676e-02, -1.392e-02, -1.710e-01, 1.156e-01, 1.958e-01, -9.515e-02, 1.455e-02, 5.253e-02, 1.625e-02) * s0_0_1;
	r2 += M4(1.156e-01, 2.402e-02, -3.911e-02, -6.624e-02, -9.238e-02, 3.513e-02, -1.075e-01, -8.520e-02, 4.387e-01, -1.494e-02, 2.080e-01, -4.490e-02, 1.483e-01, -1.621e-01, -2.927e-02, 2.536e-01) * s0_0_1;
	r3 += M4(1.247e-01, -1.798e-02, -1.024e-05, -1.237e-01, -2.667e-02, 2.888e-02, 1.564e-02, -4.503e-03, 3.156e-01, -1.328e-01, 1.517e-01, -1.322e-01, -2.769e-01, 9.453e-02, -2.095e-01, 1.002e-02) * s0_0_1;
	r0 += M4(-1.421e-01, 1.955e-01, 5.722e-02, 9.625e-02, 8.848e-02, -1.318e-01, 2.124e-02, 3.053e-02, -4.934e-02, 2.010e-01, 1.083e-01, 1.767e-01, -9.063e-02, -1.410e-01, 6.767e-03, 5.895e-02) * s0_0_2;
	r1 += M4(-1.907e-02, 6.536e-03, 1.462e-02, -7.380e-02, 2.199e-03, 2.791e-02, -1.621e-02, 1.223e-02, -4.222e-02, 1.966e-02, 2.553e-03, -9.854e-02, 5.541e-02, 1.219e-01, -3.440e-02, -1.368e-02) * s0_0_2;
	r2 += M4(-9.366e-03, -2.694e-02, 7.597e-02, -7.704e-02, -4.724e-02, 4.436e-02, -1.497e-01, -2.931e-02, 2.542e-01, -4.836e-02, -3.725e-01, -1.221e-01, -9.025e-02, -3.884e-03, 1.345e-01, -4.572e-02) * s0_0_2;
	r3 += M4(-1.438e-01, -1.305e-02, 2.480e-02, 6.938e-02, 1.302e-02, -1.819e-03, -1.906e-02, 1.745e-02, -1.162e-01, 2.529e-02, -6.352e-03, -1.390e-01, 5.771e-02, -3.267e-02, -6.053e-02, 7.763e-02) * s0_0_2;
	r0 += M4(-1.825e-01, -1.029e-01, 5.119e-02, -4.636e-01, 7.092e-02, 3.577e-02, 1.825e-01, 1.469e-01, 9.813e-02, 2.570e-01, -6.781e-02, 3.311e-01, 5.423e-02, -1.101e-01, 2.809e-02, 1.853e-01) * s0_1_0;
	r1 += M4(-5.522e-02, 4.256e-03, 5.194e-03, 3.229e-01, 4.747e-02, 1.522e-02, 3.375e-02, -1.166e-02, -1.153e-01, 3.852e-02, 6.214e-02, -1.919e-01, 7.429e-02, 1.923e-01, 3.135e-02, -1.940e-01) * s0_1_0;
	r2 += M4(2.718e-02, -3.392e-02, 1.743e-01, 1.982e-01, -3.207e-01, -5.446e-02, -2.457e-02, 1.562e-01, 1.497e-02, -1.267e-01, -6.868e-02, -1.848e-02, 1.904e-01, -2.136e-02, -3.654e-03, 1.029e-01) * s0_1_0;
	r3 += M4(1.431e-01, -5.007e-02, 2.979e-01, 3.434e-02, -4.261e-02, -7.600e-02, -4.758e-02, 1.956e-02, 5.561e-02, -1.449e-01, 2.520e-02, 6.935e-02, 4.116e-02, -7.327e-02, -1.909e-01, 1.783e-01) * s0_1_0;
	r0 += M4(2.511e-01, 1.947e-01, 1.110e-02, -1.298e-01, -1.411e-01, -3.213e-01, -9.988e-02, 3.181e-01, 1.504e-01, 1.510e-02, -2.182e-02, -6.727e-01, 3.693e-02, -1.419e-01, 3.738e-01, 6.138e-02) * s0_1_1;
	r1 += M4(-8.696e-04, -1.100e-01, 8.225e-02, -1.163e-01, 8.477e-02, -3.431e-01, -8.217e-02, -4.299e-02, -2.036e-01, 1.265e-02, -1.172e-02, 3.354e-01, -1.957e-02, 8.163e-02, -2.042e-01, -6.347e-01) * s0_1_1;
	r2 += M4(-1.100e-01, -2.202e-01, 1.954e-01, -7.101e-02, -2.049e-01, 9.106e-02, 7.997e-03, 7.306e-03, -1.117e-01, 3.237e-02, 3.905e-01, -2.111e-01, 4.420e-02, -5.397e-02, -1.116e-01, -3.746e-02) * s0_1_1;
	r3 += M4(-4.183e-01, 1.266e-01, -1.030e-01, 1.665e-02, 2.341e-01, -5.494e-02, -1.048e-01, -1.578e-02, 2.110e-01, -8.897e-02, -9.461e-02, -2.166e-01, -2.756e-02, 1.176e-01, -9.147e-02, -1.381e-01) * s0_1_1;
	r0 += M4(9.082e-02, -5.495e-02, 3.712e-03, 4.395e-02, -3.218e-03, 7.127e-02, 5.706e-02, -5.438e-01, 2.543e-01, -1.181e-01, -1.253e-01, 1.586e-01, -1.518e-01, -2.583e-02, 6.794e-02, -3.048e-01) * s0_1_2;
	r1 += M4(1.475e-01, 5.829e-02, -1.216e-02, -9.417e-02, 2.450e-02, 3.139e-02, 5.823e-02, 1.553e-02, -2.675e-02, 2.246e-01, 1.045e-02, -1.725e-01, 3.446e-02, 5.945e-02, 6.669e-02, 1.797e-01) * s0_1_2;
	r2 += M4(1.332e-01, -1.910e-01, -1.345e-01, 1.850e-01, -1.454e-02, -6.469e-02, 3.935e-01, 2.272e-02, -8.764e-02, -7.493e-02, -2.854e-02, 9.926e-02, -1.577e-01, -1.609e-02, 1.254e-01, -4.379e-02) * s0_1_2;
	r3 += M4(-3.916e-01, 1.375e-01, -3.379e-02, 2.019e-01, 4.937e-02, 1.040e-02, -3.509e-02, -2.373e-02, -4.129e-01, 1.041e-02, 2.503e-02, 5.251e-02, 1.184e-01, 2.862e-02, 1.260e-01, 1.845e-01) * s0_1_2;
	r0 += M4(2.630e-02, -1.534e-01, -3.335e-02, 1.995e-01, -4.273e-03, -1.687e-01, -1.077e-01, -2.073e-01, 3.329e-02, 1.075e-01, -2.124e-02, -4.768e-02, -2.626e-02, 3.731e-02, -8.907e-02, 6.004e-02) * s0_2_0;
	r1 += M4(-2.127e-02, 4.243e-02, 2.914e-02, 9.717e-03, -6.465e-02, 6.194e-02, -3.575e-02, 2.210e-01, -8.477e-02, -3.570e-02, -2.524e-02, -5.471e-02, 1.304e-01, 7.462e-02, 8.520e-02, 1.588e-01) * s0_2_0;
	r2 += M4(1.234e-01, -5.344e-02, 4.727e-02, 1.383e-01, 5.699e-02, 2.134e-01, 6.568e-02, -6.529e-02, -1.176e-01, 8.225e-03, -1.239e-02, 1.024e-02, -4.435e-02, -9.435e-02, -9.214e-02, -1.712e-03) * s0_2_0;
	r3 += M4(1.627e-01, -1.236e-01, 4.333e-02, -8.763e-02, -6.616e-02, 5.732e-02, -1.414e-01, 1.655e-01, -2.632e-02, -1.606e-02, 1.446e-01, -3.308e-02, 1.879e-01, -7.617e-02, 9.790e-02, -9.891e-02) * s0_2_0;
	r0 += M4(8.897e-03, -4.477e-02, 1.847e-02, 6.704e-02, 1.047e-01, -3.467e-01, -2.235e-01, -9.496e-03, 1.192e-01, -2.557e-01, -1.286e-01, 9.512e-02, -1.105e-01, 3.357e-02, -2.869e-01, -4.049e-01) * s0_2_1;
	r1 += M4(7.162e-02, -9.975e-02, -1.024e-02, 7.087e-03, 2.215e-01, -1.727e-01, 1.245e-01, 5.304e-01, 5.230e-02, 7.263e-03, 5.823e-02, 2.619e-01, 2.104e-01, 9.874e-02, 4.887e-02, 3.315e-01) * s0_2_1;
	r2 += M4(2.420e-01, 2.004e-02, -2.076e-01, 1.589e-01, 3.114e-01, -3.690e-02, 1.784e-01, 2.191e-02, 4.406e-02, 1.323e-01, 1.755e-01, 1.899e-01, 1.350e-01, 1.535e-01, 1.922e-01, 9.627e-02) * s0_2_1;
	r3 += M4(-5.015e-01, 3.572e-03, 1.172e-01, 1.037e-01, -9.727e-02, -3.246e-02, -1.642e-01, -7.226e-02, -3.122e-02, 1.050e-01, -1.526e-02, -1.659e-02, -2.266e-01, 3.286e-02, -1.221e-01, -1.537e-02) * s0_2_1;
	r0 += M4(1.187e-01, -2.137e-01, 3.095e-02, 2.205e-02, -3.507e-02, -8.617e-02, -1.374e-01, 2.948e-01, 1.662e-01, -4.051e-02, -6.953e-02, 2.790e-01, 2.145e-01, 1.920e-01, -4.336e-03, -1.548e-01) * s0_2_2;
	r1 += M4(-5.823e-02, 9.451e-02, 2.676e-03, -1.555e-01, 1.422e-02, 1.346e-01, 1.037e-02, 1.296e-02, 9.794e-02, -2.753e-02, 1.533e-02, 9.476e-02, 2.134e-01, -6.750e-02, 5.835e-02, 2.081e-01) * s0_2_2;
	r2 += M4(1.074e-01, -4.916e-02, 3.633e-02, -6.048e-02, 2.254e-01, -8.693e-02, -9.915e-01, 2.567e-01, -1.665e-02, -1.217e-01, -2.038e-01, -5.968e-02, -9.903e-02, -7.800e-02, -3.826e-01, -3.581e-03) * s0_2_2;
	r3 += M4(-5.049e-01, -7.322e-02, -7.568e-03, -2.751e-02, -4.675e-01, -2.378e-02, -4.019e-02, 2.368e-02, 1.172e-01, -3.444e-02, 1.796e-02, 7.886e-02, -1.277e-01, 1.265e-01, -5.179e-02, 8.811e-03) * s0_2_2;
	r0 += M4(-3.660e-01, -6.158e-02, 8.550e-02, -1.082e-01, -3.378e-02, 5.347e-01, -3.294e-02, -7.616e-02, 1.478e-02, 4.811e-01, -1.254e-01, -1.655e-01, -7.458e-03, 2.363e-01, -6.978e-02, -4.638e-01) * s1_0_0;
	r1 += M4(-6.064e-02, 2.553e-02, -2.169e-02, -2.501e-02, -4.743e-02, -8.595e-03, -1.228e-02, -8.891e-02, -8.825e-02, -1.271e-02, -9.049e-02, 3.646e-02, -7.814e-02, -1.371e-01, -3.625e-02, -2.019e-02) * s1_0_0;
	r2 += M4(-1.973e-02, 6.159e-02, 4.010e-02, 9.649e-02, -1.556e-01, -1.040e-02, 2.227e-01, -3.212e-02, -1.440e-01, 4.649e-02, 1.016e-01, -1.474e-01, -3.435e-02, -4.049e-02, -3.946e-03, 5.003e-02) * s1_0_0;
	r3 += M4(2.696e-01, -1.975e-01, 2.559e-01, -2.222e-01, 1.839e-01, -1.809e-01, -4.360e-02, -9.141e-03, -7.182e-02, 7.160e-02, -2.421e-02, -1.632e-01, -6.081e-02, 9.636e-02, 2.522e-01, -2.840e-01) * s1_0_0;
	r0 += M4(-3.694e-03, 2.502e-01, 3.775e-02, 2.074e-01, -7.828e-02, -6.122e-01, 1.027e-01, -5.234e-01, -6.745e-01, -1.988e-01, 1.366e-02, -3.522e-01, 4.413e-01, 3.081e-01, -4.453e-04, -2.130e-01) * s1_0_1;
	r1 += M4(5.252e-02, -1.368e-01, 1.033e-01, -4.834e-02, 3.017e-01, 2.750e-02, 5.805e-02, 7.846e-02, 1.306e-01, 2.400e-01, -9.079e-02, 5.207e-02, -1.127e-01, 1.788e-02, -2.885e-02, -3.859e-02) * s1_0_1;
	r2 += M4(-4.863e-03, 1.596e-01, 2.421e-01, -5.155e-02, 1.278e-01, 1.072e-01, -3.053e-01, 1.964e-02, 7.048e-02, -9.934e-02, -4.479e-02, -1.668e-02, -2.142e-01, 6.120e-02, 1.861e-01, 1.470e-01) * s1_0_1;
	r3 += M4(-2.258e-01, 2.018e-03, 1.509e-01, -8.266e-02, -4.127e-02, -9.180e-02, -1.326e-01, 1.527e-02, -6.430e-02, -1.054e-01, -5.445e-02, 2.965e-02, -2.815e-01, 3.123e-02, 1.489e-01, -3.062e-01) * s1_0_1;
	r0 += M4(3.492e-02, -1.658e-02, -5.436e-02, 1.458e-01, 2.488e-01, -5.775e-02, -1.676e-01, 3.690e-02, 3.618e-02, -1.356e-01, -4.278e-02, 3.137e-02, 4.785e-02, -3.971e-02, -4.986e-02, 6.042e-03) * s1_0_2;
	r1 += M4(-5.536e-02, 4.441e-02, 4.041e-02, -4.166e-02, -1.568e-01, 4.156e-02, -2.845e-03, 1.248e-01, 3.943e-02, 5.580e-02, -1.066e-01, 8.261e-03, -6.092e-03, 2.095e-01, -3.403e-02, -1.572e-02) * s1_0_2;
	r2 += M4(-6.567e-02, 2.984e-02, 2.129e-02, 8.960e-02, -7.220e-02, 2.036e-01, 1.761e-01, -2.883e-02, 2.338e-02, 8.060e-03, -2.494e-01, -1.782e-02, -2.201e-02, -1.294e-01, -6.732e-03, 2.783e-02) * s1_0_2;
	r3 += M4(-1.445e-01, 8.411e-02, -2.425e-02, -5.313e-02, 6.494e-02, -3.799e-02, 5.423e-02, 2.541e-03, 3.478e-02, 5.971e-02, -1.806e-01, 5.023e-02, -5.887e-02, 7.412e-02, 5.318e-02, 5.236e-03) * s1_0_2;
	r0 += M4(1.380e-01, 2.462e-01, -2.158e-01, -3.364e-01, 1.365e-01, 2.270e-01, -7.737e-02, -2.467e-03, 2.074e-01, -1.466e-01, 2.769e-01, -2.975e-01, 7.436e-02, -1.368e-01, -6.681e-03, -5.503e-01) * s1_1_0;
	r1 += M4(1.773e-01, -1.098e-02, 1.416e-01, 1.307e-01, -6.172e-02, 2.943e-02, -9.768e-02, 2.173e-01, 6.339e-02, -3.374e-02, 6.519e-02, -1.228e-01, -1.284e-01, 3.641e-02, -3.963e-02, 3.791e-02) * s1_1_0;
	r2 += M4(-4.498e-03, 1.044e-01, -1.701e-01, 6.842e-03, 1.654e-02, -1.487e-02, 5.629e-04, 5.239e-02, -2.367e-01, -8.421e-02, -6.131e-02, 1.786e-01, 6.994e-02, -1.033e-01, -9.394e-02, 2.588e-01) * s1_1_0;
	r3 += M4(-3.081e-01, 3.330e-01, -3.641e-02, 6.398e-02, 9.047e-03, 1.604e-01, 2.105e-01, 9.272e-02, 9.898e-02, -2.200e-01, 1.778e-01, 1.317e-01, 1.537e-01, -5.617e-02, 2.143e-01, 1.372e-02) * s1_1_0;
	r0 += M4(7.346e-02, -6.005e-02, 1.147e-01, -9.397e-02, 1.070e-01, -8.306e-01, -1.345e-01, -1.220e-01, -9.582e-02, 3.758e-01, 1.727e-01, -4.212e-01, -1.366e-01, -1.440e-01, 4.387e-01, -9.579e-01) * s1_1_1;
	r1 += M4(-1.899e-01, -1.823e-02, -8.224e-02, -3.111e-01, 2.272e-02, 2.170e-01, -6.024e-02, 5.452e-02, -3.596e-02, -2.989e-01, 5.428e-01, -1.188e-01, 1.550e-01, -5.057e-02, 1.636e-01, -4.778e-01) * s1_1_1;
	r2 += M4(-7.579e-02, -6.463e-02, 1.870e-01, -2.134e-01, 2.248e-02, -7.017e-02, 5.054e-01, 3.246e-02, 5.163e-02, 1.414e-01, 3.330e-01, -2.259e-01, 1.006e-01, 3.523e-01, 4.033e-01, -2.779e-01) * s1_1_1;
	r3 += M4(1.497e-03, -9.763e-02, 1.797e-01, 1.214e-01, -6.756e-02, 1.458e-01, -7.850e-02, 1.054e-01, 6.134e-02, 8.502e-02, 9.546e-02, 1.945e-01, -1.160e-01, 2.154e-02, 3.201e-01, -3.373e-01) * s1_1_1;
	r0 += M4(9.508e-02, -6.586e-02, -6.308e-03, 2.122e-01, -3.136e-01, 1.410e-01, 7.343e-02, 1.759e-01, 1.785e-02, -2.091e-01, 1.062e-01, -4.402e-02, -1.192e-01, 2.633e-01, 2.255e-02, -1.156e-01) * s1_1_2;
	r1 += M4(4.287e-02, -1.865e-01, -3.313e-02, -5.020e-02, 1.091e-01, -6.137e-02, -2.190e-02, -1.665e-01, 1.400e-01, 7.324e-02, 3.037e-02, 9.984e-02, -7.200e-02, -1.822e-01, 1.509e-01, -3.496e-03) * s1_1_2;
	r2 += M4(2.097e-01, -1.129e-01, 2.207e-01, -2.172e-01, 1.674e-01, -4.470e-02, -1.047e-01, -1.449e-02, -1.817e-01, 3.881e-02, -1.368e-01, 1.279e-01, 1.383e-02, -3.118e-02, 2.756e-01, 2.832e-02) * s1_1_2;
	r3 += M4(2.408e-01, -8.597e-02, 8.306e-02, 1.555e-01, 1.171e-01, 1.507e-02, 1.104e-01, 2.675e-01, -2.553e-02, -4.464e-02, 4.639e-02, -3.019e-01, 8.119e-02, 8.961e-02, 1.577e-01, -1.495e-01) * s1_1_2;
	r0 += M4(-7.682e-02, -1.979e-01, 7.846e-02, -4.833e-01, -1.807e-01, 5.309e-02, -1.213e-01, 1.133e-01, 9.709e-02, -1.890e-01, -1.523e-02, 3.236e-01, 4.380e-02, 2.638e-02, -6.344e-02, 4.229e-01) * s1_2_0;
	r1 += M4(-2.744e-02, 8.802e-02, 7.666e-02, -2.065e-01, 1.398e-01, -2.462e-02, -1.880e-02, 1.652e-02, 4.652e-02, -2.819e-02, -2.460e-02, 1.526e-01, 1.075e-01, -4.063e-02, -3.833e-02, 7.143e-02) * s1_2_0;
	r2 += M4(-5.641e-02, 6.652e-02, 3.768e-02, -1.010e-01, -1.449e-01, -6.260e-03, 9.364e-02, 2.385e-02, -7.386e-02, 6.462e-02, -7.411e-02, 5.265e-03, -7.693e-02, -1.127e-01, -1.275e-01, 6.053e-02) * s1_2_0;
	r3 += M4(-2.021e-01, 2.761e-01, -2.867e-01, 5.806e-02, -1.620e-02, 9.567e-02, -1.720e-01, 1.108e-01, -6.818e-04, -1.603e-02, -8.034e-02, -6.722e-02, -5.058e-02, 5.725e-02, 1.743e-01, -1.063e-01) * s1_2_0;
	r0 += M4(-4.531e-02, 1.176e-01, 1.442e-01, 6.550e-02, 4.399e-02, -2.904e-02, -1.036e-02, 9.155e-02, 7.586e-02, 3.570e-01, -4.874e-02, 4.501e-01, 1.948e-01, 3.984e-01, 1.916e-01, -2.615e-01) * s1_2_1;
	r1 += M4(4.440e-02, -7.539e-02, -2.426e-02, 1.069e-01, 1.246e-01, -3.494e-02, -1.037e-02, -5.488e-02, -1.304e-01, 2.305e-02, -4.672e-03, -1.275e-01, 2.915e-02, 2.341e-01, 6.246e-03, -1.346e-02) * s1_2_1;
	r2 += M4(-1.301e-01, -1.213e-01, -8.918e-01, -2.452e-01, -2.590e-01, -6.276e-03, -4.108e-01, 1.234e-01, -1.100e-01, 4.035e-03, -9.600e-02, -1.012e-01, 2.440e-02, 4.456e-02, 1.024e-01, 4.393e-02) * s1_2_1;
	r3 += M4(1.130e-01, -6.676e-02, -1.662e-01, -1.202e-01, 8.948e-02, -1.075e-01, -3.256e-01, 2.764e-03, -3.085e-01, -6.205e-02, 1.837e-01, 1.000e-02, -3.832e-01, 3.190e-02, 1.197e-01, -8.205e-02) * s1_2_1;
	r0 += M4(-6.288e-02, 7.896e-02, -1.228e-01, 1.901e-01, 9.986e-02, -1.356e-01, -6.475e-02, 5.144e-02, 1.099e-01, 4.054e-02, 5.768e-02, 8.897e-02, 4.764e-02, -1.344e-03, 8.931e-02, -1.187e-01) * s1_2_2;
	r1 += M4(-2.897e-03, -3.796e-02, -5.527e-02, 1.636e-01, -1.392e-02, 1.704e-01, 8.049e-03, 1.347e-02, 1.586e-01, -7.896e-02, 1.273e-01, 1.899e-01, 3.058e-02, -7.920e-02, 4.984e-02, 1.079e-01) * s1_2_2;
	r2 += M4(-8.823e-02, -1.971e-02, 4.525e-01, -1.080e-01, 1.046e-01, -4.691e-03, -5.426e-01, 2.080e-01, -1.230e-01, 8.231e-02, -2.839e-01, -1.858e-01, -6.283e-02, -1.692e-01, -1.931e-01, -7.212e-02) * s1_2_2;
	r3 += M4(-1.273e-01, -8.145e-02, -2.100e-01, 2.827e-02, 2.608e-02, -6.549e-03, 4.186e-02, 4.297e-02, 1.217e-01, 8.081e-02, -1.404e-01, 1.018e-01, -4.829e-02, 1.126e-01, 1.401e-01, -2.083e-01) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(1.415e-02, -4.176e-01, 6.943e-03, -1.002e-01, -9.155e-02, -2.065e-01, 2.580e-02, -5.542e-02, 2.294e-01, -2.085e-01, 3.427e-02, 1.710e-01, 2.132e-02, -1.177e-01, -2.785e-02, 1.209e-01) * s0_0_0;
	r1 += M4(-5.188e-03, 1.648e-02, 3.963e-02, 6.774e-02, 3.608e-02, 2.521e-02, 2.773e-03, -2.840e-02, 4.601e-02, 1.138e-01, 9.917e-03, -5.575e-02, 1.646e-01, -4.954e-02, -2.530e-02, 7.056e-02) * s0_0_0;
	r2 += M4(1.811e-01, -8.905e-02, -2.196e-01, 1.022e-01, -2.617e-02, 6.513e-02, -6.282e-02, -5.559e-02, 1.153e-01, 1.554e-02, -6.495e-03, 8.331e-02, 2.071e-02, 1.040e-01, -2.590e-01, -1.237e-01) * s0_0_0;
	r3 += M4(-1.830e-02, -1.075e-02, -1.652e-01, 4.419e-02, -1.751e-01, -3.978e-03, 7.540e-02, 5.417e-02, -9.050e-02, 3.868e-02, 7.995e-02, 1.756e-01, -3.664e-01, 2.851e-03, -1.387e-01, 1.439e-01) * s0_0_0;
	r0 += M4(-9.858e-03, 2.079e-02, -5.071e-02, 2.875e-03, -7.879e-03, -2.845e-03, -6.655e-02, 4.909e-02, -1.294e-01, -1.971e-01, 8.363e-02, 1.976e-02, 3.465e-01, 1.172e-01, -2.093e-02, 1.224e-01) * s0_0_1;
	r1 += M4(-6.145e-02, -1.179e-01, -1.589e-03, 3.946e-02, -1.435e-01, -1.448e-02, 1.027e-01, 6.205e-02, 7.676e-02, 9.985e-02, 5.668e-02, 9.101e-03, -7.382e-02, 1.160e-01, -1.809e-03, 3.573e-02) * s0_0_1;
	r2 += M4(1.536e-01, -6.273e-02, -8.663e-02, 5.456e-02, 1.213e-01, 1.710e-01, -3.276e-02, -2.418e-03, 6.351e-02, 1.882e-02, -4.362e-02, 7.021e-02, -1.612e-01, -1.608e-01, 1.922e-01, 8.997e-02) * s0_0_1;
	r3 += M4(9.581e-02, -1.034e-01, 5.050e-02, 1.608e-03, -2.859e-02, 6.043e-02, -3.243e-02, -3.378e-02, 8.842e-02, -8.594e-03, 5.823e-02, 1.108e-01, 1.646e-01, 5.861e-02, -6.031e-03, 8.165e-02) * s0_0_1;
	r0 += M4(-5.676e-02, 2.548e-01, 2.564e-02, 2.339e-03, 5.877e-02, -1.233e-02, -3.058e-03, 2.399e-01, 3.738e-02, 1.437e-02, 1.422e-02, 1.500e-01, -4.846e-02, 9.869e-02, -3.830e-02, -8.009e-03) * s0_0_2;
	r1 += M4(-5.507e-02, -2.978e-02, 2.042e-02, 7.359e-03, -4.295e-02, -8.970e-03, 4.239e-02, -3.339e-02, -1.594e-02, 1.878e-02, 2.718e-02, 1.707e-02, 9.312e-02, -4.671e-02, 3.406e-02, 7.122e-02) * s0_0_2;
	r2 += M4(1.816e-02, -5.151e-02, -9.385e-02, -5.276e-02, -4.706e-02, -4.333e-02, 8.636e-02, 9.690e-02, -1.947e-02, 7.433e-02, -2.576e-03, -2.471e-02, 3.861e-02, -9.249e-02, 3.653e-02, 6.545e-02) * s0_0_2;
	r3 += M4(-3.963e-02, -3.099e-02, 9.518e-02, 4.315e-03, 1.429e-01, -1.531e-03, 1.851e-01, -8.291e-02, 5.085e-02, -4.299e-02, 6.777e-02, 5.463e-02, 5.474e-02, 3.425e-03, -5.034e-02, -2.972e-02) * s0_0_2;
	r0 += M4(-1.728e-01, 2.495e-01, 5.178e-02, 5.796e-02, -4.452e-02, 2.345e-01, -5.113e-02, 1.962e-01, 3.721e-01, -2.327e-01, 7.180e-02, 7.789e-02, -2.811e-01, -9.239e-03, -8.632e-02, -1.334e-01) * s0_1_0;
	r1 += M4(6.097e-02, -2.112e-01, 5.786e-02, -6.126e-02, -7.255e-02, 3.493e-02, -2.468e-02, -3.849e-02, 5.484e-03, -5.138e-02, 2.357e-02, 9.361e-03, -2.970e-02, -7.687e-02, -5.466e-02, -1.907e-01) * s0_1_0;
	r2 += M4(3.064e-03, 1.657e-01, -5.651e-02, -8.220e-02, 4.356e-02, 4.733e-02, 1.494e-01, -1.023e-01, -1.238e-01, 4.213e-02, -2.851e-03, 3.115e-01, 5.569e-02, 3.043e-02, -2.504e-01, -1.076e-01) * s0_1_0;
	r3 += M4(3.218e-02, 1.951e-01, -1.503e-01, -1.321e-01, 1.742e-01, 5.060e-02, 1.063e-01, -3.200e-02, -3.239e-02, 1.186e-01, -1.293e-02, 8.327e-02, -3.197e-01, -5.871e-02, 3.297e-01, 1.151e-02) * s0_1_0;
	r0 += M4(-1.445e-01, -2.741e-01, -8.884e-02, -3.098e-01, -1.942e-01, -2.608e-01, 5.558e-02, -5.811e-02, 1.833e-01, 2.133e-01, 7.145e-02, 1.688e-01, 1.454e-01, -8.016e-03, 1.079e-01, 3.044e-03) * s0_1_1;
	r1 += M4(-3.513e-02, 2.487e-02, -1.626e-01, 2.828e-02, 2.034e-01, 1.184e-01, 1.033e-01, -1.380e-01, 4.935e-02, 1.427e-01, 5.669e-02, 1.136e-01, -7.022e-02, 2.603e-01, 7.349e-02, -2.300e-01) * s0_1_1;
	r2 += M4(1.327e-02, -1.014e-01, -2.481e-01, 7.765e-02, 3.213e-01, -1.548e-01, -1.949e-02, 9.152e-02, -1.198e-01, 6.144e-02, -3.235e-01, 2.006e-01, 1.894e-01, 2.125e-02, 3.011e-01, 4.450e-02) * s0_1_1;
	r3 += M4(2.092e-01, -1.258e-02, -2.330e-01, 2.284e-02, -1.514e-01, -1.167e-01, 6.412e-02, 2.150e-01, 6.810e-02, 8.802e-02, -3.831e-02, 2.720e-02, 3.308e-01, -1.105e-01, 3.838e-01, 1.110e-01) * s0_1_1;
	r0 += M4(4.026e-03, 1.857e-01, 6.877e-02, 1.800e-01, -2.306e-01, 1.637e-01, 2.179e-02, -1.519e-01, 1.517e-01, -9.373e-02, -2.881e-02, 1.645e-01, -5.460e-02, 1.779e-01, -1.247e-02, 6.848e-02) * s0_1_2;
	r1 += M4(-1.340e-01, 1.384e-01, 4.753e-02, -2.815e-02, -1.326e-02, 9.559e-02, 2.653e-02, 1.084e-01, 2.433e-02, 3.499e-04, 3.472e-02, 9.049e-02, -3.784e-04, -9.758e-02, -4.129e-02, 1.431e-02) * s0_1_2;
	r2 += M4(1.510e-01, 2.017e-02, -3.252e-02, 1.712e-01, 1.014e-01, 2.015e-02, -1.576e-01, 1.016e-01, -4.766e-02, 1.260e-01, -1.665e-01, 4.862e-02, 3.880e-02, -4.721e-02, 3.091e-02, 3.892e-02) * s0_1_2;
	r3 += M4(-2.772e-01, 2.761e-03, -2.897e-02, 2.062e-01, 9.413e-02, -1.252e-02, 4.700e-02, 2.652e-01, 8.195e-02, -3.180e-02, -2.049e-02, 1.571e-02, 8.458e-02, 4.861e-03, -9.162e-03, 2.185e-02) * s0_1_2;
	r0 += M4(-9.348e-03, 9.784e-02, 5.021e-02, 3.522e-01, -8.864e-02, 2.562e-01, 8.132e-02, 9.289e-03, 3.015e-01, -1.094e-02, -1.550e-02, 2.527e-01, -1.075e-01, -3.685e-02, 1.265e-01, 2.101e-01) * s0_2_0;
	r1 += M4(-1.360e-01, 5.339e-03, 4.588e-03, -2.922e-01, 2.006e-02, -7.342e-02, -1.124e-02, 6.931e-03, 8.073e-02, 2.643e-02, -8.869e-03, 3.346e-02, 6.326e-02, 4.025e-02, -4.186e-02, -1.287e-01) * s0_2_0;
	r2 += M4(-3.655e-02, -6.910e-02, 2.397e-01, -5.521e-02, -2.372e-02, -5.722e-02, -7.453e-02, 2.776e-02, -1.385e-01, 3.675e-02, 3.682e-01, -3.116e-02, -1.083e-01, -1.485e-01, 1.142e-01, 7.043e-03) * s0_2_0;
	r3 += M4(-1.610e-01, 2.648e-02, 1.243e-01, -8.350e-03, -3.259e-02, 2.625e-03, 1.474e-02, -1.372e-02, -9.204e-02, 9.664e-02, -2.425e-02, 1.704e-01, -2.834e-01, -2.483e-01, 1.195e-01, 5.858e-02) * s0_2_0;
	r0 += M4(2.893e-01, -1.689e-01, -2.851e-02, -1.829e-01, -9.931e-02, -1.842e-01, 2.904e-02, -9.026e-02, 1.505e-01, -3.225e-02, -7.446e-02, 2.227e-01, 2.028e-04, 3.738e-02, 2.649e-01, -1.864e-01) * s0_2_1;
	r1 += M4(1.186e-01, 2.708e-01, -3.846e-02, 1.262e-01, 2.125e-02, 7.838e-02, 6.768e-03, 2.689e-03, 1.372e-01, -3.039e-02, 7.256e-03, 1.095e-01, 1.247e-01, 5.162e-02, 3.622e-02, -3.441e-01) * s0_2_1;
	r2 += M4(-2.685e-01, 1.730e-02, 2.846e-01, 1.373e-01, -2.143e-02, 1.222e-01, -2.537e-01, 1.401e-02, 3.288e-03, 1.390e-01, -6.549e-02, 6.656e-02, 5.635e-02, 1.350e-02, -9.279e-02, 1.528e-01) * s0_2_1;
	r3 += M4(2.026e-01, -6.031e-02, 3.033e-01, 4.923e-02, -7.017e-02, 4.018e-02, -7.587e-02, -9.045e-02, 2.060e-01, 7.016e-02, -6.332e-02, 1.897e-01, 2.006e-01, -6.575e-02, 1.188e-01, -4.962e-02) * s0_2_1;
	r0 += M4(1.011e-01, 9.327e-02, 1.468e-01, -2.206e-01, -1.125e-01, 1.306e-01, -3.540e-02, -5.913e-02, 1.692e-01, 1.223e-01, -8.280e-04, 2.996e-01, -2.175e-01, -3.246e-02, -1.242e-02, 9.894e-02) * s0_2_2;
	r1 += M4(-1.913e-03, -1.468e-01, 8.632e-02, 8.097e-02, 2.079e-02, -7.737e-02, 3.102e-02, -1.584e-02, 2.278e-02, -5.689e-02, 5.370e-02, 1.739e-02, 1.549e-02, -3.808e-02, -1.105e-02, 1.599e-01) * s0_2_2;
	r2 += M4(-3.728e-02, -3.137e-02, -5.818e-01, -9.186e-02, 3.476e-02, -2.541e-03, -3.870e-02, 1.062e-01, 2.810e-02, 9.725e-02, -2.585e-01, 2.632e-02, -2.695e-02, 3.487e-03, 7.938e-02, -2.484e-02) * s0_2_2;
	r3 += M4(-1.837e-01, -6.796e-02, 9.703e-02, 3.267e-02, 1.283e-01, -3.842e-02, 1.500e-01, 3.721e-02, 1.121e-01, 1.922e-02, -2.343e-02, 5.301e-02, 1.773e-01, -4.512e-02, -1.897e-02, 5.437e-02) * s0_2_2;
	r0 += M4(-7.113e-01, 4.498e-01, -3.789e-01, 4.461e-01, -1.704e-01, -1.892e-01, -3.254e-02, -1.238e-01, 2.977e-02, -1.736e-01, -1.185e-01, -1.671e-01, -2.837e-01, -1.195e-01, 1.192e-01, 4.582e-02) * s1_0_0;
	r1 += M4(-9.424e-01, -2.413e-01, 2.308e-02, -3.041e-01, 7.740e-02, -3.020e-01, -7.955e-02, 6.022e-02, 6.494e-02, 6.209e-02, -2.635e-02, 1.165e-01, 6.872e-02, 8.678e-02, 5.045e-02, 1.213e-01) * s1_0_0;
	r2 += M4(1.891e-01, 1.011e+00, 1.781e+00, 4.115e-01, 1.764e-01, 1.249e-01, 3.138e-01, 8.781e-02, 6.174e-03, -1.240e-01, -2.033e-02, -4.553e-02, 3.037e-03, -3.788e-02, -8.060e-02, -1.530e-03) * s1_0_0;
	r3 += M4(1.106e+00, 2.380e-01, -3.244e-01, -2.337e-02, -3.128e-01, -9.275e-02, 4.329e-01, 5.306e-02, -1.983e-01, -8.181e-02, 1.482e-02, 2.251e-02, -4.713e-02, -1.733e-01, 2.152e-02, 2.628e-01) * s1_0_0;
	r0 += M4(6.229e-01, -2.637e-01, 1.610e-01, -1.101e+00, 6.988e-01, 2.821e-01, -1.397e-02, -1.642e-01, 3.562e-01, -1.557e-01, 1.469e-01, -5.619e-02, -2.300e-01, -9.968e-02, -1.309e-02, 5.444e-02) * s1_0_1;
	r1 += M4(-2.257e-01, -2.931e-01, 1.069e-01, -6.496e-01, -1.159e-01, -2.113e-01, -1.326e-01, 3.010e-02, -3.283e-01, 2.169e-01, -8.932e-02, -1.779e-01, -3.234e-02, -1.118e-02, 2.372e-02, 5.896e-02) * s1_0_1;
	r2 += M4(-1.733e-01, 3.745e-01, 1.140e-01, -3.700e-01, -2.615e-02, 7.842e-02, 1.354e-01, 4.773e-02, -2.015e-01, 5.903e-02, 3.989e-01, -1.051e-02, -3.377e-02, 1.703e-01, 7.397e-03, 6.601e-02) * s1_0_1;
	r3 += M4(8.401e-02, 1.253e-01, -2.290e-02, -3.925e-01, 1.349e-01, 5.299e-02, 3.999e-01, 1.698e-02, -1.036e-01, 2.623e-01, 1.166e-01, 9.340e-02, 1.139e-01, -8.254e-02, 8.271e-02, -5.968e-02) * s1_0_1;
	r0 += M4(4.031e-01, 4.871e-01, -3.646e-01, -8.024e-02, 1.751e-02, -4.507e-02, 1.771e-02, -2.021e-01, 2.286e-01, 7.566e-02, -1.438e-01, -1.539e-01, -8.584e-02, -5.326e-02, 2.405e-02, -5.610e-02) * s1_0_2;
	r1 += M4(-2.982e-01, 1.974e-02, -5.880e-02, 3.762e-01, 9.762e-02, -8.268e-02, -1.205e-01, -3.030e-02, -1.154e-01, 1.126e-01, 3.721e-02, -1.054e-03, 5.495e-02, 2.242e-04, 4.414e-04, 1.936e-03) * s1_0_2;
	r2 += M4(7.900e-02, 1.060e-01, -1.297e+00, -1.076e+00, 2.598e-03, -1.457e-01, 2.492e-01, 1.937e-01, -8.757e-02, -1.416e-01, -4.842e-01, 2.368e-01, 7.087e-02, 1.294e-01, -8.281e-02, 3.684e-02) * s1_0_2;
	r3 += M4(-7.443e-01, -1.904e-01, 1.021e-02, -9.342e-01, -6.304e-02, 7.999e-02, 5.137e-02, -9.887e-03, 4.582e-02, 1.433e-01, 1.460e-01, -7.251e-02, 9.449e-02, 5.231e-03, -7.275e-02, -7.821e-02) * s1_0_2;
	r0 += M4(3.683e-02, 4.718e-02, 9.926e-02, 4.277e-02, -1.004e-01, -2.749e-01, 7.530e-02, 9.234e-02, 7.391e-03, -5.723e-01, 9.390e-04, -2.722e-01, -6.417e-02, 1.965e-01, -1.652e-01, 3.688e-01) * s1_1_0;
	r1 += M4(5.775e-03, 1.860e-01, 2.325e-03, -1.418e-01, -4.985e-02, -2.042e-01, -6.376e-02, -1.990e-01, -7.807e-02, 7.613e-03, -2.093e-02, 1.192e-01, 7.505e-02, 1.186e-01, -4.870e-02, -1.176e-01) * s1_1_0;
	r2 += M4(1.493e-01, -1.316e-01, 7.821e-02, 2.790e-01, 1.531e-01, 3.942e-01, 4.208e-01, -1.605e-02, -5.502e-02, 5.203e-03, 2.237e-01, 5.747e-02, 3.244e-01, 2.016e-01, -1.571e-01, -2.920e-01) * s1_1_0;
	r3 += M4(2.592e-02, -2.288e-01, 5.572e-02, 8.547e-02, 1.515e-01, 3.407e-01, -5.189e-01, 4.092e-02, -1.015e-01, 7.907e-02, 7.274e-02, 1.285e-01, -1.679e-01, 2.136e-01, -1.908e-01, 6.041e-02) * s1_1_0;
	r0 += M4(2.104e-01, -6.109e-02, 6.867e-02, 3.441e-01, 9.137e-02, -6.230e-01, 4.748e-01, -1.486e-01, -5.598e-03, 2.108e-01, 2.347e-01, -2.632e-01, 9.431e-03, -2.241e-01, -1.527e-01, -4.509e-01) * s1_1_1;
	r1 += M4(2.698e-01, -3.037e-01, 2.740e-01, 7.948e-01, 1.758e-01, -5.595e-01, -1.561e-01, -3.828e-01, -1.684e-01, -3.583e-03, 9.910e-02, -5.727e-01, 1.769e-01, 2.315e-01, -4.510e-02, 1.776e-01) * s1_1_1;
	r2 += M4(7.387e-02, 2.675e-01, 4.553e-01, -2.591e-01, 6.353e-01, -8.796e-02, -1.448e+00, -7.932e-02, -1.704e-01, -7.849e-02, 4.607e-01, -1.187e-02, -1.496e-01, 3.167e-01, -6.456e-01, -5.548e-02) * s1_1_1;
	r3 += M4(3.404e-01, 2.465e-01, -4.278e-02, -8.566e-02, 5.565e-01, -4.300e-01, -2.582e-01, -1.445e-01, 2.059e-01, 1.535e-01, -2.604e-02, 3.412e-02, -9.966e-03, 4.571e-02, -1.621e-01, -2.886e-01) * s1_1_1;
	r0 += M4(2.105e-01, -1.478e-01, -1.314e-01, -1.452e-03, 7.653e-02, 1.299e-01, 8.185e-02, -9.876e-02, 1.924e-01, -1.441e-01, 1.275e-01, -2.244e-01, 6.520e-02, 2.223e-03, 8.282e-02, 9.142e-03) * s1_1_2;
	r1 += M4(-5.178e-02, 1.779e-01, 8.657e-02, -1.860e-01, -4.532e-02, -2.933e-01, -4.722e-02, 9.488e-02, -1.976e-01, -1.692e-02, 2.396e-02, -2.607e-01, 8.525e-02, 1.056e-01, 2.998e-02, -1.039e-02) * s1_1_2;
	r2 += M4(4.551e-02, 2.257e-01, 7.700e-02, 1.723e-01, -2.221e-01, -1.105e-01, 2.546e-01, -1.407e-01, 7.541e-02, -2.029e-02, -6.584e-01, 3.288e-02, -2.677e-01, 4.140e-02, -8.555e-02, 4.446e-02) * s1_1_2;
	r3 += M4(-2.686e-01, 4.855e-02, -2.255e-01, 2.589e-01, 2.309e-01, 3.635e-02, 4.276e-02, 1.199e-01, 2.044e-01, 1.982e-01, 1.611e-01, -2.738e-01, -5.653e-02, 1.193e-02, -1.220e-02, -2.332e-01) * s1_1_2;
	r0 += M4(-8.958e-02, 6.361e-02, -3.112e-02, 5.070e-02, 1.417e-01, 3.349e-01, 5.128e-02, -7.224e-02, 6.519e-02, -1.899e-01, -3.702e-02, 1.248e-01, -4.671e-02, 4.832e-02, 5.981e-02, -3.451e-01) * s1_2_0;
	r1 += M4(1.954e-02, -2.892e-02, 6.779e-03, 3.112e-02, -1.178e-01, -3.671e-02, 1.277e-02, 1.275e-01, 7.416e-02, -1.397e-03, -1.614e-02, 1.888e-01, -8.688e-03, -1.412e-01, 2.408e-02, -9.595e-02) * s1_2_0;
	r2 += M4(-1.269e-02, 1.762e-01, 5.787e-01, -4.238e-02, 1.317e-01, 9.757e-02, 1.255e-01, 1.801e-02, 7.886e-02, 6.241e-02, -7.787e-02, 3.134e-02, 7.511e-02, 1.598e-01, 3.647e-01, 5.722e-02) * s1_2_0;
	r3 += M4(-1.199e-02, 8.137e-03, 6.667e-03, -5.026e-02, 1.354e-01, -9.228e-03, 2.289e-01, -3.783e-02, -4.551e-02, -2.406e-02, -9.265e-02, -3.270e-02, 1.199e-01, 6.807e-02, -1.529e-01, 3.049e-02) * s1_2_0;
	r0 += M4(4.529e-02, -1.181e-02, -1.013e-01, -2.925e-02, -4.930e-02, 1.376e-01, -1.011e-01, -9.156e-02, -9.696e-02, 2.893e-01, 5.172e-02, 2.327e-01, 8.131e-02, -1.677e-01, 2.493e-02, 4.598e-01) * s1_2_1;
	r1 += M4(1.765e-02, 5.704e-02, 6.322e-02, 9.746e-03, 1.006e-01, -3.221e-01, 8.398e-03, 3.739e-01, -1.894e-01, -1.336e-01, -4.929e-02, -2.832e-01, 9.686e-03, 6.865e-02, -3.060e-02, -2.666e-01) * s1_2_1;
	r2 += M4(-1.084e-01, -9.788e-02, -6.439e-01, 1.219e-01, -9.634e-02, 3.119e-01, -1.431e-01, -1.688e-01, 1.220e-01, -4.142e-02, 6.770e-02, -6.163e-03, 1.608e-01, -4.085e-02, 3.486e-01, 1.073e-01) * s1_2_1;
	r3 += M4(3.005e-02, 1.002e-01, 3.270e-02, 6.364e-02, 1.085e-01, 2.931e-02, -2.031e-01, -1.173e-01, -3.284e-02, -6.953e-02, 1.018e-01, 1.035e-01, 3.478e-01, 4.897e-02, -1.572e-01, -1.047e-01) * s1_2_1;
	r0 += M4(5.739e-02, 5.798e-02, 6.915e-02, 9.598e-02, -9.518e-02, 3.532e-01, 4.216e-02, -5.039e-01, -1.086e-01, -1.025e-01, -7.039e-03, 5.945e-02, 4.226e-02, -6.097e-02, 6.346e-02, -2.137e-02) * s1_2_2;
	r1 += M4(5.613e-02, -1.100e-02, -9.746e-03, -7.590e-02, 2.551e-02, -1.339e-01, 1.048e-02, 2.590e-02, -1.174e-01, 5.452e-02, -2.178e-02, -1.719e-01, 1.209e-02, 8.966e-02, 2.780e-04, -7.941e-02) * s1_2_2;
	r2 += M4(1.614e-03, -4.050e-02, -6.126e-01, -1.120e-01, 1.812e-01, -1.179e-01, -4.274e-01, -1.474e-01, 1.564e-01, 1.408e-01, 2.446e-01, 1.030e-01, 1.036e-01, 2.515e-02, -2.189e-02, 6.164e-02) * s1_2_2;
	r3 += M4(1.587e-01, 1.476e-03, 1.240e-03, 7.587e-02, -1.176e+00, 1.040e-01, 1.472e-01, 1.251e-01, 1.582e-01, 2.565e-02, 2.010e-03, -4.087e-02, 1.324e-01, 2.763e-02, 3.858e-02, 5.914e-02) * s1_2_2;
	r0 += V4(1.129e-02, -2.409e-02, -6.655e-03, 5.771e-02);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(-1.310e-02, 1.823e-02, -1.397e-02, 3.210e-02);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-1.583e-02, 5.569e-03, -8.128e-03, 2.911e-02);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-2.725e-02, -8.280e-03, -3.215e-02, 1.388e-02);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-6x16-BILINEAR-MPV-NVL-DS-conv4
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv3
//!BIND LUMA
//!SAVE conv4
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv3_pt;
			V4 sr0 = V4(conv3_gather(p, 0));
			V4 sg0 = V4(conv3_gather(p, 1));
			V4 sb0 = V4(conv3_gather(p, 2));
			V4 sa0 = V4(conv3_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(3.553e-03, 7.431e-02, 8.857e-02, 7.451e-02, 1.034e-01, -5.507e-02, 4.930e-02, -6.796e-02, 1.006e-01, -3.351e-03, 2.620e-02, -3.313e-02, 1.123e-01, -7.965e-02, -1.119e-01, -1.087e-01) * s0_0_0;
	r1 += M4(1.222e-02, 1.586e-01, -4.604e-02, -3.805e-02, -1.651e-02, 4.284e-02, 7.691e-02, 8.822e-02, 1.441e-01, -8.391e-02, -6.926e-02, 7.795e-02, 2.821e-02, -4.540e-01, -6.525e-02, 2.483e-01) * s0_0_0;
	r2 += M4(7.327e-02, -1.807e-02, 2.190e-02, 6.329e-02, -1.255e-01, 8.926e-03, 1.435e-02, 1.373e-01, -1.381e-01, -1.129e-01, 1.196e-01, -6.957e-02, 2.106e-02, 1.023e-01, -2.825e-02, -1.099e-01) * s0_0_0;
	r3 += M4(6.217e-02, -7.309e-01, 1.089e-01, -3.100e-02, -1.456e-01, -2.487e+00, -1.489e-01, 9.418e-02, -1.859e-02, -1.174e+00, -1.990e-01, -9.888e-02, -3.811e-02, -3.156e+00, 4.715e-02, 5.901e-02) * s0_0_0;
	r0 += M4(2.804e-02, 3.436e-02, -1.387e-02, 1.193e-01, 1.245e-01, 2.745e-02, 9.094e-02, 7.175e-02, -3.857e-01, 2.292e-01, -4.668e-02, -9.748e-02, 2.134e-01, -1.355e-01, -8.299e-02, -2.258e-01) * s0_0_1;
	r1 += M4(-2.081e-02, 1.070e-01, -3.750e-02, 4.407e-02, -4.662e-02, -2.171e-01, 1.088e-01, 8.244e-02, 6.063e-02, 2.048e-01, -2.763e-01, 1.946e-01, 3.794e-02, -2.196e-01, -2.019e-01, 1.464e-01) * s0_0_1;
	r2 += M4(2.025e-01, -1.457e-02, -1.330e-02, 3.095e-02, -1.068e-01, -1.251e-01, -3.024e-02, 1.495e-04, 2.904e-01, 6.875e-02, 1.138e-01, -1.682e-02, -2.113e-01, 3.316e-02, 2.519e-02, -1.396e-01) * s0_0_1;
	r3 += M4(1.459e-01, 4.259e-01, 1.978e-01, -4.678e-02, 5.835e-02, -5.900e-02, -1.731e-01, -6.593e-02, 4.700e-02, 3.120e-01, 1.484e-01, -1.806e-01, -5.785e-02, -2.007e-01, -5.675e-01, 8.662e-02) * s0_0_1;
	r0 += M4(1.658e-02, 4.893e-02, 4.727e-02, 1.924e-01, 9.707e-02, 2.847e-03, 8.088e-02, 1.178e-01, -1.192e-01, 2.026e-01, -2.115e-02, 1.168e-01, 2.841e-01, -3.647e-02, -7.585e-02, -2.993e-01) * s0_0_2;
	r1 += M4(-1.468e-03, 1.307e-03, -5.956e-02, 8.003e-02, -1.333e-02, -3.521e-01, -9.933e-02, 3.684e-01, -1.225e-02, 2.826e-01, 1.101e-02, -7.540e-02, 5.025e-02, -6.470e-02, -7.580e-02, 2.510e-01) * s0_0_2;
	r2 += M4(2.426e-01, 4.846e-02, -4.889e-02, 1.604e-02, -7.088e-02, 1.577e-01, -2.506e-02, -3.970e-02, 5.669e-02, 1.074e-01, 5.742e-03, 1.226e-01, -2.664e-01, -9.785e-02, 5.047e-02, -3.051e-02) * s0_0_2;
	r3 += M4(6.138e-02, -3.366e-03, 2.546e-01, -3.211e-02, -7.837e-02, 1.624e-01, 1.988e-01, -1.466e-01, -1.188e-01, 1.636e-01, 1.341e-01, -7.661e-02, 6.090e-02, -2.862e-01, -5.112e-02, 1.137e-02) * s0_0_2;
	r0 += M4(-1.988e-03, 6.978e-02, 1.350e-03, 1.501e-01, 4.624e-02, -2.189e-02, -1.303e-01, -9.583e-03, 2.320e-02, -2.106e-02, 3.014e-02, 3.195e-05, 2.221e-01, -8.349e-02, -2.879e-01, -3.172e-02) * s0_1_0;
	r1 += M4(6.060e-03, -1.141e-01, -1.760e-02, 6.245e-02, 5.232e-02, 1.411e-01, 9.526e-03, 1.200e-01, 4.846e-02, 1.773e-01, -7.118e-02, -1.343e-01, 4.422e-02, -2.654e-01, 4.230e-02, 1.361e-01) * s0_1_0;
	r2 += M4(6.169e-02, 1.208e-01, 3.836e-02, 4.045e-02, 5.915e-02, 5.752e-02, -2.892e-02, 1.754e-02, 6.339e-02, -1.934e-01, -1.549e-02, 2.385e-02, -2.845e-02, -2.158e-02, -6.481e-02, -2.911e-02) * s0_1_0;
	r3 += M4(8.724e-02, -1.899e-01, 7.005e-02, -2.421e-02, -8.156e-02, 2.300e-01, -2.885e-02, -1.951e-01, -2.116e-01, 4.706e-02, 9.426e-02, -2.021e-01, -2.637e-02, -4.528e-01, 2.373e-02, 7.965e-02) * s0_1_0;
	r0 += M4(7.616e-02, 8.040e-02, 1.045e-01, 3.519e-01, 1.333e-01, -2.324e-02, 4.590e-01, 2.199e-01, 4.590e-02, -3.276e-02, 8.091e-02, 1.755e-01, 2.242e-01, -2.371e-01, -8.116e-02, 8.389e-02) * s0_1_1;
	r1 += M4(2.045e-02, -3.426e-02, -4.806e-02, -1.839e-02, 1.623e-02, -3.393e-01, -1.328e-01, 1.586e-01, -3.657e-02, -3.403e-01, 1.157e-01, 1.530e-02, 1.047e-01, -1.439e-01, 1.643e-01, 2.648e-01) * s0_1_1;
	r2 += M4(-3.915e-02, 1.218e-01, 6.561e-02, 7.399e-02, 1.392e-01, -1.550e-01, 1.004e-01, 1.462e-01, 4.515e-01, 4.157e-01, 2.686e-01, -1.211e-01, -4.951e-02, -1.094e-02, 2.231e-02, -1.133e-01) * s0_1_1;
	r3 += M4(-4.227e-02, 5.036e-02, -3.121e-01, -5.812e-02, -1.762e-02, 3.567e-01, 1.575e-01, 1.165e-01, 1.948e-03, -2.683e-02, -2.372e-01, -2.978e-01, 9.173e-02, 3.331e-02, -1.976e-01, 1.701e-02) * s0_1_1;
	r0 += M4(-3.350e-02, 1.143e-01, 5.000e-03, 2.641e-01, -7.922e-02, -1.372e-01, -3.996e-02, -1.231e-01, 4.759e-02, 6.001e-02, -1.536e-02, 2.240e-01, 1.617e-01, -1.372e-01, -7.455e-02, -4.953e-02) * s0_1_2;
	r1 += M4(2.480e-02, 4.067e-01, 3.248e-02, -9.527e-02, -9.458e-02, -9.183e-02, -6.834e-02, -4.714e-02, -2.831e-03, -5.513e-01, -1.532e-01, 2.442e-02, 3.465e-02, -2.255e-01, -7.417e-02, 1.247e-01) * s0_1_2;
	r2 += M4(1.097e-01, 1.533e-01, 1.313e-02, -2.242e-02, 1.439e-01, 2.636e-01, -1.054e-01, -1.453e-01, 2.203e-02, -1.408e-02, 9.003e-02, 1.013e-01, -3.628e-01, -1.407e-01, 2.351e-02, -1.032e-02) * s0_1_2;
	r3 += M4(1.713e-02, 2.438e-01, 1.490e-01, -3.229e-02, -1.317e-01, 9.736e-02, -1.507e-01, -1.344e-01, 1.715e-01, -1.025e-01, 3.818e-02, 1.201e-02, 5.014e-02, -6.183e-02, 1.134e-02, 9.450e-02) * s0_1_2;
	r0 += M4(1.129e-01, 7.319e-02, -6.461e-02, 7.974e-02, 9.448e-02, 2.117e-02, -6.652e-02, -8.593e-02, -3.936e-03, -5.138e-02, 1.062e-02, -1.611e-02, 2.373e-01, 3.145e-02, -2.467e-01, -2.187e-01) * s0_2_0;
	r1 += M4(3.612e-02, -5.835e-02, -5.846e-03, 1.511e-01, 4.732e-02, -1.793e-01, 2.729e-02, 9.403e-02, 1.569e-02, -7.920e-02, 3.865e-02, -1.530e-02, 7.835e-02, -2.207e-02, -2.691e-02, 1.313e-01) * s0_2_0;
	r2 += M4(1.398e-01, 1.042e-01, -1.505e-02, -1.164e-02, 2.581e-02, 8.494e-02, -3.871e-02, 1.423e-02, -7.990e-02, -6.974e-02, 4.142e-02, 5.434e-02, -2.345e-01, -1.007e-01, 3.316e-02, -1.277e-02) * s0_2_0;
	r3 += M4(-1.236e-03, -1.862e-01, 2.351e-02, 5.425e-02, -9.262e-02, 4.350e-02, 8.071e-03, 1.048e-01, -6.042e-02, -1.822e-01, 6.668e-02, 1.961e-02, 4.753e-02, -3.038e-01, -2.031e-01, -6.357e-02) * s0_2_0;
	r0 += M4(1.403e-01, -3.421e-02, -1.164e-01, 4.572e-02, 2.041e-01, -8.929e-02, 5.125e-02, 6.362e-02, 1.070e-02, -3.517e-02, -7.879e-02, 1.156e-02, 1.894e-01, -9.851e-02, -2.916e-01, -1.358e-01) * s0_2_1;
	r1 += M4(6.183e-03, 1.113e-02, -3.263e-02, 1.939e-01, 5.384e-03, -2.783e-01, 7.088e-02, 1.492e-01, -3.280e-02, 8.674e-02, 3.776e-02, -1.067e-01, 3.578e-02, 1.090e-01, 3.182e-02, 6.480e-02) * s0_2_1;
	r2 += M4(1.390e-01, -8.985e-02, 2.147e-02, -2.030e-01, -2.242e-01, 3.237e-02, -2.413e-02, 1.675e-01, -1.762e-01, -8.266e-02, -7.036e-02, -1.228e-01, -5.345e-02, -1.383e-01, -1.093e-02, -8.347e-02) * s0_2_1;
	r3 += M4(7.545e-02, -1.091e-01, -2.542e-01, -3.308e-02, -1.597e-01, -9.011e-03, 1.065e-01, 1.023e-02, 2.548e-02, 6.665e-02, 6.759e-04, 6.290e-02, -7.008e-03, -9.690e-03, -6.395e-02, 1.284e-01) * s0_2_1;
	r0 += M4(5.580e-02, -1.773e-02, 3.552e-02, -1.892e-02, -1.010e-01, 7.413e-02, 1.356e-01, 5.473e-02, 9.423e-02, -1.556e-02, -6.714e-03, -7.727e-02, 1.325e-01, -5.915e-02, 2.528e-02, -1.088e-01) * s0_2_2;
	r1 += M4(2.101e-02, -1.339e-02, -5.107e-02, 3.218e-02, -8.665e-02, -4.206e-01, -9.484e-02, -6.181e-02, 7.202e-02, 2.496e-01, 1.480e-01, 5.599e-02, 2.686e-02, 4.457e-02, -5.367e-03, 1.687e-01) * s0_2_2;
	r2 += M4(1.178e-01, -8.827e-02, 4.799e-03, 7.274e-02, 2.234e-01, 2.284e-01, 1.655e-02, 5.844e-02, -1.947e-01, -1.108e-01, 3.024e-02, 4.650e-02, -4.108e-01, 4.300e-04, 5.020e-02, -4.603e-02) * s0_2_2;
	r3 += M4(2.582e-02, 7.884e-02, 3.826e-02, 1.360e-02, -2.799e-02, 6.663e-02, -3.640e-02, -8.394e-02, -4.973e-02, -5.240e-02, -4.245e-02, -6.658e-02, -6.370e-02, -4.361e-02, -8.237e-02, 7.128e-02) * s0_2_2;
	r0 += M4(-4.624e-02, -5.387e-02, 1.230e-01, 1.081e-02, -2.024e-02, 4.982e-02, -1.970e-01, -3.018e-02, 1.770e-01, 1.345e-01, 2.351e-01, 5.700e-02, -6.179e-02, -2.132e-03, -1.382e-01, -3.250e-02) * s1_0_0;
	r1 += M4(-5.034e-02, -2.451e-01, 1.800e-01, 3.058e-02, -8.194e-03, -3.235e-01, -6.159e-03, -4.800e-02, -4.123e-02, -3.086e-02, -7.970e-02, -4.019e-02, 3.211e-02, -7.966e-02, -8.472e-02, -2.031e-01) * s1_0_0;
	r2 += M4(-8.898e-03, -5.529e-02, -2.286e-02, 3.844e-02, -2.710e-02, 1.367e-02, -4.523e-02, -6.689e-02, -1.641e-01, 3.028e-02, 1.088e-01, -3.529e-02, -1.883e-02, 3.031e-02, 2.361e-02, -4.470e-02) * s1_0_0;
	r3 += M4(-1.372e-02, -4.126e+00, 1.233e-01, -3.221e-02, -5.300e-02, -5.854e-01, 2.005e-01, 6.505e-02, 6.606e-02, -6.471e-01, -2.962e-01, -8.812e-02, -7.631e-03, -1.636e+00, -3.799e-02, -1.180e-01) * s1_0_0;
	r0 += M4(1.445e-01, -1.749e-01, -6.729e-02, 8.904e-02, -1.955e-02, 1.452e-02, 1.327e-01, -2.235e-01, 1.866e-01, -2.667e-01, 1.037e-01, -4.638e-01, -4.601e-01, 1.827e-01, 8.019e-02, 2.241e-01) * s1_0_1;
	r1 += M4(-7.397e-02, -3.496e-01, 3.811e-01, -1.500e-01, 2.840e-02, 1.254e-01, 1.648e-03, -5.396e-02, -4.315e-02, -4.921e-02, 2.300e-01, -2.217e-01, 8.620e-02, 2.331e-02, -4.161e-03, -9.733e-01) * s1_0_1;
	r2 += M4(-1.279e-02, -4.763e-02, -7.500e-02, 9.810e-03, 1.085e-01, -1.302e-01, 7.853e-02, 1.298e-01, -2.631e-01, 2.011e-02, -3.078e-04, 1.048e-01, -2.896e-02, 1.106e-01, 9.426e-02, -4.625e-03) * s1_0_1;
	r3 += M4(3.800e-02, -3.193e-01, 1.509e-01, 9.020e-02, -6.665e-02, 5.363e-02, -2.998e-01, 2.731e-02, 1.219e-01, -3.228e-02, 1.839e-01, 1.460e-03, 3.906e-01, 6.812e-01, 1.071e-02, -1.896e-01) * s1_0_1;
	r0 += M4(2.085e-01, -8.631e-02, 4.211e-02, 1.028e-01, 2.874e-02, -1.377e-02, 5.170e-02, -8.486e-02, 3.939e-02, -4.118e-02, 7.115e-02, -6.133e-02, -2.272e-01, -2.124e-02, -1.744e-01, 6.691e-02) * s1_0_2;
	r1 += M4(1.519e-02, -7.186e-02, -3.610e-02, 2.135e-01, -3.141e-02, -3.872e-02, 2.512e-02, -3.982e-02, 2.269e-02, 6.360e-02, -2.263e-02, 8.409e-02, -4.391e-03, -1.801e-02, 2.453e-01, -3.369e-01) * s1_0_2;
	r2 += M4(2.012e-01, -1.031e-01, -1.786e-03, 6.228e-02, 1.545e-02, 3.724e-04, 8.936e-03, -2.410e-02, 1.137e-02, 2.879e-02, -7.056e-02, 2.499e-02, -2.172e-01, 1.080e-01, 1.431e-02, -1.092e-01) * s1_0_2;
	r3 += M4(-1.102e-01, -2.181e-02, 1.411e-01, -4.138e-02, -2.586e-02, -1.100e-02, 2.619e-01, -1.285e-02, 2.283e-02, -4.952e-02, 1.143e-01, 1.365e-03, 5.673e-02, 4.087e-02, -2.149e-01, -1.718e-01) * s1_0_2;
	r0 += M4(-1.157e-02, 1.097e-02, 5.085e-02, 1.164e-02, -6.624e-02, -3.482e-02, -3.830e-01, -1.648e-01, 2.959e-01, -2.120e-02, 4.179e-01, -5.061e-02, 3.580e-02, -1.874e-02, -1.768e-01, -3.161e-02) * s1_1_0;
	r1 += M4(1.110e-01, 1.380e-01, 3.286e-02, 2.670e-03, 2.007e-01, -5.651e-02, -3.284e-02, 7.876e-02, -2.106e-01, -3.641e-02, -1.776e-02, -3.422e-02, 3.501e-02, -3.347e-01, -4.566e-02, -4.161e-02) * s1_1_0;
	r2 += M4(-1.183e-01, -8.633e-02, -5.285e-02, 3.403e-02, -9.816e-02, 1.999e-01, -1.460e-01, 1.370e-01, 1.432e-01, -1.412e-01, 2.909e-01, -5.407e-01, 5.548e-02, 4.119e-02, -2.114e-02, 6.730e-02) * s1_1_0;
	r3 += M4(1.804e-02, 5.632e-02, -1.924e-01, 2.644e-02, 4.287e-02, 1.652e-01, -1.628e-01, -1.591e-01, 2.911e-01, 2.726e-01, 3.296e-01, -1.480e-01, 1.396e-02, 1.036e-01, -2.363e-01, -6.653e-02) * s1_1_0;
	r0 += M4(2.164e-01, -1.578e-01, -3.596e-01, -2.278e-01, -1.368e-01, 1.401e-01, 1.655e-01, -2.802e-01, -6.590e-01, 4.444e-01, -7.709e-03, -1.082e+00, -4.299e-01, 1.156e-01, 1.786e-01, 1.511e-01) * s1_1_1;
	r1 += M4(-3.142e-02, 1.543e-01, 1.732e-01, -4.168e-02, 1.057e-01, -1.570e-01, -2.549e-01, 2.174e-01, 4.336e-01, -2.606e-01, -4.067e-01, -1.623e-02, 1.268e-02, 2.426e-01, -1.708e-01, -5.687e-01) * s1_1_1;
	r2 += M4(1.130e-01, -1.175e-01, -3.373e-01, 1.563e-01, -5.836e-01, 3.429e-01, 3.739e-02, 2.953e-02, -5.670e-01, -2.432e-01, 3.395e-01, 1.664e-01, 4.744e-01, 1.288e-01, 1.606e-01, 1.988e-01) * s1_1_1;
	r3 += M4(3.047e-01, 5.770e-02, 3.562e-01, -1.726e-02, 8.067e-02, 3.018e-02, -2.889e-01, -5.722e-02, -7.092e-01, 6.164e-01, 2.328e-01, 5.376e-01, -6.862e-02, 2.591e-01, 1.272e-01, 3.111e-01) * s1_1_1;
	r0 += M4(9.665e-02, -9.788e-02, -5.464e-02, 8.019e-02, -4.086e-02, -3.576e-02, -8.609e-02, -3.902e-01, 1.760e-02, -5.388e-02, 9.338e-02, -5.290e-01, -4.576e-01, 3.034e-02, -1.322e-01, -1.367e-02) * s1_1_2;
	r1 += M4(-2.417e-02, 1.498e-01, 2.486e-02, 1.009e-01, -1.339e-02, 8.961e-02, -4.064e-02, -3.693e-02, 8.423e-02, 1.077e-01, -4.669e-02, -1.310e-01, -7.771e-02, 5.827e-02, -7.114e-02, -3.930e-01) * s1_1_2;
	r2 += M4(1.677e-01, 1.119e-01, -7.703e-02, -4.035e-02, -2.984e-01, 9.496e-02, 7.341e-03, -1.013e-01, 2.382e-01, 6.661e-02, -1.708e-02, -9.136e-02, -2.309e-01, 2.130e-01, -1.360e-02, -8.004e-02) * s1_1_2;
	r3 += M4(1.270e-01, 7.774e-02, -2.653e-01, -1.374e-03, 4.359e-02, -4.259e-02, 8.293e-02, -4.674e-02, -2.926e-02, 1.173e-01, -1.102e-01, 8.171e-02, 4.341e-02, -2.649e-01, -1.070e-01, -4.650e-02) * s1_1_2;
	r0 += M4(-4.622e-03, 8.441e-02, 1.290e-02, -1.145e-01, -2.314e-01, 1.226e-02, -5.126e-03, -1.380e-01, 1.844e-01, -9.598e-02, -4.646e-03, 1.211e-01, -3.631e-02, -6.002e-03, -4.552e-02, -6.338e-02) * s1_2_0;
	r1 += M4(-1.282e-02, 2.298e-01, -1.038e-01, 5.778e-02, -1.879e-02, 4.482e-02, -1.064e-02, -2.250e-01, -7.914e-02, -1.108e-01, 8.890e-02, 1.540e-01, 1.737e-02, -1.180e-01, -3.547e-02, -8.165e-02) * s1_2_0;
	r2 += M4(-4.893e-02, -2.056e-03, 1.390e-01, 9.724e-03, -2.830e-01, -2.001e-02, 3.887e-02, -6.999e-02, -5.938e-02, -4.136e-02, 1.471e-02, -2.583e-02, 6.555e-02, 4.227e-02, -9.673e-03, -3.195e-02) * s1_2_0;
	r3 += M4(4.739e-02, -6.320e-02, -2.992e-01, 8.229e-02, -4.295e-02, -9.802e-02, -7.731e-02, 4.751e-03, -3.235e-02, -1.274e-02, 2.019e-02, 1.707e-01, 4.721e-03, -1.325e-01, 2.194e-02, -1.090e-03) * s1_2_0;
	r0 += M4(1.812e-01, -1.672e-02, -7.455e-02, 7.164e-02, -4.756e-02, 8.888e-03, -9.631e-03, -3.449e-01, 2.678e-03, -6.041e-02, 1.581e-01, -1.397e-01, -1.402e-01, -3.136e-02, 5.763e-02, 4.523e-02) * s1_2_1;
	r1 += M4(6.860e-02, -1.086e-01, 2.669e-02, 2.316e-02, 6.072e-02, -2.254e-02, -2.902e-02, -1.909e-01, 1.006e-02, 1.749e-01, 4.136e-02, 1.489e-01, -6.720e-04, 7.484e-03, -1.602e-02, -1.543e-01) * s1_2_1;
	r2 += M4(-4.993e-02, -2.020e-01, -6.265e-02, -4.794e-02, -2.891e-01, -9.027e-02, -1.514e-02, 6.155e-02, -2.221e-02, 1.840e-01, -6.284e-03, 1.496e-01, 8.646e-02, 8.392e-02, 1.992e-03, 4.361e-02) * s1_2_1;
	r3 += M4(-1.779e-03, -5.094e-02, 3.620e-01, 1.058e-01, 5.258e-02, -4.966e-02, 3.349e-01, 1.080e-02, -1.488e-02, -8.389e-02, 1.331e-01, -1.772e-02, -5.747e-02, 1.119e-02, 1.213e-01, -6.829e-02) * s1_2_1;
	r0 += M4(-4.555e-02, 2.751e-02, 6.797e-02, 1.999e-01, -5.809e-02, 3.767e-02, -1.210e-02, -2.318e-01, 1.591e-01, -3.559e-02, 1.947e-02, -1.887e-02, -3.943e-02, 1.765e-02, -2.947e-02, 7.338e-03) * s1_2_2;
	r1 += M4(-3.434e-02, -9.272e-02, 4.792e-02, 1.776e-01, -2.449e-02, 1.368e-01, -7.756e-03, -1.017e-01, -7.666e-02, 2.979e-01, 9.097e-02, 1.029e-01, 3.151e-03, 6.518e-02, -1.829e-02, -1.725e-01) * s1_2_2;
	r2 += M4(-6.457e-02, -1.040e-01, 5.011e-02, 1.433e-02, -6.943e-02, 3.921e-02, 3.401e-02, 3.139e-03, -1.430e-01, -4.390e-02, 9.788e-03, -3.879e-02, 1.821e-01, 1.546e-02, -2.844e-02, 4.351e-03) * s1_2_2;
	r3 += M4(-9.658e-02, 6.749e-02, -1.198e-01, -4.847e-02, 1.132e-02, -2.514e-02, -8.171e-02, -3.214e-02, -5.474e-02, -1.800e-01, -1.324e-01, 3.965e-02, 8.148e-02, -1.416e-02, 5.337e-02, -2.656e-02) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(-1.008e-01, -3.594e-02, -5.843e-02, -5.628e-02, 3.134e-02, -1.140e-01, 6.759e-02, 1.079e-01, -7.872e-02, -7.049e-02, 3.693e-01, -2.328e-02, -3.421e-03, -4.447e-03, 5.354e-02, -7.885e-04) * s0_0_0;
	r1 += M4(8.051e-03, 1.550e-01, -5.355e-02, 3.753e-02, -4.806e-02, -1.649e-02, 1.962e-02, 1.146e-01, 2.773e-02, -2.479e-01, -7.497e-02, 8.266e-02, -9.351e-02, 5.095e-01, 1.091e-01, 5.149e-02) * s0_0_0;
	r2 += M4(1.626e-01, 4.325e-02, -2.286e-02, 7.248e-02, -8.995e-03, 6.126e-02, -1.325e-02, 1.222e-01, 1.065e-01, 4.771e-02, 6.278e-02, 2.395e-01, -4.696e-02, -3.318e-02, -1.049e-01, -5.377e-02) * s0_0_0;
	r3 += M4(-1.090e-02, -1.092e+00, 7.657e-02, 2.007e-02, 5.418e-02, -4.742e-02, 8.789e-02, 4.356e-02, 4.692e-02, -8.959e-01, -5.295e-02, 3.054e-01, -1.850e-01, -7.458e-01, -6.403e-02, 6.493e-02) * s0_0_0;
	r0 += M4(-2.232e-02, -1.059e-01, 1.151e-02, -5.379e-02, 1.472e-01, -2.227e-02, -1.758e-02, 1.478e-01, -7.988e-02, -1.067e-01, -3.429e-02, -1.454e-01, 1.019e-01, 3.268e-02, 2.120e-02, -5.738e-02) * s0_0_1;
	r1 += M4(-3.705e-03, 1.953e-02, -5.210e-02, -1.076e-01, 4.695e-02, -1.834e-01, -4.744e-04, 1.048e-01, -2.872e-02, -2.432e-01, 1.156e-01, -1.002e-01, -6.332e-02, 2.946e-01, 1.201e-01, -3.585e-02) * s0_0_1;
	r2 += M4(1.499e-01, -1.396e-02, -3.576e-02, 2.482e-02, -3.604e-02, 5.166e-02, -4.799e-02, -4.018e-02, 3.134e-02, -2.585e-02, -5.359e-02, -8.850e-02, 1.782e-01, -4.736e-02, 8.028e-03, -4.501e-02) * s0_0_1;
	r3 += M4(1.341e-02, 2.401e-01, 6.414e-02, -8.800e-02, 2.657e-01, 4.831e-03, -2.010e-02, -1.999e-01, -3.268e-02, 2.273e-01, 1.939e-01, 7.302e-02, -9.599e-02, 2.636e-02, -8.645e-02, -2.019e-02) * s0_0_1;
	r0 += M4(-7.468e-02, -6.247e-03, 7.708e-02, -2.266e-03, 1.815e-02, -2.105e-02, -3.373e-02, 1.099e-01, 1.885e-02, -2.638e-02, 8.935e-03, -1.104e-01, -4.499e-02, 8.868e-04, -6.607e-02, 5.945e-02) * s0_0_2;
	r1 += M4(-4.632e-02, 8.070e-02, 9.985e-02, -1.004e-02, 3.460e-02, -2.929e-01, -6.588e-02, 4.662e-02, 4.561e-03, -1.055e-03, -5.228e-02, 1.155e-01, -2.588e-02, 8.088e-02, -3.782e-02, 9.659e-03) * s0_0_2;
	r2 += M4(2.154e-02, 1.248e-01, 2.348e-03, 3.109e-02, -1.054e-01, -6.326e-03, 1.499e-02, -5.231e-02, 4.299e-02, 5.082e-03, -7.214e-03, 1.212e-02, -2.120e-01, -3.753e-02, -4.560e-02, 3.606e-03) * s0_0_2;
	r3 += M4(2.816e-02, 3.321e-01, -5.474e-02, -4.442e-02, 2.500e-02, 3.024e-03, -1.171e-01, -1.439e-02, 7.214e-02, -1.843e-02, -1.105e-01, -2.499e-02, 3.006e-02, -1.793e-01, -1.613e-03, -5.864e-02) * s0_0_2;
	r0 += M4(9.778e-02, 4.549e-02, -3.662e-02, -3.997e-03, 9.371e-02, -3.310e-02, -9.447e-02, -5.703e-02, 2.931e-02, -4.133e-02, -1.007e-01, 1.899e-02, 1.397e-01, -3.195e-02, -1.536e-01, -2.945e-02) * s0_1_0;
	r1 += M4(4.661e-02, -3.869e-01, -6.239e-02, 1.124e-01, 9.058e-02, 5.994e-01, 6.958e-02, 1.288e-01, -4.283e-02, 2.425e-01, -1.140e-01, 1.001e-01, 1.091e-01, 5.000e-01, 1.013e-01, 2.354e-01) * s0_1_0;
	r2 += M4(-8.525e-02, -7.240e-02, -6.026e-02, -1.096e-01, 4.188e-01, 2.371e-02, -6.969e-02, 1.777e-01, 1.112e-01, 1.935e-01, -1.018e-01, 3.462e-01, 8.390e-02, -1.206e-01, -1.030e-01, -1.953e-01) * s0_1_0;
	r3 += M4(-2.243e-01, -7.619e-01, 1.095e-02, 3.110e-02, -3.448e-02, 4.801e-01, -4.623e-02, 1.875e-02, -1.366e-01, -1.389e-01, 5.787e-02, 3.039e-01, -6.263e-02, -3.033e-01, -5.377e-01, 6.607e-02) * s0_1_0;
	r0 += M4(9.840e-02, -2.466e-01, -5.549e-01, -8.310e-02, -4.432e-01, -9.165e-03, -1.790e-01, -4.793e-02, -6.517e-02, 9.781e-02, 1.948e-01, -7.105e-02, 1.759e-01, -4.862e-02, -3.495e-02, -1.428e-01) * s0_1_1;
	r1 += M4(6.212e-02, -6.060e-01, 2.805e-02, 1.321e-01, 1.057e-01, 2.530e-01, 7.866e-03, -1.309e-02, 5.514e-02, 1.007e-01, -5.904e-02, 4.277e-02, -3.533e-02, -1.463e-01, 5.148e-02, 2.359e-01) * s0_1_1;
	r2 += M4(-4.796e-01, -3.107e-01, -1.384e-01, 9.291e-02, 3.243e-01, 4.057e-01, -7.077e-02, 2.036e-01, 1.946e-01, 3.486e-01, 1.415e-01, -1.564e-02, 1.266e-01, 1.216e-02, 1.201e-01, -2.016e-01) * s0_1_1;
	r3 += M4(1.799e-01, -1.903e-01, -6.117e-01, 3.836e-01, -2.910e-01, 7.505e-01, 1.517e-01, -1.790e-01, -2.087e-02, -4.586e-02, 2.631e-01, 5.284e-02, -3.927e-02, -1.803e-01, 2.533e-02, 1.116e-01) * s0_1_1;
	r0 += M4(-1.039e-01, -2.236e-02, 7.047e-02, 6.180e-02, 1.165e-04, 1.366e-02, -9.804e-03, 1.769e-01, 7.243e-02, -3.466e-02, -2.884e-03, -3.005e-02, 1.453e-01, -1.851e-03, 8.913e-02, 1.761e-02) * s0_1_2;
	r1 += M4(-3.746e-02, -8.799e-02, -8.049e-02, -1.332e-01, -7.080e-02, 1.759e-01, 8.090e-02, 4.361e-03, 1.504e-02, -6.256e-02, 7.933e-02, 8.868e-02, 4.817e-03, -4.564e-01, -2.033e-01, -3.357e-02) * s0_1_2;
	r2 += M4(-2.348e-01, 1.491e-01, 6.003e-02, -7.369e-03, 1.754e-01, 9.069e-02, 2.044e-02, -1.694e-01, 1.771e-01, 6.089e-02, 2.738e-03, -5.823e-02, 1.943e-01, -1.493e-01, 2.203e-02, 4.246e-02) * s0_1_2;
	r3 += M4(-7.268e-03, -6.103e-03, 2.098e-02, -1.724e-01, -4.165e-02, -6.430e-03, -2.829e-01, -4.088e-02, -5.224e-02, 6.591e-02, 4.894e-04, -5.674e-02, 1.451e-01, -9.874e-02, 1.045e-02, 1.648e-01) * s0_1_2;
	r0 += M4(7.180e-02, -1.654e-04, -5.417e-02, -1.707e-03, -5.945e-02, -3.262e-03, 4.805e-02, 2.863e-02, 1.985e-01, -2.155e-03, 6.805e-03, -5.255e-02, -5.137e-02, 4.407e-02, -3.800e-02, 2.676e-02) * s0_2_0;
	r1 += M4(1.808e-02, 1.959e-02, 9.674e-03, -2.122e-02, -1.273e-02, -2.646e-01, 6.367e-02, -7.973e-02, 5.285e-02, 1.875e-02, -1.085e-01, 1.352e-01, -5.612e-03, 7.740e-02, -5.195e-02, 4.493e-02) * s0_2_0;
	r2 += M4(4.731e-02, -3.839e-02, -2.510e-02, -3.366e-02, 9.180e-03, -8.898e-03, 5.554e-02, -5.750e-02, -1.295e-01, -8.310e-02, 7.171e-03, 8.817e-02, -2.315e-01, 6.347e-04, -5.866e-03, 3.314e-02) * s0_2_0;
	r3 += M4(-2.128e-02, 1.092e-01, -1.287e-01, 5.896e-02, -3.095e-02, -5.595e-02, 2.218e-01, 1.464e-01, 1.458e-02, -2.345e-01, -2.951e-02, 1.075e-01, 3.067e-03, 1.470e-01, -1.712e-01, -7.574e-02) * s0_2_0;
	r0 += M4(-1.818e-02, 5.617e-02, -1.739e-01, -7.906e-02, -5.645e-02, 4.752e-02, -2.813e-02, -6.023e-02, 2.593e-01, -4.611e-02, 7.991e-02, 3.840e-02, -6.641e-02, 2.309e-02, -8.312e-03, 6.543e-02) * s0_2_1;
	r1 += M4(4.919e-02, -7.144e-02, -2.208e-02, 1.083e-01, 1.179e-02, 3.410e-02, -1.770e-01, -1.078e-01, 2.398e-02, 4.553e-02, 3.578e-02, 1.589e-01, -3.643e-02, -3.333e-02, 5.657e-02, -7.300e-02) * s0_2_1;
	r2 += M4(-4.525e-02, -6.538e-02, 1.016e-03, 6.352e-02, -3.878e-02, 3.476e-02, -3.982e-03, 6.394e-02, 2.762e-01, -3.504e-02, 4.120e-02, 2.195e-02, 4.431e-02, 9.660e-02, 5.422e-03, -1.569e-01) * s0_2_1;
	r3 += M4(-2.962e-02, 1.095e-01, -1.994e-01, 3.776e-02, 5.060e-03, -8.760e-02, -4.465e-02, 1.836e-01, -7.435e-02, 1.787e-01, -1.777e-02, 5.535e-02, -3.135e-02, 1.676e-01, 5.201e-02, -1.028e-01) * s0_2_1;
	r0 += M4(-6.500e-02, 5.976e-02, 5.031e-02, 7.155e-02, 2.618e-02, -3.115e-02, 4.533e-02, -7.032e-02, -1.184e-03, 6.200e-03, 1.878e-02, -4.992e-02, 9.460e-02, -5.535e-02, 4.890e-03, 3.726e-02) * s0_2_2;
	r1 += M4(-1.527e-02, 3.634e-02, -8.219e-02, -4.634e-02, 1.140e-02, -3.281e-01, -3.443e-02, -8.349e-03, -2.453e-02, 2.292e-01, 7.943e-02, 3.650e-02, 2.720e-02, 2.589e-01, 1.681e-01, 5.749e-02) * s0_2_2;
	r2 += M4(1.531e-01, 1.293e-01, 1.187e-02, 1.103e-01, -2.706e-01, -1.723e-01, -3.518e-04, 3.391e-02, 3.103e-03, 2.236e-02, 1.352e-02, -1.021e-02, -2.965e-01, -6.078e-02, -2.927e-02, -4.713e-02) * s0_2_2;
	r3 += M4(-1.011e-02, 4.271e-02, 1.358e-02, 2.077e-01, -4.017e-02, -7.182e-02, -3.204e-02, 1.105e-01, -8.039e-02, -1.954e-02, -1.926e-01, -5.174e-02, -4.490e-02, 2.376e-02, -1.360e-02, -5.498e-02) * s0_2_2;
	r0 += M4(-6.791e-01, -8.382e-02, 1.545e-01, -3.336e-02, -9.781e-02, 9.752e-02, -9.910e-02, 4.062e-02, -5.017e-02, 1.942e-02, 7.480e-02, 5.803e-02, 4.151e-02, -4.814e-02, 8.316e-02, -1.034e-02) * s1_0_0;
	r1 += M4(-2.820e-02, -3.331e-01, -1.403e-01, -6.973e-01, 3.405e-02, -8.291e-02, 1.659e-03, -1.184e-01, 3.724e-02, -1.034e-01, -3.467e-02, 8.403e-02, 2.062e-02, 2.064e-01, -3.153e-04, -1.959e-02) * s1_0_0;
	r2 += M4(-1.748e-01, -1.267e-01, 7.684e-02, 5.901e-02, -1.467e-02, -4.093e-03, 2.245e-03, -1.204e-01, -5.086e-02, -1.504e-02, 5.104e-02, -1.545e-02, -1.264e-01, -1.588e-02, 7.395e-02, -4.851e-02) * s1_0_0;
	r3 += M4(1.933e-02, -7.119e-02, 2.034e-01, 9.154e-02, -2.661e-02, -9.229e-01, -1.800e-01, -5.904e-02, -3.666e-02, -2.952e+00, -1.725e-01, -6.197e-02, -2.417e-03, -5.097e+00, -5.449e-02, -5.203e-02) * s1_0_0;
	r0 += M4(-1.994e-01, -5.802e-02, 1.450e-01, 3.037e-01, -9.392e-02, -1.647e-02, -5.942e-02, 1.198e-01, -1.224e-01, 3.466e-02, -1.100e-02, -1.524e-02, 9.975e-02, 1.003e-01, -2.056e-01, 2.866e-03) * s1_0_1;
	r1 += M4(2.988e-03, -9.399e-01, -3.915e-01, -3.735e-01, 7.780e-02, -1.651e-01, 1.600e-01, -6.480e-02, -6.909e-02, -2.846e-02, -3.582e-03, -9.504e-02, -9.575e-03, 2.228e-01, -2.576e-01, -2.600e-02) * s1_0_1;
	r2 += M4(7.491e-02, -6.021e-03, 6.783e-02, 4.333e-02, 2.485e-02, -5.484e-02, 8.323e-02, 8.914e-02, 5.057e-02, -1.967e-01, 5.840e-02, -2.733e-02, 2.036e-01, -3.515e-02, -1.375e-02, 2.445e-02) * s1_0_1;
	r3 += M4(2.102e-02, -1.094e-01, 2.349e-01, 1.881e-01, -5.405e-02, -1.160e-01, -1.501e-01, 2.087e-03, 6.494e-02, 2.490e-02, 3.983e-01, 1.581e-01, 9.662e-02, -2.834e-01, 7.542e-02, 8.675e-02) * s1_0_1;
	r0 += M4(-1.235e-01, 1.754e-02, 6.622e-02, 1.158e-01, 1.169e-01, 2.679e-02, -2.441e-02, 2.416e-01, 1.273e-01, -2.999e-02, -1.319e-01, -2.730e-02, -1.163e-01, -5.402e-02, -1.247e-01, 1.163e-02) * s1_0_2;
	r1 += M4(3.529e-02, -3.497e-01, -9.780e-02, -8.088e-02, 3.160e-02, 8.266e-02, 1.094e-01, 7.848e-02, -3.364e-02, 4.501e-03, 1.382e-01, 1.402e-01, -2.813e-02, -5.899e-02, -2.229e-02, -9.672e-02) * s1_0_2;
	r2 += M4(-1.199e-01, 7.356e-02, 4.726e-02, 2.350e-02, 3.640e-02, 3.929e-02, 1.028e-01, -1.027e-01, 5.192e-02, -5.082e-02, -2.035e-02, -9.433e-02, -5.466e-02, -9.874e-04, -4.015e-02, -4.819e-02) * s1_0_2;
	r3 += M4(4.929e-02, -2.797e-03, 4.688e-02, -4.571e-02, -6.967e-03, -1.867e-02, -2.146e-01, -6.563e-03, -6.477e-02, -8.511e-02, -3.735e-01, -6.454e-02, -6.250e-02, 6.059e-03, -2.059e-01, 5.047e-02) * s1_0_2;
	r0 += M4(-1.961e-01, -1.580e-01, -1.545e-01, 1.409e-01, -1.255e-01, 2.521e-02, 9.000e-02, 9.164e-02, -1.371e-02, 4.244e-03, 1.808e-02, -3.064e-02, -2.321e-02, -4.541e-02, 1.591e-01, 1.186e-01) * s1_1_0;
	r1 += M4(2.082e-02, -6.088e-01, -8.181e-03, -2.518e-01, -1.257e-02, -4.555e-01, -1.265e-01, -1.081e-01, 7.975e-02, 2.163e-01, -2.522e-02, 6.899e-02, -1.174e-01, -7.192e-01, -6.579e-02, -1.973e-01) * s1_1_0;
	r2 += M4(1.554e-01, -2.903e-02, -1.145e-01, 9.013e-02, -3.825e-02, -6.248e-03, -2.691e-02, -1.560e-01, 4.185e-03, 9.359e-02, -5.386e-02, 1.111e-01, 1.527e-01, -1.694e-01, 1.632e-01, -1.909e-01) * s1_1_0;
	r3 += M4(7.544e-02, 1.347e-01, 8.673e-02, -2.848e-01, 1.548e-01, -8.203e-02, -1.138e-02, -9.920e-02, 2.859e-02, 2.899e-02, -1.492e-01, -9.322e-02, 3.570e-02, 3.729e-01, -1.490e-03, 7.662e-02) * s1_1_0;
	r0 += M4(5.779e-02, -1.557e-01, 5.955e-02, 1.540e-01, 9.741e-02, 9.706e-02, -1.799e-01, -1.244e-02, -2.961e-01, 9.137e-02, 1.432e-01, 2.235e-01, -9.701e-02, 4.170e-02, 6.546e-02, -7.416e-02) * s1_1_1;
	r1 += M4(2.603e-02, 5.139e-02, 2.643e-02, 2.176e-01, 2.487e-01, 3.009e-01, -1.309e-01, -6.480e-02, 2.619e-02, -3.971e-03, 1.414e-01, -3.317e-01, 1.185e-01, -4.415e-01, -1.254e-01, 1.337e-01) * s1_1_1;
	r2 += M4(1.029e-01, -4.796e-02, -7.251e-02, 1.632e-02, -1.558e-01, 1.189e-01, -2.312e-01, 8.277e-02, 1.747e-01, -3.859e-02, 1.240e-02, -1.341e-01, 1.140e-02, -2.163e-01, 2.327e-01, -1.591e-02) * s1_1_1;
	r3 += M4(1.134e-01, 2.124e-01, 1.763e-02, 1.070e-01, 1.980e-01, 1.736e-01, -3.893e-01, -1.358e-01, -8.837e-02, 7.509e-02, 4.909e-01, 1.247e-01, 1.240e-01, 9.705e-02, 2.904e-01, -1.192e-01) * s1_1_1;
	r0 += M4(-7.008e-02, -5.830e-02, -2.931e-02, -2.443e-02, 7.173e-02, -1.015e-01, -2.608e-01, 2.339e-01, -3.283e-03, -2.559e-03, -1.807e-01, 5.958e-03, -4.894e-02, -1.003e-01, -9.365e-02, -5.409e-03) * s1_1_2;
	r1 += M4(-8.106e-03, 8.807e-02, 1.863e-02, -6.349e-02, -1.815e-02, 2.449e-01, 4.163e-01, 3.380e-01, 2.547e-03, -3.215e-02, -1.508e-01, 1.524e-01, -6.600e-03, -4.447e-01, -2.769e-02, 6.717e-02) * s1_1_2;
	r2 += M4(7.464e-02, 4.697e-02, -2.783e-02, -1.285e-02, 1.796e-01, -8.407e-02, -1.272e-01, -1.606e-01, -3.978e-01, -1.523e-01, -1.014e-01, 4.779e-02, -3.590e-02, -6.587e-02, 1.280e-03, -2.287e-02) * s1_1_2;
	r3 += M4(-7.393e-02, -4.580e-02, -2.235e-02, 8.870e-02, -1.513e-01, -5.412e-02, -8.354e-02, -1.096e-01, 6.021e-02, -2.569e-01, -7.391e-01, -4.929e-03, -2.227e-04, -1.140e-01, -1.980e-02, -8.986e-02) * s1_1_2;
	r0 += M4(-1.340e-01, 3.541e-02, 6.823e-02, 6.721e-02, 5.013e-02, 1.591e-02, 4.051e-02, 4.189e-02, 3.085e-02, 1.292e-03, -4.086e-02, -2.346e-02, 3.222e-02, -8.007e-02, 1.941e-02, 9.908e-02) * s1_2_0;
	r1 += M4(2.790e-02, 4.581e-02, -8.476e-02, -9.354e-02, -2.573e-03, 9.920e-02, -5.493e-02, 4.846e-02, 1.040e-02, -1.290e-01, -4.850e-02, 3.722e-02, -1.306e-02, -3.028e-01, 1.874e-02, -4.131e-02) * s1_2_0;
	r2 += M4(1.681e-02, 3.914e-02, -2.882e-02, 2.417e-02, 5.241e-02, 7.037e-02, 1.550e-02, 7.311e-02, 1.368e-01, 7.740e-02, 9.948e-03, 4.819e-02, 2.483e-02, 1.116e-01, -1.687e-02, -8.485e-02) * s1_2_0;
	r3 += M4(-3.552e-03, 5.202e-02, 9.397e-02, 7.739e-02, 4.925e-02, -5.974e-02, -3.668e-02, -4.188e-02, 2.209e-03, 1.187e-01, -1.211e-01, 1.004e-01, 2.570e-02, -1.029e-01, 7.154e-02, 3.527e-02) * s1_2_0;
	r0 += M4(-8.064e-02, -1.633e-02, 5.235e-02, 1.109e-01, 4.799e-02, 4.142e-02, -9.874e-03, 1.232e-01, -1.041e-01, 8.078e-02, 2.871e-03, 1.035e-01, -1.353e-01, -3.520e-02, 9.233e-02, 8.402e-02) * s1_2_1;
	r1 += M4(-1.835e-02, -1.342e-01, -7.209e-04, -8.014e-02, -2.066e-02, -8.022e-02, 1.019e-02, 1.029e-01, 2.878e-02, 2.383e-01, -5.152e-02, -6.894e-02, 2.023e-02, -3.308e-01, -5.201e-02, -2.454e-02) * s1_2_1;
	r2 += M4(2.942e-02, -1.272e-02, -4.409e-03, 8.707e-02, 1.267e-01, 3.649e-02, 2.907e-02, 5.928e-02, 8.967e-02, 5.326e-03, -1.655e-02, 4.922e-02, -9.342e-02, 2.309e-01, 2.673e-03, 3.938e-02) * s1_2_1;
	r3 += M4(-3.668e-02, 1.830e-02, -1.744e-03, 5.885e-02, -3.261e-02, 1.217e-01, 3.000e-02, -8.825e-02, -6.621e-02, 2.153e-01, 3.898e-02, 1.912e-01, -3.457e-02, 3.990e-02, -2.966e-02, -4.170e-02) * s1_2_1;
	r0 += M4(-9.791e-02, 3.584e-03, 2.803e-02, -5.246e-03, -5.758e-02, 1.633e-01, 1.255e-01, -1.273e-02, -1.370e-01, 3.717e-02, 6.794e-02, 9.891e-02, -1.044e-01, 2.133e-02, -6.423e-02, 6.934e-02) * s1_2_2;
	r1 += M4(-1.576e-02, -5.419e-03, -4.754e-02, -5.857e-02, -1.862e-02, -5.077e-02, -9.735e-02, -1.986e-01, -3.987e-02, 3.831e-02, 2.093e-02, -1.476e-02, 1.575e-02, 3.840e-02, -1.047e-01, -1.476e-01) * s1_2_2;
	r2 += M4(7.619e-03, 6.460e-02, -1.196e-02, 1.658e-02, 1.140e-01, 1.194e-01, 3.953e-02, -4.862e-02, -3.493e-01, 6.272e-02, 1.133e-02, 4.891e-02, 5.974e-02, 4.578e-02, -1.014e-02, -8.091e-04) * s1_2_2;
	r3 += M4(1.912e-02, 3.075e-02, 8.475e-02, -3.814e-02, 7.705e-03, 2.833e-02, 2.581e-02, -1.366e-02, -7.835e-02, 4.160e-02, 4.705e-02, 1.071e-02, -8.144e-03, 4.983e-02, 6.962e-02, 2.784e-02) * s1_2_2;
	r0 += V4(4.183e-02, -2.019e-02, 2.978e-02, -3.248e-02);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(-1.630e-02, -6.091e-02, -3.774e-03, 2.081e-02);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-3.593e-02, -2.567e-02, 4.652e-03, 2.630e-03);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-1.011e-02, -1.720e-02, -1.617e-02, 1.644e-02);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-6x16-BILINEAR-MPV-NVL-DS-conv5
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv4
//!BIND LUMA
//!SAVE conv5
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv4_pt;
			V4 sr0 = V4(conv4_gather(p, 0));
			V4 sg0 = V4(conv4_gather(p, 1));
			V4 sb0 = V4(conv4_gather(p, 2));
			V4 sa0 = V4(conv4_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(1.104e-01, -4.692e-02, 9.137e-02, -1.684e-01, 1.054e-01, 5.010e-02, -1.681e-01, -4.117e-02, 1.236e-01, 4.317e-02, -6.146e-02, -2.705e-02, 5.490e-02, -3.313e-03, -2.804e-03, -1.492e-02) * s0_0_0;
	r1 += M4(-3.131e-02, -9.190e-03, 4.947e-02, 4.885e-02, 6.891e-02, 2.493e-02, -1.191e-03, 7.469e-02, 1.624e-03, 1.551e-02, -5.431e-02, 5.668e-02, -5.828e-02, -5.093e-02, 2.043e-02, -9.116e-02) * s0_0_0;
	r2 += M4(-1.255e-01, 1.786e-01, 3.671e-02, -6.437e-02, 3.661e-02, 4.394e-02, 1.025e-01, -4.728e-02, -3.847e-02, -2.322e-02, 1.185e-01, 1.718e-02, -4.609e-02, -2.516e-02, -6.453e-02, 4.807e-02) * s0_0_0;
	r3 += M4(-2.362e-01, -8.256e-02, 4.085e-02, 5.382e-02, -1.305e-01, 3.894e-02, -1.660e-02, 2.733e-01, 5.720e-02, -4.442e-03, 6.483e-03, -8.755e-02, 2.333e-01, -1.766e-02, 3.772e-02, 1.419e-02) * s0_0_0;
	r0 += M4(1.446e-02, 5.609e-02, -1.241e-01, -3.663e-01, 1.996e-01, -3.594e-02, 6.209e-02, 8.059e-02, -2.530e-01, -2.908e-02, -1.041e-01, -2.037e-01, -2.631e-01, -6.714e-03, 6.429e-02, -2.176e-01) * s0_0_1;
	r1 += M4(8.796e-02, -5.751e-02, 2.176e-02, 1.145e-01, 5.864e-02, -2.589e-02, -4.194e-03, 1.932e-01, 1.174e-01, 1.717e-01, 2.343e-03, 1.384e-01, -5.427e-02, 4.185e-02, 7.804e-02, -3.644e-02) * s0_0_1;
	r2 += M4(-1.024e-02, 2.801e-01, -2.562e-02, 1.768e-03, 3.358e-03, 1.003e-01, 6.461e-02, 9.583e-03, 4.639e-02, 1.851e-02, -1.512e-02, 1.821e-01, -4.200e-02, -8.969e-02, 5.098e-02, 7.248e-02) * s0_0_1;
	r3 += M4(-1.681e-01, -1.879e-01, 6.504e-02, 2.205e-01, -1.755e-01, 1.440e-02, -7.159e-03, -2.436e-01, -4.819e-02, 3.131e-02, -3.768e-02, 1.754e-01, -7.633e-02, -7.669e-04, 4.346e-02, 5.598e-02) * s0_0_1;
	r0 += M4(-3.126e-02, 4.237e-02, 4.098e-02, -1.751e-01, -3.552e-03, -5.328e-02, -2.758e-02, 1.490e-01, 1.363e-01, -1.436e-01, 8.633e-02, 5.169e-02, -1.539e-01, 1.934e-03, -5.924e-02, 1.098e-01) * s0_0_2;
	r1 += M4(1.019e-01, -5.221e-03, 7.335e-02, 5.078e-02, 1.850e-02, 1.299e-01, 2.469e-02, 1.707e-02, 5.150e-02, -1.273e-02, -2.580e-02, 1.187e-02, -7.790e-02, 5.436e-02, 2.821e-02, -8.937e-03) * s0_0_2;
	r2 += M4(3.244e-02, 1.409e-01, 6.636e-03, -3.492e-02, 1.946e-02, 7.659e-02, 3.329e-02, -4.145e-02, -9.987e-03, 7.482e-02, 6.952e-02, 1.064e-02, -2.187e-02, -4.824e-02, -1.067e-01, -2.725e-03) * s0_0_2;
	r3 += M4(8.400e-02, 2.189e-02, 7.773e-03, 4.094e-02, 1.134e-01, -5.100e-02, 7.561e-03, 8.448e-02, -5.911e-02, -2.367e-02, -9.589e-03, -1.931e-01, 4.149e-02, 1.959e-02, -8.014e-03, -8.190e-03) * s0_0_2;
	r0 += M4(1.006e-02, -1.188e-01, -1.165e-01, -2.107e-02, 3.701e-01, -1.079e-01, -9.089e-02, -1.424e-01, 1.368e-01, 3.486e-01, 8.118e-02, 3.735e-02, 1.920e-01, -1.002e-01, 1.145e-01, -1.653e-02) * s0_1_0;
	r1 += M4(1.323e-01, 1.443e-02, -6.909e-02, -5.619e-02, 9.226e-02, -1.307e-01, 5.077e-02, 9.772e-02, -1.588e-01, 6.666e-02, 8.619e-02, 3.071e-02, -1.912e-01, -3.992e-02, 1.534e-01, 4.265e-02) * s0_1_0;
	r2 += M4(-9.518e-02, 1.330e-01, 8.018e-02, -1.430e-01, 2.907e-02, 1.704e-01, 6.229e-02, -2.722e-02, -2.134e-01, -8.800e-02, -1.276e-02, 2.630e-01, -6.728e-02, 6.190e-02, -1.148e-01, -7.236e-02) * s0_1_0;
	r3 += M4(-2.294e-01, -6.685e-02, -2.529e-02, 1.028e-01, -1.343e-01, -2.935e-02, 1.847e-02, 5.653e-02, -2.783e-01, 5.674e-02, 4.602e-02, 1.494e-01, -1.400e-01, 7.783e-02, 2.865e-02, -1.270e-01) * s0_1_0;
	r0 += M4(1.033e-01, 3.609e-02, -2.592e-01, -6.023e-02, -2.332e-02, 4.922e-02, -2.708e-01, 1.676e-01, 2.054e-01, -1.421e-01, 8.208e-02, 4.142e-01, 3.179e-01, -4.392e-02, -9.933e-03, -1.817e-01) * s0_1_1;
	r1 += M4(1.287e-02, -4.586e-02, -7.021e-02, 2.042e-01, -1.160e-01, 2.900e-01, -2.562e-01, -1.611e-01, -1.949e-02, 5.050e-03, 1.790e-01, -2.814e-02, 9.740e-03, -2.600e-01, 2.106e-01, 9.752e-02) * s0_1_1;
	r2 += M4(-9.872e-02, 4.264e-01, -2.183e-01, -1.183e-01, -7.464e-02, -8.045e-02, -4.928e-02, 1.120e-01, -1.194e-01, -1.961e-01, 3.391e-01, 2.924e-01, 1.137e-01, 1.928e-01, 5.958e-03, 1.123e-02) * s0_1_1;
	r3 += M4(-2.413e-01, -1.145e-01, -5.916e-02, 5.409e-02, 1.071e-01, 5.458e-02, -8.324e-02, -2.081e-01, -1.778e-01, -9.607e-02, -2.957e-02, 3.449e-01, 3.274e-02, -2.270e-01, -2.085e-02, -9.898e-02) * s0_1_1;
	r0 += M4(-7.674e-02, -1.122e-02, 3.671e-02, -2.027e-02, 2.750e-02, -1.887e-02, 2.256e-01, 1.985e-02, -4.287e-02, -5.873e-02, -7.267e-02, -3.642e-02, -6.775e-02, 1.220e-02, -5.976e-02, 6.561e-02) * s0_1_2;
	r1 += M4(9.986e-02, 1.519e-01, 7.942e-02, 4.017e-02, 3.374e-02, -2.813e-01, -5.365e-02, 9.070e-02, -2.190e-01, 1.486e-01, -2.170e-01, 7.351e-02, 4.354e-02, 1.091e-01, 6.946e-02, -9.072e-02) * s0_1_2;
	r2 += M4(-1.050e-02, 1.255e-01, 9.320e-02, -4.064e-02, 2.898e-02, 1.197e-01, -3.024e-02, -2.099e-02, -2.633e-02, 1.097e-01, -1.558e-01, 1.365e-02, 9.443e-03, -7.261e-02, 1.719e-02, -6.125e-02) * s0_1_2;
	r3 += M4(5.467e-02, -1.439e-01, 5.411e-02, 7.126e-02, 4.054e-02, 1.446e-01, -4.702e-02, -1.516e-01, 1.193e-02, 1.928e-02, -5.629e-02, -2.677e-01, 2.842e-02, -1.033e-01, -3.495e-02, -6.152e-03) * s0_1_2;
	r0 += M4(8.782e-02, -9.505e-03, 1.360e-01, 1.487e-02, 1.446e-02, 2.036e-01, 2.034e-02, -1.163e-01, 9.983e-03, 1.102e-01, 7.855e-02, -5.509e-02, 1.557e-02, -3.624e-02, -1.212e-02, 8.077e-02) * s0_2_0;
	r1 += M4(2.282e-02, -2.699e-02, 1.342e-02, 4.962e-02, -4.590e-02, -8.942e-02, 1.138e-01, 2.566e-01, -3.940e-02, 5.331e-02, -9.206e-04, -8.791e-02, -5.792e-02, -5.245e-02, 1.407e-01, -9.296e-02) * s0_2_0;
	r2 += M4(-1.460e-02, 1.173e-02, -9.560e-03, -2.527e-02, 1.471e-01, 1.842e-01, 1.732e-02, -6.256e-02, 9.008e-02, -1.017e-01, 1.387e-01, 6.267e-02, -9.775e-03, 3.991e-02, 2.150e-02, 4.944e-02) * s0_2_0;
	r3 += M4(9.522e-02, 3.138e-02, 1.698e-02, 4.575e-02, -2.354e-03, 1.082e-01, 5.061e-02, -2.325e-01, 6.394e-02, 4.102e-02, 2.124e-02, -3.280e-02, 3.948e-02, -1.534e-02, 3.592e-02, -9.529e-02) * s0_2_0;
	r0 += M4(1.260e-01, -1.608e-02, -2.289e-01, 2.035e-02, 3.568e-01, 8.175e-02, -3.155e-01, 1.894e-01, 1.310e-01, 1.980e-01, -4.810e-02, 5.434e-02, -2.285e-01, -4.232e-03, -5.664e-02, 3.894e-02) * s0_2_1;
	r1 += M4(6.546e-02, -2.316e-02, 9.506e-02, 9.922e-02, 1.490e-01, -2.325e-02, 3.153e-01, 1.195e-01, -4.537e-03, 2.631e-02, 6.517e-02, 1.063e-01, 3.172e-02, -7.999e-02, 1.461e-01, 1.111e-01) * s0_2_1;
	r2 += M4(9.254e-02, 1.449e-01, -1.450e-01, -1.464e-01, -5.807e-02, 1.342e-01, 1.898e-01, -1.166e-01, -9.431e-03, -1.083e-01, -1.377e-01, 1.477e-02, 5.501e-02, 6.875e-02, -1.347e-01, 4.510e-02) * s0_2_1;
	r3 += M4(1.545e-01, 8.059e-02, 8.571e-02, -2.584e-02, 2.129e-01, 2.026e-01, 3.261e-02, 1.903e-01, 1.142e-01, 1.431e-01, 3.864e-02, 1.164e-01, -1.514e-02, 7.688e-02, 2.919e-02, 1.408e-03) * s0_2_1;
	r0 += M4(-9.483e-02, 2.046e-02, 1.051e-01, -4.401e-02, 8.268e-02, 1.768e-02, 1.402e-01, 2.169e-03, -2.029e-02, -1.192e-02, 4.269e-02, -3.098e-02, -8.198e-02, -5.476e-03, 4.209e-02, 6.123e-02) * s0_2_2;
	r1 += M4(9.159e-02, 9.179e-02, 2.326e-02, -3.152e-02, 1.641e-02, 8.805e-02, -4.096e-02, 7.618e-02, -5.767e-02, 3.399e-02, -6.773e-02, 7.064e-02, -5.101e-02, 1.137e-02, 1.626e-03, -3.058e-03) * s0_2_2;
	r2 += M4(-5.730e-02, 7.374e-02, 5.851e-02, 2.718e-02, 2.283e-03, 3.113e-02, 1.092e-01, -3.070e-03, -6.246e-02, 3.837e-03, 3.794e-02, 3.455e-03, -2.310e-02, -9.889e-02, -2.572e-02, 7.584e-03) * s0_2_2;
	r3 += M4(4.745e-02, 2.069e-02, 7.860e-02, 7.336e-02, -1.734e-03, 9.264e-03, -4.076e-02, -1.652e-01, -2.751e-02, -3.048e-02, -7.197e-04, -3.268e-01, 2.259e-03, -1.501e-02, -2.966e-02, 1.339e-02) * s0_2_2;
	r0 += M4(-5.975e-03, 3.187e-02, -3.529e-02, 2.229e-02, -1.725e-01, -1.030e-01, 1.333e-01, -5.528e-02, -6.638e-02, -4.370e-02, 6.932e-02, -7.859e-02, -5.447e-02, -7.826e-02, -2.221e-02, -2.055e-01) * s1_0_0;
	r1 += M4(2.884e-03, -1.844e-02, 1.308e-02, 4.873e-02, -1.841e-01, -1.328e-02, -4.902e-02, -1.188e-02, -1.251e-01, -3.404e-02, -3.901e-03, -1.186e-02, -4.527e-02, -2.423e-02, -2.625e-02, 4.602e-02) * s1_0_0;
	r2 += M4(4.795e-02, -1.257e-02, 4.681e-02, -1.380e-02, -3.253e-01, -5.900e-02, 8.825e-02, 1.466e-02, -6.989e-02, 2.041e-02, 5.356e-02, 1.402e-02, -1.605e-01, -1.573e-02, -3.188e-03, 7.575e-02) * s1_0_0;
	r3 += M4(-2.606e-01, 1.336e-02, -4.356e-02, 1.387e-02, -1.085e-01, 1.016e-01, 7.323e-03, 1.183e-01, -7.936e-02, 2.780e-02, 9.809e-03, -2.031e-01, 1.461e-02, -7.987e-02, 3.574e-02, -9.706e-02) * s1_0_0;
	r0 += M4(-8.917e-02, -6.112e-03, 9.561e-02, -2.664e-02, -1.118e-01, 1.981e-02, -1.960e-02, -2.124e-01, -9.501e-02, 5.177e-02, -1.460e-01, 2.790e-02, -1.675e-02, 1.906e-02, -6.391e-02, -8.067e-01) * s1_0_1;
	r1 += M4(-2.995e-02, 8.818e-02, -9.173e-02, 1.547e-02, -1.379e-01, -4.740e-02, -1.114e-02, -1.573e-01, -5.413e-02, -5.146e-03, -4.942e-03, -6.157e-02, -8.345e-02, -3.232e-02, 4.984e-02, -4.712e-02) * s1_0_1;
	r2 += M4(2.237e-02, 2.617e-02, -9.245e-02, 1.704e-01, -1.206e-01, -5.606e-02, -1.769e-02, -1.259e-02, -5.263e-02, -1.058e-01, 9.187e-02, -2.717e-02, -1.253e-01, -1.225e-01, 1.006e-01, -3.018e-02) * s1_0_1;
	r3 += M4(2.998e-01, -3.769e-03, 1.116e-01, 2.886e-02, -1.201e-01, -1.551e-01, -3.731e-02, 9.182e-04, -8.875e-02, 8.149e-02, -2.008e-02, 1.563e-01, -9.793e-02, -4.286e-02, -1.364e-02, 9.316e-02) * s1_0_1;
	r0 += M4(1.860e-01, -1.094e-01, 1.909e-01, -2.294e-02, -7.087e-03, 2.145e-03, 2.146e-02, -3.061e-02, -2.310e-02, -3.288e-02, 4.883e-02, 1.175e-01, -5.624e-02, 1.946e-02, -9.666e-02, -2.522e-01) * s1_0_2;
	r1 += M4(7.631e-02, -2.822e-01, 1.265e-02, -3.304e-02, -2.778e-02, -8.933e-02, -2.382e-02, 2.079e-03, -2.130e-02, -2.677e-02, -3.202e-02, -3.995e-02, -4.011e-02, 5.397e-02, -1.110e-02, -2.183e-02) * s1_0_2;
	r2 += M4(-2.952e-02, 1.015e-01, -3.665e-02, 9.948e-02, -1.161e-01, -1.815e-04, -7.353e-02, -5.229e-02, -6.369e-02, -3.484e-02, -6.367e-02, 1.553e-03, -8.010e-03, -2.781e-02, 3.208e-02, -2.303e-02) * s1_0_2;
	r3 += M4(-3.703e-02, 3.193e-03, -5.330e-02, -1.660e-03, 9.962e-02, 1.308e-01, -7.043e-03, 1.034e-01, -7.386e-02, 8.005e-02, -4.348e-03, 1.018e-01, -7.021e-02, 4.399e-02, 1.057e-02, 5.241e-03) * s1_0_2;
	r0 += M4(-3.570e-02, 2.536e-02, -2.422e-01, -8.806e-02, 1.059e-01, 8.057e-02, -1.124e-01, 1.140e-01, 5.475e-02, 3.647e-01, -8.096e-02, 1.133e-01, 5.859e-02, 8.697e-02, -8.475e-03, -1.449e-02) * s1_1_0;
	r1 += M4(1.593e-02, -3.825e-02, 9.520e-02, -2.026e-01, 5.320e-02, -1.538e-02, 2.313e-02, -1.853e-01, 1.629e-02, 4.678e-02, 1.006e-01, 7.335e-02, -1.528e-01, 1.062e-03, 4.160e-02, 1.499e-01) * s1_1_0;
	r2 += M4(-1.452e-01, -2.648e-01, 7.831e-02, 8.651e-03, 4.171e-02, 7.332e-02, 2.445e-01, -2.036e-01, -8.124e-03, 5.073e-02, 1.176e-01, 5.468e-02, -2.940e-01, 1.684e-02, -8.127e-02, -6.006e-03) * s1_1_0;
	r3 += M4(1.987e-01, 1.804e-03, 8.530e-02, 1.477e-01, 3.116e-01, 2.744e-01, -9.123e-03, -1.132e-01, 4.115e-02, 2.271e-01, 6.970e-02, -1.308e-01, -1.004e-01, 6.842e-03, 5.717e-02, -8.364e-02) * s1_1_0;
	r0 += M4(-4.088e-01, 1.523e-01, 1.660e-01, -3.994e-01, -5.377e-01, 1.647e-01, -1.130e-01, -2.302e-01, -8.244e-02, -2.042e-01, -5.996e-02, 2.349e-01, -1.880e-01, -2.980e-02, -1.317e-01, -2.179e-01) * s1_1_1;
	r1 += M4(-5.293e-01, 9.553e-02, 9.443e-02, -1.982e-01, 3.582e-01, -2.117e-02, -6.502e-02, 2.440e-01, 1.499e-01, -6.423e-02, 2.821e-01, 1.225e-01, 5.157e-02, 1.620e-02, 1.606e-01, -1.990e-01) * s1_1_1;
	r2 += M4(-5.059e-01, -4.421e-01, -2.481e-02, 2.675e-01, -8.518e-02, 2.543e-01, -1.968e-01, -1.756e-01, 6.171e-02, 2.421e-01, 2.462e-01, 1.334e-03, -1.058e-01, -1.151e-01, -1.100e-02, 2.934e-02) * s1_1_1;
	r3 += M4(-2.232e-01, 1.602e-01, 6.447e-01, -4.114e-01, 2.375e-01, 2.790e-01, 2.349e-02, -2.922e-01, 7.754e-02, 1.812e-01, 2.007e-01, -1.766e-01, 8.274e-02, -9.684e-02, -1.650e-02, 3.095e-01) * s1_1_1;
	r0 += M4(1.509e-01, -6.530e-02, -1.040e-02, -2.389e-01, -7.344e-02, -1.926e-01, -1.620e-01, -2.479e-02, -1.288e-01, 7.755e-03, -1.077e-01, 3.895e-02, 1.420e-01, 2.177e-02, -2.133e-01, -1.916e-01) * s1_1_2;
	r1 += M4(-1.771e-01, -1.724e-01, -5.219e-03, -1.479e-01, 7.572e-02, -2.152e-02, 4.252e-02, -7.281e-02, 4.260e-02, 1.252e-01, 5.627e-02, 1.049e-03, -9.955e-02, -1.549e-01, -8.632e-02, 5.229e-02) * s1_1_2;
	r2 += M4(-1.041e-02, 5.363e-02, -1.676e-01, -7.448e-02, -5.815e-02, 4.219e-02, 2.035e-01, -8.467e-02, 2.068e-02, -5.139e-02, -3.040e-02, -4.694e-02, 7.321e-03, -9.510e-02, 2.581e-02, 4.360e-02) * s1_1_2;
	r3 += M4(-1.206e-02, 8.306e-02, -1.319e-01, -2.347e-01, 1.731e-01, -4.751e-02, -2.150e-02, -2.865e-01, -4.812e-02, -4.194e-02, -4.419e-03, 1.061e-01, -1.626e-01, 4.199e-02, -1.181e-02, -1.667e-01) * s1_1_2;
	r0 += M4(-9.516e-03, -2.508e-03, 7.723e-02, 1.746e-01, 5.142e-02, 7.054e-02, 4.410e-02, -7.856e-02, 8.699e-02, 1.536e-02, -2.117e-01, 1.233e-01, 3.552e-02, -4.053e-02, 3.244e-02, 2.665e-02) * s1_2_0;
	r1 += M4(-4.330e-02, 3.666e-02, 4.317e-02, -8.688e-02, 2.884e-03, -1.976e-02, 6.138e-02, 3.136e-01, 1.039e-01, 3.648e-02, 4.730e-03, -9.056e-02, -1.996e-02, 3.129e-03, 1.319e-02, 3.853e-02) * s1_2_0;
	r2 += M4(-9.204e-02, -3.809e-02, -1.855e-01, 9.658e-02, -1.199e-01, 5.381e-02, -5.160e-02, 3.960e-02, 3.086e-02, -1.629e-01, 1.371e-02, 4.346e-02, -5.641e-02, -8.658e-03, 1.294e-01, -7.401e-03) * s1_2_0;
	r3 += M4(-9.198e-02, 1.032e-02, -1.088e-02, 8.583e-02, -1.825e-01, -3.959e-02, -5.971e-02, 1.615e-01, 1.853e-02, -5.624e-02, -2.704e-02, 6.548e-03, -1.354e-02, -5.962e-02, -1.171e-02, 1.335e-03) * s1_2_0;
	r0 += M4(3.726e-04, 6.369e-02, -4.784e-02, 1.677e-01, 4.482e-01, -8.083e-02, 1.620e-01, 1.968e-01, 2.727e-02, 2.772e-01, 1.673e-01, -8.377e-02, -9.954e-02, -2.169e-02, -7.609e-02, 1.059e-02) * s1_2_1;
	r1 += M4(3.782e-02, -6.561e-02, 9.569e-02, 6.960e-02, -1.425e-02, -1.630e-01, 1.628e-02, -1.287e-02, 6.650e-02, 1.215e-01, -7.373e-02, 5.202e-01, -1.706e-01, 1.405e-02, -2.112e-01, -1.922e-01) * s1_2_1;
	r2 += M4(1.176e-01, -7.706e-03, 3.821e-02, 1.636e-01, -8.180e-02, -2.996e-02, 2.864e-01, -2.695e-02, 4.320e-02, -3.366e-02, 1.337e-01, -1.497e-02, -1.438e-01, -1.095e-02, 1.197e-02, 2.631e-02) * s1_2_1;
	r3 += M4(-1.141e-01, -9.065e-02, -1.693e-03, 7.700e-02, -1.662e-01, -1.649e-01, -6.881e-02, -4.056e-01, 2.230e-02, 1.153e-01, 7.153e-02, -3.902e-01, -1.007e-01, -1.012e-02, -4.970e-02, 8.819e-02) * s1_2_1;
	r0 += M4(-9.580e-02, 9.887e-03, -4.429e-03, 9.414e-02, 9.374e-02, 8.782e-02, -2.467e-01, 3.715e-01, -1.175e-01, 5.239e-02, -5.314e-02, -7.654e-02, 1.189e-01, -3.047e-02, -1.781e-01, 9.936e-02) * s1_2_2;
	r1 += M4(1.287e-01, -8.426e-02, 7.250e-02, 7.895e-02, -9.211e-02, -2.486e-02, -3.977e-02, 2.036e-01, 4.708e-02, 3.751e-02, 1.207e-01, 2.278e-02, -1.897e-01, -1.623e-01, -5.628e-02, 3.442e-02) * s1_2_2;
	r2 += M4(3.622e-02, 5.909e-02, 1.444e-02, 1.304e-02, -1.245e-01, 4.740e-02, 1.144e-01, -1.581e-02, -4.287e-02, 8.390e-02, 1.169e-01, -1.638e-02, 5.794e-02, -8.417e-03, -8.543e-02, -2.957e-03) * s1_2_2;
	r3 += M4(-7.579e-02, -3.952e-02, -6.622e-02, -5.419e-02, -3.790e-01, -3.502e-02, -2.245e-02, -2.259e-01, -8.802e-02, 4.677e-02, 1.869e-02, -9.531e-02, -1.668e-03, -1.414e-01, -7.069e-02, -6.674e-02) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(3.534e-02, 8.841e-02, 3.218e-02, 4.857e-02, -1.219e-02, -8.142e-03, 6.681e-02, 7.145e-02, -1.094e-01, -9.151e-02, 8.688e-02, 4.328e-02, 1.460e-01, -4.553e-02, 6.121e-02, -2.141e-02) * s0_0_0;
	r1 += M4(1.583e-01, 1.141e-01, -1.827e-03, 6.893e-02, 2.690e-02, 1.910e-02, 1.901e-02, 3.581e-03, -4.726e-02, -4.465e-02, 5.665e-02, -2.570e-02, 5.932e-03, -5.013e-02, -1.647e-02, 2.606e-02) * s0_0_0;
	r2 += M4(1.404e-01, 2.834e-02, 1.417e-01, 3.046e-02, 9.549e-02, 7.580e-02, 2.885e-02, -3.837e-03, -6.374e-03, -1.919e-02, -8.615e-02, 2.786e-02, -9.457e-04, -3.747e-02, 1.655e-02, 9.390e-02) * s0_0_0;
	r3 += M4(1.560e-03, 1.315e-01, 1.483e-02, 6.557e-02, 1.807e-01, 2.302e-02, 1.688e-02, -1.542e-03, -2.781e-02, -9.416e-03, 2.416e-03, 7.642e-03, -5.016e-02, -5.778e-02, -6.845e-03, 1.129e-01) * s0_0_0;
	r0 += M4(4.630e-02, -1.043e-01, 5.543e-02, -2.497e-02, -1.709e-01, 6.400e-02, -2.547e-02, 3.258e-02, 7.584e-02, -7.098e-03, 3.962e-02, 1.225e-01, -2.844e-01, 1.582e-01, -2.706e-01, 1.489e-01) * s0_0_1;
	r1 += M4(9.481e-02, 1.500e-01, 2.394e-02, -2.739e-02, 1.396e-01, -2.119e-03, -7.439e-02, 1.468e-01, -4.994e-02, -5.322e-03, 8.032e-02, -1.450e-01, 4.358e-02, -3.581e-02, 3.286e-02, 1.589e-01) * s0_0_1;
	r2 += M4(-3.257e-02, 7.570e-02, 1.038e-01, -1.422e-01, 2.007e-01, 1.303e-01, -1.213e-01, 6.046e-02, -6.372e-02, -7.330e-02, 4.073e-03, -1.905e-01, 7.552e-02, -1.082e-01, -5.163e-02, 1.238e-01) * s0_0_1;
	r3 += M4(-2.263e-01, -7.102e-02, 8.141e-02, 3.259e-02, 3.911e-01, 1.840e-01, 9.574e-02, -1.773e-01, 2.822e-02, 7.827e-02, 1.203e-01, -3.731e-02, -7.642e-02, 8.837e-02, -9.647e-02, 2.362e-01) * s0_0_1;
	r0 += M4(4.004e-02, -4.579e-02, 8.754e-02, 2.489e-02, -1.327e-01, -2.593e-02, 4.829e-02, 7.961e-03, -3.135e-01, 1.968e-01, -3.410e-01, -9.226e-02, -2.666e-01, -6.391e-02, 3.289e-02, -1.208e-01) * s0_0_2;
	r1 += M4(2.127e-02, -4.338e-02, 6.960e-02, 2.688e-02, 5.151e-02, -5.271e-02, 3.661e-03, 2.750e-03, -4.550e-02, 1.057e-01, -4.627e-02, -6.670e-02, -7.963e-02, 1.714e-01, -2.203e-03, -1.345e-01) * s0_0_2;
	r2 += M4(4.962e-02, 3.577e-02, 6.135e-02, 3.191e-02, 9.140e-02, 6.753e-02, -7.120e-02, 1.296e-03, -5.623e-02, -1.716e-01, -5.632e-02, -4.537e-02, -4.199e-02, 8.894e-02, 1.781e-02, 5.018e-02) * s0_0_2;
	r3 += M4(7.296e-02, -3.425e-02, 9.568e-03, 5.026e-02, 1.443e-01, 6.180e-02, 2.611e-02, -5.347e-02, -5.497e-02, 6.636e-02, 2.133e-03, 3.181e-01, -3.262e-01, -1.931e-01, 6.581e-02, 1.200e-01) * s0_0_2;
	r0 += M4(1.134e-01, 9.258e-02, 9.667e-02, -1.982e-02, 4.938e-02, 3.078e-02, -1.560e-01, 5.412e-02, -7.406e-02, -1.123e-01, -1.577e-01, 3.241e-02, 4.690e-02, 1.075e-03, 9.774e-02, -2.621e-02) * s0_1_0;
	r1 += M4(1.348e-01, -6.326e-03, 5.901e-02, 1.595e-01, 1.342e-01, -2.607e-02, -5.402e-02, 1.666e-02, 1.590e-01, -6.277e-02, -5.423e-02, 2.098e-02, -9.319e-03, -9.243e-03, -1.090e-02, 1.745e-01) * s0_1_0;
	r2 += M4(5.520e-02, 1.009e-02, 1.211e-01, 1.629e-01, -4.742e-02, -1.332e-01, 9.724e-02, 1.734e-01, 2.236e-01, -1.406e-01, 1.043e-01, -2.105e-01, 1.145e-01, 8.845e-02, -3.814e-02, -1.313e-01) * s0_1_0;
	r3 += M4(7.947e-02, -1.454e-03, -5.465e-02, 1.234e-01, 5.803e-02, -2.224e-02, -5.586e-02, 1.821e-01, 3.167e-01, 4.834e-02, -5.066e-02, -1.543e-01, 1.098e-01, 1.796e-02, -5.753e-02, -2.403e-01) * s0_1_0;
	r0 += M4(5.697e-03, -1.722e-01, -5.807e-02, 3.187e-01, 3.204e-01, -1.651e-01, 5.918e-01, 1.719e-01, -3.745e-01, 8.270e-02, 5.634e-02, -1.606e-01, -2.909e-01, 1.908e-01, -1.036e-01, -1.042e-01) * s0_1_1;
	r1 += M4(3.508e-01, 7.108e-02, 3.360e-01, 2.019e-01, 1.204e-01, -5.600e-02, 5.530e-02, 3.554e-01, -3.848e-02, 2.680e-01, -2.137e-01, -9.140e-02, 9.292e-02, 1.093e-01, -1.258e-01, -5.522e-03) * s0_1_1;
	r2 += M4(6.438e-02, 2.271e-01, 1.793e-01, 2.306e-02, 1.788e-01, 7.786e-02, 2.503e-01, -1.620e-01, 1.338e-01, -1.430e-01, 1.698e-01, -3.057e-01, 1.848e-01, -2.262e-01, 3.151e-01, 2.565e-01) * s0_1_1;
	r3 += M4(8.119e-02, 1.130e-01, 3.863e-02, 1.658e-01, -2.716e-01, 2.067e-02, -5.131e-02, -4.250e-01, 6.516e-02, 7.266e-02, 1.821e-01, -4.540e-01, -6.825e-02, -1.433e-01, -2.220e-01, 9.544e-02) * s0_1_1;
	r0 += M4(-2.097e-02, -1.953e-02, 5.110e-02, -5.749e-02, 1.104e-02, -3.179e-02, -1.824e-01, 9.935e-02, -1.151e-01, -9.957e-03, -6.376e-02, -3.230e-02, -3.267e-01, -2.242e-01, -3.151e-01, 2.092e-01) * s0_1_2;
	r1 += M4(1.117e-01, -4.229e-02, 9.615e-03, 8.509e-02, 1.366e-01, 1.916e-01, 8.032e-02, -1.547e-01, 1.247e-01, -8.949e-03, 2.569e-01, -6.183e-02, 3.088e-03, 3.188e-01, 1.868e-01, 1.014e-02) * s0_1_2;
	r2 += M4(3.831e-02, 4.411e-02, 4.540e-02, 2.100e-02, -9.736e-02, 4.982e-02, 9.054e-02, -1.120e-01, 3.966e-02, -1.102e-01, 2.257e-01, 2.890e-02, -7.841e-02, 6.532e-02, 3.715e-02, -1.268e-01) * s0_1_2;
	r3 += M4(-1.586e-02, 5.670e-02, -2.995e-02, -1.600e-02, -2.007e-02, -1.447e-01, 2.496e-02, 6.865e-02, -8.802e-02, -2.226e-01, 1.966e-01, 3.077e-01, 7.653e-02, -1.044e-01, 1.802e-01, 1.801e-01) * s0_1_2;
	r0 += M4(7.395e-02, 3.249e-02, -1.242e-02, 6.290e-03, 2.063e-01, 3.628e-02, 8.855e-02, -6.961e-02, 2.074e-02, -1.287e-01, -1.674e-01, 5.057e-02, 2.600e-02, 3.772e-02, -5.842e-02, -2.101e-02) * s0_2_0;
	r1 += M4(1.408e-03, 1.056e-02, 5.004e-02, 1.008e-01, 7.073e-02, -1.909e-02, 3.417e-02, -9.186e-02, 2.209e-02, -4.283e-02, 3.682e-02, 4.519e-02, 8.360e-03, -6.364e-02, -3.909e-02, 1.689e-02) * s0_2_0;
	r2 += M4(6.625e-02, -1.897e-02, 5.098e-02, 6.125e-02, 7.215e-02, -9.507e-02, -9.480e-02, -8.075e-02, -1.003e-02, 8.874e-04, -1.526e-01, -1.714e-02, 2.905e-02, 1.494e-02, 5.691e-02, 6.851e-03) * s0_2_0;
	r3 += M4(-2.613e-02, 3.723e-03, -3.758e-02, 8.803e-02, 4.162e-02, 1.590e-02, -5.094e-03, 1.095e-01, -7.252e-02, -7.814e-02, -6.863e-02, 1.330e-01, -3.846e-02, 5.313e-03, -1.715e-02, 3.247e-02) * s0_2_0;
	r0 += M4(1.429e-01, 1.031e-02, 7.914e-02, 1.221e-01, -8.886e-02, 3.532e-02, -1.514e-02, -1.275e-01, 8.070e-02, -1.421e-01, 5.348e-02, -1.023e-01, 1.160e-01, -1.488e-02, 1.987e-01, 1.161e-01) * s0_2_1;
	r1 += M4(5.774e-02, 6.021e-02, 3.279e-02, 6.368e-02, 4.123e-02, 2.493e-02, 3.324e-02, 1.599e-01, 3.935e-02, 7.747e-02, -8.877e-02, -3.923e-02, -1.172e-02, -1.224e-02, -4.699e-02, -5.873e-02) * s0_2_1;
	r2 += M4(-1.154e-02, 1.265e-02, 7.426e-02, -1.458e-02, 3.357e-02, 6.353e-02, -1.002e-01, 4.345e-02, -6.711e-02, -4.603e-02, 6.947e-02, -1.660e-02, -5.531e-02, -7.049e-02, -8.717e-02, 2.808e-03) * s0_2_1;
	r3 += M4(-4.217e-02, -2.195e-02, -2.383e-03, 3.209e-02, -1.925e-02, 8.593e-02, 1.908e-02, -3.349e-01, -1.341e-01, -2.173e-01, -3.759e-02, -6.807e-02, 2.982e-02, 3.602e-03, -1.096e-01, 3.972e-02) * s0_2_1;
	r0 += M4(2.402e-02, -1.520e-02, -1.910e-02, 5.532e-03, -9.594e-02, -3.110e-02, 1.232e-02, -2.091e-02, 2.411e-02, 7.766e-03, -5.823e-02, -5.668e-02, -3.952e-02, 7.611e-02, -3.659e-03, -7.153e-03) * s0_2_2;
	r1 += M4(1.502e-02, -8.717e-03, 3.107e-02, 4.414e-02, 2.670e-02, 6.844e-03, -7.944e-03, -7.204e-02, 8.160e-02, 8.321e-03, 7.864e-02, -7.397e-02, 9.318e-06, 5.561e-03, -1.017e-01, 5.829e-02) * s0_2_2;
	r2 += M4(3.056e-02, 4.256e-02, 5.312e-02, -2.098e-02, -3.589e-02, -6.608e-02, -4.331e-02, 1.915e-02, 1.441e-02, -2.899e-02, -1.430e-01, -4.202e-02, 6.095e-04, 5.519e-02, 8.445e-02, 6.348e-02) * s0_2_2;
	r3 += M4(2.044e-02, 4.410e-02, -1.388e-02, -4.260e-02, -7.573e-04, -1.930e-02, -6.614e-03, 8.401e-02, 1.149e-01, -5.381e-03, 4.117e-02, 3.733e-02, 9.641e-03, -7.437e-02, 1.166e-02, 1.060e-01) * s0_2_2;
	r0 += M4(-2.068e-02, -1.857e-02, -5.266e-02, 2.605e-02, -5.514e-03, 4.221e-02, 4.717e-02, -2.596e-02, 7.951e-02, 1.479e-01, -9.887e-02, -1.169e-01, -2.673e-02, 1.598e-02, -5.914e-02, 2.237e-02) * s1_0_0;
	r1 += M4(5.122e-02, 4.787e-03, -2.822e-02, -2.124e-02, 1.752e-02, -7.258e-03, -1.734e-03, 3.259e-03, -3.879e-02, -9.890e-03, -4.701e-02, 8.806e-02, 3.817e-02, 7.775e-04, 7.895e-03, -3.274e-02) * s1_0_0;
	r2 += M4(5.131e-02, -4.315e-02, -4.929e-02, -1.174e-02, -3.751e-02, -5.966e-02, 6.938e-03, 1.310e-02, -2.053e-01, -7.466e-02, -3.412e-03, 7.058e-02, 2.245e-01, 1.676e-02, 7.012e-02, -1.443e-02) * s1_0_0;
	r3 += M4(2.689e-02, -1.647e-02, -2.434e-02, 7.324e-02, -5.510e-02, 3.129e-02, -1.791e-02, 1.588e-02, 2.166e-01, 7.400e-02, 3.959e-02, 1.267e-02, -1.623e-01, 4.560e-02, -3.385e-02, 1.054e-01) * s1_0_0;
	r0 += M4(1.123e-01, -3.972e-02, 2.037e-02, -1.274e-01, -9.310e-02, 3.618e-02, -6.854e-02, 1.248e-01, -1.618e-01, -1.618e-01, 1.514e-02, -1.080e-01, -1.728e-01, 1.402e-01, -1.537e-01, -3.369e-03) * s1_0_1;
	r1 += M4(-2.426e-02, -2.521e-02, 6.822e-03, -2.980e-02, -9.044e-02, -3.383e-02, -7.926e-04, 1.802e-02, -8.845e-03, 1.844e-01, 1.752e-02, 9.110e-02, 1.772e-01, 1.480e-01, -9.203e-02, 9.376e-02) * s1_0_1;
	r2 += M4(-8.631e-02, 7.073e-03, 6.528e-02, 1.227e-02, 3.880e-02, 3.058e-02, 3.594e-02, -3.331e-02, 4.575e-02, 1.137e-01, -2.118e-03, 1.548e-02, 1.733e-01, -4.528e-02, -1.238e-01, -1.033e-02) * s1_0_1;
	r3 += M4(-1.093e-01, -2.693e-02, 1.330e-02, -1.528e-01, 1.654e-01, -3.536e-02, -1.295e-02, 1.515e-01, -8.761e-02, -1.684e-01, 7.164e-03, 2.812e-01, -2.121e-01, 3.142e-01, -3.956e-02, -8.489e-02) * s1_0_1;
	r0 += M4(4.656e-02, 3.514e-02, 1.649e-02, -1.944e-01, -1.733e-01, -4.051e-02, -6.590e-03, 3.121e-02, -3.451e-02, -9.842e-02, 1.557e-01, 7.959e-02, 1.559e-02, -3.134e-02, -1.312e-02, 7.805e-02) * s1_0_2;
	r1 += M4(7.814e-02, 1.460e-01, 3.209e-02, 5.541e-03, 1.038e-01, 4.799e-02, -3.210e-02, 5.173e-02, 4.626e-02, 3.491e-02, 2.141e-02, 3.530e-02, -4.491e-03, -1.070e-01, -9.256e-02, -6.164e-02) * s1_0_2;
	r2 += M4(1.629e-01, 4.015e-02, 1.623e-02, -1.668e-02, 7.848e-03, 7.640e-02, 4.724e-02, 1.779e-02, -8.335e-03, 4.949e-02, -3.037e-02, 2.933e-03, -9.810e-02, -3.968e-02, -2.950e-02, -5.472e-02) * s1_0_2;
	r3 += M4(-4.887e-02, -4.551e-02, -1.752e-02, 6.954e-02, 3.847e-02, -6.273e-02, -3.385e-03, 1.316e-02, -3.680e-02, -7.416e-02, -3.092e-02, -1.183e-01, -5.028e-03, 1.165e-01, -4.476e-02, -9.231e-02) * s1_0_2;
	r0 += M4(-2.302e-02, -1.869e-01, 1.262e-01, 7.157e-02, 6.285e-02, -5.597e-02, -1.500e-01, 7.234e-02, 8.482e-02, -5.659e-02, 2.599e-01, -1.312e-01, -6.434e-02, -3.112e-03, 1.190e-01, 1.659e-02) * s1_1_0;
	r1 += M4(-1.284e-01, -3.655e-03, 4.842e-02, -1.135e-01, 1.379e-02, -3.116e-02, -1.104e-02, -1.566e-02, -2.207e-01, 6.727e-02, 4.633e-02, 1.275e-01, 9.808e-02, -1.407e-02, -4.490e-02, -2.120e-02) * s1_1_0;
	r2 += M4(-9.490e-02, 6.205e-02, -2.705e-01, 6.161e-02, 7.156e-02, -1.558e-02, 1.258e-01, -6.161e-02, -1.124e-01, 8.560e-02, -1.995e-01, 1.102e-01, 1.728e-02, -1.274e-01, 1.677e-02, -3.531e-03) * s1_1_0;
	r3 += M4(9.933e-02, -1.266e-01, -6.428e-03, 2.624e-01, 6.791e-02, -1.726e-02, 8.236e-03, 3.766e-02, 2.661e-02, -4.796e-02, 3.382e-02, -1.785e-01, 1.400e-02, 2.418e-02, -6.693e-02, 1.479e-01) * s1_1_0;
	r0 += M4(-4.988e-02, -2.644e-01, -1.930e-01, 2.605e-01, -4.104e-01, 1.839e-01, -5.545e-03, 1.768e-01, -5.854e-01, -1.401e-01, -4.840e-02, -8.395e-02, 2.454e-01, -2.974e-02, -2.532e-01, -1.117e-01) * s1_1_1;
	r1 += M4(6.961e-02, -3.291e-01, 5.338e-02, -5.263e-02, 1.866e-01, 2.039e-01, -1.207e-01, 1.290e-01, 1.492e-01, 2.023e-01, -1.739e-02, 7.308e-02, -2.503e-01, 4.253e-02, -1.983e-02, -5.606e-01) * s1_1_1;
	r2 += M4(2.504e-01, 3.719e-01, -2.791e-01, -1.327e-01, 1.975e-01, -1.342e-01, 1.558e-01, 2.982e-01, -1.861e-01, -1.556e-01, -1.434e-01, 7.791e-02, -1.124e-01, -1.020e-01, -2.076e-01, -1.538e-01) * s1_1_1;
	r3 += M4(1.597e-01, -4.177e-01, -1.550e-02, -6.083e-02, 3.451e-01, 1.830e-01, 2.241e-01, 2.175e-01, 4.990e-02, 3.112e-02, 4.794e-02, 3.185e-01, 9.125e-02, 1.150e-01, 1.402e-02, -1.560e-01) * s1_1_1;
	r0 += M4(1.431e-01, -6.175e-03, 1.023e-01, 2.014e-01, -3.956e-01, -1.438e-01, 1.162e-01, 2.895e-01, -1.034e-01, -1.946e-03, 8.563e-02, -3.317e-02, -3.230e-02, 1.034e-01, -3.739e-02, -1.945e-01) * s1_1_2;
	r1 += M4(1.821e-01, 1.146e-01, -1.740e-02, -3.378e-02, 3.797e-02, 7.593e-02, 9.305e-03, -5.696e-02, -9.264e-02, -7.500e-02, -3.014e-02, 1.098e-01, -7.040e-02, -1.611e-01, -5.980e-02, 3.370e-02) * s1_1_2;
	r2 += M4(5.963e-02, 1.530e-01, -7.177e-03, 6.770e-02, -1.064e-01, 1.792e-01, -2.455e-01, -3.517e-02, 1.372e-01, 7.218e-02, -4.586e-02, -6.256e-02, 1.145e-02, -1.004e-01, -1.689e-02, 2.060e-02) * s1_1_2;
	r3 += M4(-8.905e-02, -1.008e-01, 5.032e-02, -7.120e-02, 4.205e-02, 2.873e-01, 1.881e-02, 1.693e-01, 2.930e-02, 1.076e-01, -6.537e-02, 7.866e-02, 2.681e-02, 5.738e-02, -1.549e-02, 2.240e-02) * s1_1_2;
	r0 += M4(1.379e-01, 3.771e-02, -1.616e-01, -8.706e-03, 9.494e-02, -3.556e-02, -1.094e-02, 5.562e-02, 1.037e-01, 3.241e-02, 1.582e-01, 1.073e-02, 4.100e-02, -5.429e-02, 1.196e-01, -3.048e-02) * s1_2_0;
	r1 += M4(3.790e-02, -1.650e-02, 3.334e-02, -1.674e-01, -2.752e-02, -8.314e-03, 7.758e-02, -4.610e-02, 6.426e-03, -4.743e-02, -3.620e-02, -9.055e-03, 5.152e-03, 5.845e-03, -4.010e-02, -6.934e-03) * s1_2_0;
	r2 += M4(2.011e-01, 1.033e-01, -3.607e-02, -1.701e-02, -5.004e-02, -5.053e-02, -8.577e-02, 3.878e-02, 2.247e-02, -4.512e-02, -4.832e-02, 3.857e-02, 2.569e-02, -5.232e-02, 2.492e-02, 3.356e-02) * s1_2_0;
	r3 += M4(-8.202e-03, 5.514e-02, 2.063e-03, -2.507e-02, -4.260e-02, -4.413e-03, -3.414e-02, -4.622e-03, -3.139e-03, 4.727e-02, 4.200e-02, 4.546e-02, 8.073e-03, 1.666e-02, -2.217e-02, 3.268e-02) * s1_2_0;
	r0 += M4(-4.881e-03, -2.627e-02, 1.709e-01, -1.888e-01, 3.425e-01, 8.761e-02, 1.224e-01, -5.527e-02, -1.748e-01, -7.577e-02, 2.889e-01, 6.346e-02, -5.179e-02, -1.486e-02, 1.626e-03, 4.264e-02) * s1_2_1;
	r1 += M4(2.141e-01, -6.419e-02, 2.392e-03, -1.888e-01, -7.141e-02, -1.713e-01, 2.510e-01, 8.321e-02, -4.784e-02, 4.052e-02, -1.281e-02, -3.578e-02, -5.474e-02, 6.189e-02, 3.186e-02, -1.978e-03) * s1_2_1;
	r2 += M4(1.724e-03, 2.663e-02, -5.623e-02, 1.408e-01, 8.909e-02, -2.933e-01, -7.360e-02, -9.617e-02, -6.936e-02, 1.290e-01, -9.714e-03, -1.344e-02, -1.635e-02, 1.685e-02, -2.283e-02, -5.465e-02) * s1_2_1;
	r3 += M4(-1.048e-01, 1.412e-02, -2.435e-02, -2.139e-01, -8.395e-02, 2.401e-02, 1.137e-01, 9.982e-02, -5.625e-02, -3.897e-02, -6.369e-02, 5.681e-02, -1.676e-02, 4.463e-02, 1.689e-02, -1.434e-01) * s1_2_1;
	r0 += M4(1.411e-01, -3.772e-02, -1.150e-01, 7.442e-02, -4.469e-01, -1.503e-01, 8.379e-01, 2.150e+00, -1.218e-01, -8.196e-02, 3.992e-02, 6.999e-02, 1.068e-02, 4.589e-03, -3.025e-02, 2.516e-02) * s1_2_2;
	r1 += M4(-5.603e-03, 1.322e-02, 3.184e-03, -7.208e-02, -7.760e-01, -3.289e-01, -8.844e-01, 6.342e-01, 3.994e-02, 5.921e-02, 3.042e-02, -6.887e-03, -2.806e-02, -5.247e-02, -1.978e-02, -2.551e-02) * s1_2_2;
	r2 += M4(-5.955e-02, -1.796e-02, -2.003e-01, 3.895e-02, -9.683e-01, 1.151e+00, -4.535e-01, -1.912e-01, -1.464e-02, 1.008e-01, 2.824e-02, -7.898e-03, -1.539e-02, -4.505e-02, -5.119e-02, 5.661e-03) * s1_2_2;
	r3 += M4(4.865e-03, -8.762e-02, -4.716e-02, -1.934e-01, 5.624e-01, -1.629e+00, 4.267e-01, -5.356e-01, 1.809e-04, -7.298e-02, -1.587e-02, 2.853e-02, 6.627e-02, 2.117e-02, -4.390e-03, 1.207e-01) * s1_2_2;
	r0 += V4(-5.941e-03, -9.372e-03, -7.002e-03, -4.919e-03);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(-1.668e-02, -2.272e-02, 2.249e-02, -1.083e-02);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-8.417e-03, -2.250e-03, -3.500e-02, -1.345e-03);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-1.574e-02, 8.068e-03, -1.404e-05, -1.553e-02);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-6x16-BILINEAR-MPV-NVL-DS-conv6
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv5
//!BIND LUMA
//!SAVE conv6
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv5_pt;
			V4 sr0 = V4(conv5_gather(p, 0));
			V4 sg0 = V4(conv5_gather(p, 1));
			V4 sb0 = V4(conv5_gather(p, 2));
			V4 sa0 = V4(conv5_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(8.799e-02, -5.531e-02, 8.797e-02, -1.728e-02, 4.389e-02, 3.919e-02, 4.178e-02, -1.426e-02, 2.234e-01, 5.424e-02, 1.056e-01, 6.206e-02, 7.047e-04, 3.883e-03, -6.492e-02, -6.811e-02) * s0_0_0;
	r1 += M4(-1.398e-02, -7.303e-03, 1.954e-02, 2.198e-03, 2.399e-02, 6.082e-02, 1.704e-02, 1.543e-02, -2.623e-02, -2.469e-02, -1.255e-01, 2.633e-02, -8.601e-03, 5.462e-02, -9.330e-03, 9.674e-03) * s0_0_0;
	r2 += M4(-8.381e-03, -5.137e-02, -3.657e-02, -2.458e-01, 7.089e-03, 1.475e-01, 1.220e-02, 3.290e-02, -1.774e-01, 1.559e-01, -6.334e-02, 3.363e-01, -1.650e-01, 8.831e-02, -1.718e-02, 2.222e-02) * s0_0_0;
	r3 += M4(-2.643e-02, -2.838e-02, -6.266e-01, -5.905e-03, -9.227e-02, 1.363e-04, 2.771e-01, 2.924e-02, 1.363e-01, 7.995e-02, -2.364e-01, 2.172e-02, -1.327e-01, 2.921e-02, 1.085e-01, -1.049e-02) * s0_0_0;
	r0 += M4(2.248e-01, 1.599e-02, -6.375e-02, -6.636e-02, -1.179e-01, 3.886e-02, -1.280e-01, -6.830e-02, -3.103e-01, 1.153e-01, -1.264e-01, -1.317e-01, -1.027e-01, 5.004e-02, -1.064e-01, -5.704e-02) * s0_0_1;
	r1 += M4(-2.209e-02, -1.343e-01, -5.527e-02, 4.997e-02, 8.303e-02, -8.142e-02, 5.166e-02, 1.013e-01, 9.684e-02, 3.296e-01, -4.152e-02, 4.222e-02, 6.665e-02, -1.092e-02, 1.216e-01, 4.918e-02) * s0_0_1;
	r2 += M4(6.334e-02, -5.593e-02, 1.736e-02, 1.328e-02, 5.760e-02, -6.797e-02, -3.192e-02, 7.472e-04, 1.764e-02, 4.233e-02, 9.108e-03, -4.309e-01, -7.126e-02, -7.605e-03, 8.086e-03, -3.766e-02) * s0_0_1;
	r3 += M4(-3.384e-01, -3.762e-02, 1.898e-02, 2.731e-02, -4.376e-02, 5.107e-02, -6.559e-02, 1.839e-02, 4.567e-02, 3.365e-02, 2.993e-01, 5.634e-03, 1.162e-01, -9.265e-05, 1.362e-02, -5.301e-04) * s0_0_1;
	r0 += M4(-6.657e-02, 1.968e-03, -4.847e-02, -6.261e-02, 6.433e-02, -3.267e-02, 1.696e-02, 2.671e-03, 7.820e-02, -5.805e-02, 7.510e-02, 6.605e-03, -6.593e-02, -4.326e-03, -9.064e-02, -3.829e-02) * s0_0_2;
	r1 += M4(-7.364e-02, -9.046e-03, 2.807e-02, -1.229e-02, 4.961e-02, 7.406e-02, 6.307e-02, 7.739e-02, -1.627e-01, -2.049e-02, 2.400e-02, 9.692e-02, 3.393e-02, -1.696e-02, -3.760e-02, 8.625e-03) * s0_0_2;
	r2 += M4(1.853e-01, 1.563e-03, -9.061e-02, -1.308e-04, -3.887e-02, 5.383e-02, 3.033e-02, 6.055e-02, -1.407e-01, 8.417e-02, 1.353e-01, -4.167e-03, 5.909e-02, 4.900e-03, -4.223e-02, 1.980e-02) * s0_0_2;
	r3 += M4(-8.188e-02, 1.282e-02, -5.871e-02, 1.637e-02, -6.675e-01, 2.914e-03, 1.312e-02, 2.189e-02, 1.017e-01, 1.548e-02, 5.565e-03, 1.312e-02, -4.890e-02, 1.762e-02, -3.999e-02, 1.685e-02) * s0_0_2;
	r0 += M4(-6.564e-02, -9.883e-02, -5.419e-02, -6.462e-02, 8.116e-02, -2.724e-02, -1.725e-02, 6.222e-02, -9.978e-02, 2.313e-02, -4.093e-02, -8.050e-02, 3.898e-01, -6.722e-02, 8.544e-02, -5.432e-03) * s0_1_0;
	r1 += M4(1.680e-03, -3.253e-02, -1.964e-01, 4.251e-03, 2.888e-02, 5.134e-02, -1.219e-01, 4.238e-02, -1.381e-01, 1.391e-02, 4.987e-02, -8.774e-02, 5.735e-02, -8.393e-02, 2.582e-02, 1.867e-01) * s0_1_0;
	r2 += M4(8.910e-02, -1.140e-01, -4.181e-02, -5.402e-02, 5.125e-02, -7.881e-02, -2.845e-02, -1.860e-01, -1.872e-01, -6.446e-03, 9.816e-02, 7.202e-02, 6.697e-02, 7.739e-02, -1.399e-01, 5.058e-03) * s0_1_0;
	r3 += M4(-4.183e-01, -6.349e-02, -5.346e-02, -1.875e-02, -1.160e-01, 8.898e-02, -4.110e-02, -1.171e-02, 2.796e-02, 1.056e-01, -2.718e-02, -1.862e-02, -4.266e-03, -9.930e-02, -5.765e-02, 4.158e-03) * s0_1_0;
	r0 += M4(-5.322e-01, -1.860e-01, -4.995e-01, -5.227e-02, -5.988e-01, 1.606e-01, 2.828e-01, -4.221e-02, -1.584e-01, -1.423e-01, 2.749e-01, 1.780e-01, 3.228e-01, 1.173e-01, 3.387e-01, 2.144e-02) * s0_1_1;
	r1 += M4(-2.957e-01, -9.198e-02, -3.759e-01, -3.770e-02, -3.305e-01, 1.186e-01, -5.956e-01, -4.881e-02, 3.265e-01, 7.959e-02, -3.940e-01, 4.278e-01, -4.087e-02, -1.265e-01, 1.189e-01, 5.397e-01) * s0_1_1;
	r2 += M4(-8.016e-03, -1.940e-01, -9.442e-02, -3.163e-01, -1.121e-01, 1.728e-01, 3.707e-02, 1.839e-01, 2.957e-02, -1.898e-01, -7.798e-02, 1.155e-01, 5.735e-04, 5.594e-02, 1.585e-01, -3.989e-02) * s0_1_1;
	r3 += M4(-5.368e-01, 1.238e-01, -3.996e-02, 2.645e-02, 3.919e-01, -9.721e-02, -3.161e-03, 3.615e-01, -4.378e-01, 3.607e-02, -1.146e-01, 4.647e-01, -3.406e-01, -3.915e-02, -1.468e-02, 1.170e-01) * s0_1_1;
	r0 += M4(-8.873e-02, -5.658e-02, -9.729e-02, 1.679e-02, -2.874e-01, 6.104e-02, -9.512e-02, -2.661e-02, -2.298e-01, 1.949e-01, -1.092e-01, 3.662e-02, 2.975e-02, -1.766e-02, 6.618e-02, -7.326e-02) * s0_1_2;
	r1 += M4(-2.804e-01, -4.059e-03, -2.157e-01, 1.189e-02, 9.245e-02, 1.830e-02, -1.328e-01, 1.557e-01, 5.548e-02, -9.155e-02, -1.247e-02, -6.314e-02, 1.435e-02, -1.627e-02, -5.840e-02, -2.084e-02) * s0_1_2;
	r2 += M4(-1.608e-01, -1.362e-01, -1.102e-01, 1.320e-03, 1.631e-01, 8.230e-02, 1.314e-01, -3.679e-02, -4.617e-02, -2.061e-01, -9.399e-02, -1.073e-02, 5.622e-02, -1.477e-02, -4.772e-02, -2.367e-02) * s0_1_2;
	r3 += M4(1.904e-01, 2.949e-02, 1.667e-02, -8.880e-02, -3.673e-01, -5.276e-03, 1.218e-02, 1.509e-01, 1.646e-01, 8.815e-02, 2.992e-02, -1.611e-02, 4.100e-02, -4.232e-02, -1.874e-02, 2.544e-02) * s0_1_2;
	r0 += M4(4.202e-03, -1.039e-01, 3.175e-03, -8.322e-02, -1.296e-01, -1.092e-02, -6.157e-02, -1.101e-01, -8.798e-02, 2.573e-01, 6.910e-02, 1.659e-01, 6.914e-02, 3.535e-03, 6.383e-02, 6.714e-02) * s0_2_0;
	r1 += M4(-7.720e-04, -2.392e-02, -5.962e-02, -6.714e-03, 2.387e-02, 1.690e-03, 1.254e-01, 1.439e-02, -3.021e-03, 3.500e-02, -2.154e-01, 8.722e-03, -2.549e-02, -1.436e-02, 1.862e-01, -2.518e-02) * s0_2_0;
	r2 += M4(-1.395e-01, -3.021e-02, 1.403e-02, -1.908e-02, 2.067e-01, -3.230e-02, -1.704e-02, -3.548e-02, -1.315e-01, 1.181e-01, 1.266e-01, 2.254e-02, 1.666e-02, -1.258e-01, 4.689e-03, 1.724e-02) * s0_2_0;
	r3 += M4(9.933e-02, -2.163e-01, -1.822e-02, -1.847e-02, -1.010e-01, 1.928e-01, 3.795e-02, 1.345e-02, 1.153e-01, -4.232e-02, -5.630e-03, 6.280e-02, 7.628e-02, 1.462e-01, 6.077e-02, 6.727e-02) * s0_2_0;
	r0 += M4(5.524e-02, -1.308e-01, -8.024e-02, -2.063e-01, 1.751e-01, 1.261e-01, -8.205e-02, 3.097e-02, -6.354e-02, -3.137e-01, -2.309e-01, -3.014e-01, 2.977e-01, 6.291e-02, 3.545e-01, 2.529e-01) * s0_2_1;
	r1 += M4(-3.759e-02, -1.891e-02, -4.965e-02, -1.492e-02, 1.065e-02, -3.925e-04, -1.908e-01, -2.357e-02, -2.045e-02, 4.937e-03, -9.574e-02, 2.300e-02, 2.692e-02, -5.651e-02, 1.613e-01, -1.773e-01) * s0_2_1;
	r2 += M4(-1.442e-01, -9.726e-02, -6.979e-02, -2.088e-03, -6.634e-02, 7.871e-02, 6.104e-02, -2.621e-02, -3.060e-02, 1.391e-01, 9.347e-02, -1.612e-02, -9.079e-02, 1.682e-01, -3.589e-02, 1.913e-02) * s0_2_1;
	r3 += M4(-4.269e-02, 1.958e-01, 1.815e-02, 1.365e-02, 1.777e-02, -4.604e-02, -5.536e-02, -9.736e-02, 3.712e-01, -1.397e-01, 1.403e-03, -9.105e-02, -6.320e-02, -5.225e-02, -1.298e-02, -6.839e-02) * s0_2_1;
	r0 += M4(-2.123e-02, -6.580e-02, -8.213e-02, 4.648e-02, -1.632e-01, -3.901e-02, 3.585e-03, -6.039e-02, 9.260e-02, -3.123e-02, 2.075e-02, -8.140e-03, -1.188e-02, -7.766e-02, 8.403e-02, 9.031e-03) * s0_2_2;
	r1 += M4(-1.313e-01, -1.435e-02, 5.483e-02, -5.526e-03, 6.636e-02, -5.768e-03, -2.018e-02, 7.083e-03, 2.011e-02, -3.015e-02, -1.127e-01, -8.984e-03, -2.057e-02, -1.368e-02, 6.514e-02, -1.154e-02) * s0_2_2;
	r2 += M4(3.473e-02, -5.631e-02, -7.239e-02, 1.012e-02, -2.013e-01, 3.704e-02, -2.376e-02, 1.242e-02, -5.349e-02, 4.900e-02, -7.356e-03, 1.192e-03, -1.693e-02, 9.879e-02, -4.839e-02, -2.875e-03) * s0_2_2;
	r3 += M4(6.837e-02, -2.622e-02, -7.186e-03, -2.092e-02, -3.440e-01, 4.764e-02, 4.538e-02, 4.680e-02, 3.322e-02, -2.245e-02, 4.594e-02, 5.382e-02, -4.071e-02, 4.611e-02, 2.624e-02, 4.660e-02) * s0_2_2;
	r0 += M4(-2.530e-02, 8.782e-03, 7.495e-02, 3.071e-02, -1.154e-01, 2.468e-02, 1.080e-01, -9.201e-03, -2.483e-02, 2.012e-02, 7.856e-02, 6.100e-02, -3.816e-02, 4.443e-02, 3.333e-02, 1.055e-02) * s1_0_0;
	r1 += M4(3.715e-02, -1.894e-02, 1.360e-01, 5.530e-03, -5.415e-02, 2.141e-01, 3.401e-02, 5.467e-02, 4.657e-02, 5.489e-02, 7.554e-02, 2.002e-02, 1.334e-02, -2.448e-02, 1.786e-01, 2.448e-02) * s1_0_0;
	r2 += M4(1.860e-01, -9.803e-03, -3.590e-02, -6.080e-01, -2.591e-02, 2.089e-03, 3.863e-02, 4.460e-01, -7.145e-02, -5.121e-02, -5.018e-02, -9.637e-03, -2.594e-02, 9.153e-03, 3.952e-02, 4.392e-01) * s1_0_0;
	r3 += M4(2.031e-01, 5.961e-02, 4.334e-01, -5.075e-03, 1.295e-01, -1.112e-02, 5.897e-02, 2.045e-02, -1.442e-01, -2.955e-02, -2.435e-01, 1.774e-02, -8.916e-02, 8.728e-02, -4.667e-02, -1.868e-02) * s1_0_0;
	r0 += M4(1.531e-01, -3.820e-02, 1.405e-01, 3.511e-02, -2.232e-01, 6.077e-02, -6.569e-02, -1.122e-02, 9.566e-02, -7.077e-02, 2.193e-01, 7.907e-02, 1.490e-01, -1.956e-03, 1.410e-01, -5.706e-02) * s1_0_1;
	r1 += M4(-2.165e-01, 6.486e-02, -8.715e-02, 5.758e-02, 1.455e-01, 1.739e-02, -3.225e-02, -3.405e-02, 8.146e-03, 4.801e-01, -1.160e-01, 6.406e-02, 1.013e-01, 1.844e-01, 1.336e-01, 5.652e-02) * s1_0_1;
	r2 += M4(-3.117e-01, 1.114e-01, 2.013e-02, 1.053e-01, -2.981e-01, -6.516e-02, 1.232e-01, -1.010e-01, 6.610e-02, 5.932e-02, 7.538e-02, -4.529e-02, -1.470e-01, 1.303e-01, 4.969e-02, 9.464e-02) * s1_0_1;
	r3 += M4(-1.177e-01, 3.468e-02, -3.017e-01, -3.534e-03, 2.037e-01, -3.458e-02, 1.004e-01, -3.501e-02, -1.861e-01, -6.528e-02, 1.894e-01, 2.411e-02, 1.203e-01, 3.201e-02, 1.545e-01, 5.775e-02) * s1_0_1;
	r0 += M4(1.559e-01, 6.830e-04, -6.414e-03, -1.080e-02, -9.167e-03, -8.697e-03, -1.577e-02, -1.935e-02, 1.658e-02, -1.023e-02, 2.630e-02, -1.606e-02, 1.119e-02, 3.268e-02, 2.108e-02, -8.387e-02) * s1_0_2;
	r1 += M4(7.315e-02, -3.935e-02, -2.543e-02, 9.547e-03, -7.257e-03, 4.960e-02, -5.166e-02, 4.278e-02, -8.961e-02, -7.799e-03, 8.872e-02, 1.237e-02, 1.285e-01, -3.108e-02, 3.815e-02, -2.057e-02) * s1_0_2;
	r2 += M4(-1.443e-02, 2.360e-02, 2.942e-02, -5.403e-02, -1.890e-05, -4.555e-03, 1.353e-02, 4.054e-02, -1.289e-01, 4.119e-02, -2.879e-02, 4.869e-02, -1.466e-01, 7.412e-02, -4.039e-02, -4.733e-02) * s1_0_2;
	r3 += M4(-1.039e-02, -1.412e-02, 7.618e-02, 1.447e-02, 1.662e-02, 2.077e-02, -4.560e-02, -2.093e-02, -3.010e-02, 1.552e-02, -7.702e-02, 1.107e-02, -3.103e-02, 1.719e-02, 2.242e-02, 2.553e-02) * s1_0_2;
	r0 += M4(-5.547e-02, -1.600e-01, 1.165e-01, 1.021e-01, 5.173e-01, 1.588e-01, -1.962e-02, 2.456e-01, 1.900e-01, -2.785e-03, -1.558e-02, 1.233e-01, -1.055e-01, 3.391e-01, 3.724e-02, 7.233e-02) * s1_1_0;
	r1 += M4(5.099e-02, -2.823e-02, -2.664e-02, 1.613e-02, 1.402e-01, 4.800e-03, -1.015e-01, 8.391e-02, -3.951e-03, -3.044e-02, 9.751e-02, 1.936e-02, -4.456e-02, -1.056e-02, -2.930e-02, -1.947e-02) * s1_1_0;
	r2 += M4(5.690e-02, 2.157e-01, -6.149e-02, 1.559e-01, -1.975e-01, -9.068e-02, -1.675e-01, 2.752e-01, -2.053e-01, 1.015e-01, -1.300e-01, -7.446e-02, -9.611e-02, -4.919e-02, 5.764e-02, 1.773e-01) * s1_1_0;
	r3 += M4(-9.499e-02, -5.412e-02, -9.514e-02, -2.065e-02, -3.838e-01, -2.443e-02, -1.608e-02, -6.921e-02, -8.819e-02, 3.954e-01, 2.142e-02, -4.924e-02, 6.947e-02, 1.655e-01, 9.322e-02, 5.297e-02) * s1_1_0;
	r0 += M4(-8.957e-02, -1.163e-01, -3.302e-01, 1.521e-01, -1.958e-02, 7.805e-02, 2.242e-01, -1.112e-01, -9.523e-02, 5.257e-02, -8.817e-03, 1.598e-01, -4.136e-01, -1.784e-01, 4.061e-02, 2.097e-01) * s1_1_1;
	r1 += M4(-1.704e-01, -7.613e-02, 7.483e-01, -7.350e-02, 5.997e-01, 1.515e-01, 1.279e-01, -2.612e-02, -6.509e-02, 1.802e-01, 1.060e-01, 2.160e-02, 4.902e-01, -1.095e-01, -1.176e-01, -1.892e-02) * s1_1_1;
	r2 += M4(3.677e-02, 1.009e-01, 4.274e-02, -3.991e-02, -1.432e-01, 1.431e-01, 8.752e-01, -6.671e-03, 2.348e-02, 3.747e-02, 2.174e-01, -2.585e-02, -9.487e-02, 6.680e-02, -5.330e-03, -1.359e-02) * s1_1_1;
	r3 += M4(3.785e-02, 3.606e-02, -1.504e-02, -5.810e-02, -8.659e-02, -7.026e-02, 8.567e-03, 4.580e-01, 4.911e-02, -1.150e-01, -6.638e-02, -3.853e-01, -5.654e-01, -2.828e-02, 6.241e-02, -9.776e-02) * s1_1_1;
	r0 += M4(7.515e-02, -3.347e-02, 3.024e-01, 5.093e-02, -1.019e-01, 3.080e-02, -1.235e-01, -1.152e-03, -1.476e-01, 1.687e-02, -1.023e-01, 2.627e-02, -2.446e-01, 2.494e-02, -4.952e-02, 3.770e-02) * s1_1_2;
	r1 += M4(-2.556e-02, -8.860e-02, 2.882e-01, -1.930e-02, -6.536e-02, -2.065e-02, -2.902e-02, 9.416e-02, 3.776e-02, -9.062e-03, -2.212e-01, 2.032e-02, -6.390e-02, 5.580e-02, -9.375e-02, 1.219e-02) * s1_1_2;
	r2 += M4(-7.025e-02, 1.727e-01, -4.889e-02, 2.444e-02, -2.707e-01, -2.485e-02, 9.705e-02, 6.393e-03, 1.632e-02, -3.772e-02, -9.447e-02, 4.527e-03, -3.673e-02, -5.434e-02, -2.662e-02, -5.558e-03) * s1_1_2;
	r3 += M4(1.262e-01, 3.799e-02, 4.290e-03, 4.458e-02, 1.076e-01, -1.715e-02, -7.831e-03, -1.257e-02, 5.495e-02, 1.828e-02, -3.433e-02, 4.487e-02, 9.683e-02, -3.163e-02, 2.209e-03, 3.830e-02) * s1_1_2;
	r0 += M4(-6.083e-02, -3.461e-03, 8.804e-03, 2.171e-02, -1.036e-01, 2.815e-02, -9.809e-02, -2.164e-01, -4.107e-02, -1.739e-02, -6.187e-02, -6.617e-02, 1.379e-01, 4.459e-02, 7.018e-02, 1.316e-01) * s1_2_0;
	r1 += M4(-9.081e-03, 1.392e-02, -6.467e-02, 8.554e-03, -9.858e-02, 4.939e-03, -3.732e-02, 1.886e-02, -3.799e-02, -1.778e-03, -4.665e-02, -1.525e-03, -1.955e-02, 1.363e-02, -6.885e-02, -4.894e-04) * s1_2_0;
	r2 += M4(-1.199e-02, 6.883e-02, 2.649e-02, -5.142e-02, -1.239e-01, 8.130e-02, 3.419e-02, -2.097e-03, -2.602e-01, -4.744e-02, -5.258e-02, 4.106e-03, -1.249e-01, 4.285e-02, 2.954e-02, 6.422e-02) * s1_2_0;
	r3 += M4(-1.179e-01, 1.883e-01, 4.112e-02, 5.521e-02, 8.105e-02, -1.141e-01, 1.227e-01, -2.186e-02, -4.109e-01, -1.957e-01, -1.544e-02, 1.456e-02, 1.006e-01, -3.539e-01, -7.141e-03, 8.237e-03) * s1_2_0;
	r0 += M4(1.061e-01, 1.858e-01, 9.203e-02, 6.648e-02, 4.571e-02, 2.167e-01, -1.578e-01, -3.651e-03, -5.572e-02, -9.352e-02, -2.102e-02, -2.576e-01, 7.309e-02, 1.588e-01, 2.665e-02, -1.989e-02) * s1_2_1;
	r1 += M4(3.423e-02, -1.279e-02, -2.859e-01, 1.107e-02, 8.287e-02, -7.966e-03, -1.948e-01, -5.520e-02, -1.919e-02, 2.000e-02, 1.076e-01, -3.160e-03, 1.325e-01, -9.411e-03, -4.789e-02, 2.318e-02) * s1_2_1;
	r2 += M4(5.893e-02, -6.210e-02, 4.182e-02, 3.822e-02, -6.925e-04, -8.092e-02, 1.862e-01, -9.531e-03, -1.043e-01, 1.429e-02, 4.116e-03, -1.758e-02, -1.093e-01, -3.133e-02, -5.419e-02, 1.140e-03) * s1_2_1;
	r3 += M4(-9.936e-02, -1.375e-02, -7.593e-02, 9.386e-02, 2.638e-01, 2.913e-02, -2.555e-02, -4.651e-02, -1.546e-01, 1.294e-01, 1.479e-02, -1.548e-01, 7.171e-02, 1.430e-01, 3.373e-02, 1.343e-01) * s1_2_1;
	r0 += M4(8.131e-02, -6.664e-02, 1.672e-02, -6.491e-03, -2.533e-02, 7.667e-03, -2.131e-02, -4.851e-02, -2.362e-02, -2.509e-02, -9.643e-02, -1.849e-02, 7.106e-02, 7.116e-02, 1.439e-01, -6.273e-03) * s1_2_2;
	r1 += M4(2.625e-02, -2.534e-02, 2.925e-02, 2.637e-03, 4.302e-03, 3.152e-03, 1.772e-02, 3.899e-02, -5.638e-02, -1.984e-03, -3.350e-02, 5.879e-03, 7.625e-02, 2.647e-02, 4.841e-02, -1.546e-02) * s1_2_2;
	r2 += M4(1.110e-02, 3.947e-02, -3.677e-02, -1.010e-02, -1.341e-01, -1.633e-02, -8.911e-03, 2.011e-02, -8.028e-02, -5.406e-02, 1.118e-02, -6.697e-03, -1.241e-01, 8.682e-02, 1.184e-01, -1.770e-02) * s1_2_2;
	r3 += M4(-7.130e-02, 1.783e-02, 2.044e-02, 2.386e-02, 1.092e-01, -2.492e-02, -5.504e-03, -1.581e-02, -8.839e-02, -5.966e-02, 9.143e-03, -4.916e-03, 1.128e-01, 3.950e-02, -1.473e-02, 2.306e-03) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(-5.491e-02, -6.262e-03, -3.593e-02, -3.113e-02, 1.591e-01, 2.428e-02, 1.616e-02, 3.681e-02, -2.223e-01, 7.837e-03, 1.033e-02, -2.669e-03, -4.669e-03, -1.298e-02, -3.139e-03, 6.858e-03) * s0_0_0;
	r1 += M4(-5.336e-02, -6.377e-02, -8.795e-02, 2.452e-02, 3.676e-02, 6.354e-02, 5.234e-02, 5.243e-03, -5.988e-02, -2.285e-02, -1.769e-01, 1.354e-02, -2.691e-03, -4.250e-03, -7.317e-02, -5.854e-03) * s0_0_0;
	r2 += M4(-2.615e-02, -4.038e-03, 3.209e-02, 4.140e-01, -3.684e-02, -1.232e-01, -5.406e-02, -8.155e-01, 8.723e-02, 8.630e-02, -5.670e-02, -1.984e-02, 3.539e-02, -7.221e-02, -3.672e-02, 1.142e-02) * s0_0_0;
	r3 += M4(-1.101e-01, -9.008e-02, 1.281e-01, -5.446e-03, 1.913e-01, 2.650e-02, -6.191e-01, -9.654e-03, 2.649e-04, 2.521e-02, 2.436e-01, -3.101e-02, 1.177e-01, 4.047e-03, 4.275e-01, -3.649e-02) * s0_0_0;
	r0 += M4(-1.714e-01, 3.543e-02, -5.297e-02, -4.674e-02, -1.567e-01, -8.296e-02, -2.579e-02, 6.085e-02, -2.952e-01, 2.137e-02, -1.554e-01, 8.745e-02, -5.789e-02, -2.500e-02, -1.660e-02, -2.167e-02) * s0_0_1;
	r1 += M4(1.561e-01, 2.151e-01, 8.332e-03, 3.725e-02, -2.522e-01, -1.917e-01, -1.251e-01, -1.566e-02, 1.160e-01, 2.028e-01, 6.200e-03, -3.691e-02, 1.359e-02, -1.802e-01, -2.541e-01, 2.643e-02) * s0_0_1;
	r2 += M4(7.134e-02, -2.702e-01, -8.724e-02, 2.735e-01, -2.351e-01, -9.928e-03, 3.903e-02, -1.403e-01, -2.445e-01, -1.121e-01, 5.868e-02, -1.027e-01, 8.294e-02, -1.004e-01, -1.008e-01, 1.173e-01) * s0_0_1;
	r3 += M4(6.357e-02, -6.372e-02, 5.867e-02, 3.072e-02, -2.766e-01, -8.922e-03, 2.934e-02, -8.252e-03, 1.881e-01, 2.902e-02, -1.292e-01, 2.715e-02, 5.431e-02, -7.101e-02, 2.475e-01, -4.355e-02) * s0_0_1;
	r0 += M4(1.821e-01, -8.499e-03, 1.962e-01, 8.663e-02, 8.966e-03, 1.407e-02, -1.714e-02, -2.985e-04, -2.675e-02, 7.317e-03, 3.026e-02, 3.484e-02, 1.306e-01, 1.000e-01, -4.916e-02, -2.642e-02) * s0_0_2;
	r1 += M4(-9.632e-02, 1.492e-01, -4.111e-01, 8.744e-02, -1.867e-02, 6.821e-03, 6.729e-03, -5.851e-03, -1.338e-01, 4.753e-02, -3.168e-02, 8.085e-03, 5.749e-02, 1.897e-01, -4.639e-02, -4.845e-03) * s0_0_2;
	r2 += M4(-1.378e-01, -1.381e-01, 1.153e-01, 6.794e-02, -5.717e-02, -5.019e-02, 2.783e-03, 6.451e-03, -1.428e-01, -5.808e-02, 1.232e-02, 5.160e-02, -1.152e-01, -2.783e-02, -1.880e-02, 5.304e-02) * s0_0_2;
	r3 += M4(2.137e-01, -1.328e-02, -9.641e-02, -3.759e-02, 5.386e-02, -3.260e-02, 1.852e-02, -8.275e-03, -6.869e-02, -2.184e-02, 7.302e-02, -5.903e-02, 2.886e-01, -2.061e-02, -1.504e-01, -3.126e-02) * s0_0_2;
	r0 += M4(1.164e-01, 1.431e-01, -1.457e-01, -4.623e-02, -1.739e-01, -2.332e-01, 2.055e-02, -4.050e-02, 3.538e-01, -1.978e-01, 1.746e-02, 2.442e-01, -2.230e-01, -1.203e-02, -9.354e-02, -1.452e-01) * s0_1_0;
	r1 += M4(-3.353e-02, 1.071e-01, 2.961e-01, 3.806e-03, 5.586e-02, 2.634e-02, -2.957e-01, 3.550e-03, 4.791e-02, -3.284e-02, -1.278e-01, 6.909e-03, -1.388e-02, -4.054e-02, 2.012e-01, -2.298e-02) * s0_1_0;
	r2 += M4(4.517e-02, -1.412e-01, 2.422e-02, -3.421e-02, 1.348e-01, 1.468e-01, 1.286e-02, -1.119e-01, 2.431e-02, 7.565e-02, -9.652e-03, -2.447e-01, -8.290e-02, 1.849e-02, 9.659e-04, 1.315e-01) * s0_1_0;
	r3 += M4(7.234e-02, 1.343e-01, 2.107e-01, 1.737e-02, -6.693e-01, -9.048e-02, 6.488e-02, -1.894e-02, -1.813e-01, -4.756e-01, 5.353e-02, -8.874e-03, 5.909e-02, -8.833e-02, -6.909e-02, -2.953e-02) * s0_1_0;
	r0 += M4(7.149e-02, -3.910e-02, -1.560e-01, 9.845e-02, -3.204e-01, -5.053e-01, -7.129e-01, -3.043e-01, 3.828e-01, 3.527e-01, 4.100e-01, 7.943e-02, 1.925e-01, 1.637e-01, -1.757e-01, -1.057e-01) * s0_1_1;
	r1 += M4(2.697e-02, 4.254e-02, 9.911e-02, 3.890e-01, -5.328e-01, 6.216e-02, -6.935e-01, 1.911e-02, -3.214e-01, 3.621e-02, -1.832e-01, 6.124e-02, 1.548e-01, -7.381e-02, 4.303e-01, -1.050e-01) * s0_1_1;
	r2 += M4(-3.100e-02, 1.441e-01, -2.165e-01, 3.862e-02, -1.849e-01, -6.145e-01, 4.045e-02, 4.293e-02, -2.394e-02, 1.126e-01, 7.780e-02, 1.591e-01, 2.015e-01, 7.426e-02, 1.173e-01, 1.086e-01) * s0_1_1;
	r3 += M4(1.084e-01, 4.058e-02, -7.603e-02, 9.518e-03, -3.523e+00, 5.460e-02, 3.061e-03, 2.261e-01, -1.489e-01, 1.236e-01, 4.700e-02, 1.221e-01, 8.625e-02, -1.626e-02, -1.382e-01, 3.056e-01) * s0_1_1;
	r0 += M4(-3.318e-02, 3.061e-01, -3.076e-01, 9.591e-02, -1.216e-01, -7.951e-03, -2.466e-01, 1.960e-02, 3.292e-02, -1.522e-01, 2.069e-01, 6.860e-02, 3.802e-02, 6.105e-02, -9.407e-04, 1.431e-01) * s0_1_2;
	r1 += M4(3.412e-01, -2.545e-02, 2.955e-01, -1.171e-01, -6.620e-02, 3.289e-02, -1.019e-01, -5.187e-03, 1.532e-01, 2.026e-02, -1.262e-01, 7.054e-03, 6.474e-02, 1.600e-01, -7.005e-02, 2.628e-01) * s0_1_2;
	r2 += M4(1.376e-01, -1.519e-01, 2.608e-01, -2.930e-02, -4.005e-02, -2.116e-01, -4.375e-02, -6.068e-04, 1.150e-01, 1.304e-01, -2.936e-02, 3.211e-02, -6.457e-02, -1.018e-01, 3.212e-01, 6.008e-03) * s0_1_2;
	r3 += M4(1.539e-01, -1.115e-01, 4.854e-02, 1.407e-01, -1.907e-02, 5.232e-03, 9.480e-03, -5.452e-02, -1.137e-01, -1.738e-02, -1.323e-02, 1.602e-01, 3.431e-01, 4.236e-03, 6.070e-02, -3.483e-02) * s0_1_2;
	r0 += M4(1.141e-01, -7.534e-02, -5.864e-03, -2.251e-01, 4.650e-02, 5.628e-02, 3.113e-02, -1.009e-01, -1.416e-01, -1.186e-01, 2.468e-02, -1.613e-01, 1.668e-01, 1.051e-01, 8.987e-02, 1.082e-01) * s0_2_0;
	r1 += M4(-3.355e-02, -1.580e-02, 6.233e-02, 4.407e-02, 4.455e-02, -4.253e-03, 8.976e-04, -6.218e-03, 1.407e-02, -6.172e-04, 7.910e-02, -2.245e-03, -5.277e-03, -1.329e-02, -7.495e-02, -1.703e-02) * s0_2_0;
	r2 += M4(-4.209e-02, -2.213e-01, -2.118e-02, -5.974e-03, -2.338e-02, 4.253e-03, -3.748e-02, 4.564e-03, 2.416e-01, -2.353e-02, 3.815e-02, -2.192e-02, -1.948e-01, 9.603e-03, 2.005e-02, 6.674e-02) * s0_2_0;
	r3 += M4(8.839e-02, -5.020e-01, -3.359e-02, 1.244e-02, -4.387e-02, -6.726e-01, 8.371e-03, 1.774e-02, -2.916e-02, 4.366e-01, -8.412e-04, 7.837e-03, 7.581e-02, -1.046e-01, -4.417e-02, 1.724e-03) * s0_2_0;
	r0 += M4(4.492e-02, 2.572e-01, 2.181e-01, 1.133e-01, -7.507e-02, -2.764e-01, -4.169e-02, -4.078e-01, -7.274e-02, -7.878e-02, -1.931e-02, -4.665e-02, -6.055e-02, 1.392e-01, -4.435e-02, -5.434e-02) * s0_2_1;
	r1 += M4(1.153e-01, 1.446e-02, -2.666e-01, 1.940e-02, -3.456e-02, 2.200e-02, 1.419e-01, 2.292e-02, -7.055e-02, -8.933e-03, 1.998e-01, 3.083e-02, 1.047e-01, -3.851e-02, 1.909e-01, 4.649e-02) * s0_2_1;
	r2 += M4(6.649e-02, -1.626e-01, 1.655e-01, -1.454e-02, -3.201e-02, 1.512e-01, 2.938e-03, -3.920e-03, -2.002e-01, 3.848e-02, -4.166e-02, 3.335e-02, 7.838e-02, -2.183e-01, -8.888e-02, -1.586e-02) * s0_2_1;
	r3 += M4(2.420e-01, 2.900e-01, -3.047e-03, 1.422e-01, -1.958e-02, -9.878e-02, -1.940e-02, -8.971e-02, -8.699e-02, -1.631e-01, 1.079e-02, -2.603e-02, -7.938e-02, 2.036e-01, 1.758e-02, 1.141e-01) * s0_2_1;
	r0 += M4(-1.428e-01, -1.185e-01, -1.035e-02, -7.100e-02, -8.526e-03, 5.054e-02, -3.497e-03, -5.526e-02, 1.466e-02, 1.491e-01, -1.015e-01, 4.614e-02, 6.090e-02, 5.957e-02, 7.122e-03, -8.036e-03) * s0_2_2;
	r1 += M4(-5.488e-02, 4.278e-02, -9.345e-04, 1.476e-01, 3.626e-02, -9.087e-03, -6.811e-03, -9.265e-03, 3.748e-02, -7.911e-03, 3.145e-02, -3.577e-02, 6.064e-03, -1.314e-02, 1.880e-01, -1.821e-03) * s0_2_2;
	r2 += M4(-1.574e-01, -3.383e-01, -1.240e-01, -2.809e-02, 1.230e-01, 1.420e-01, 1.713e-02, -9.387e-04, 7.660e-02, -1.152e-02, -2.274e-03, 2.816e-03, -1.330e-03, 2.475e-02, 5.919e-02, -1.940e-02) * s0_2_2;
	r3 += M4(-8.706e-02, -7.468e-02, 1.602e-02, 2.402e-01, 1.096e-01, 6.602e-02, -2.469e-03, -1.785e-02, 5.606e-02, 2.432e-02, 1.130e-02, -5.144e-02, -1.150e-01, -8.131e-02, -7.221e-02, -1.118e-01) * s0_2_2;
	r0 += M4(-7.315e-03, 1.541e-02, 4.642e-02, 2.120e-02, 9.490e-02, -3.034e-02, 5.041e-02, 4.177e-02, -1.251e-02, -3.180e-02, -1.097e-01, -7.255e-02, 3.179e-02, -6.145e-02, -8.402e-03, -2.147e-02) * s1_0_0;
	r1 += M4(1.413e-02, 3.645e-02, 1.988e-02, 3.218e-03, 3.023e-02, -1.042e-01, -1.839e-01, 2.581e-02, -4.530e-02, -1.842e-01, -3.517e-02, 6.176e-03, 7.450e-03, -5.035e-02, -5.267e-02, -1.215e-02) * s1_0_0;
	r2 += M4(-1.982e-02, -7.882e-02, -3.383e-02, 2.156e-02, -4.992e-01, -6.012e-02, -6.088e-02, -1.281e-01, -8.992e-02, 1.320e-01, 7.328e-02, -3.017e-02, -4.911e-03, -9.087e-02, -2.824e-02, -3.701e-01) * s1_0_0;
	r3 += M4(1.049e-02, -1.710e-02, -4.233e-02, -9.048e-03, 2.199e-01, -1.019e-01, -1.890e-01, -5.582e-02, -1.040e-01, -7.375e-03, 1.813e-01, 9.041e-03, 3.114e-02, -8.517e-04, -4.882e-02, 1.567e-03) * s1_0_0;
	r0 += M4(-4.397e-02, 1.598e-02, 4.342e-02, 3.877e-02, 5.607e-02, -2.466e-02, 3.726e-02, -3.475e-03, 2.845e-02, 2.707e-02, -8.114e-02, -4.187e-02, -5.933e-02, 1.960e-02, -9.446e-02, -2.443e-02) * s1_0_1;
	r1 += M4(1.207e-02, -6.266e-02, 5.194e-02, 3.858e-02, -5.089e-02, 1.733e-01, -7.433e-02, 6.714e-02, 2.328e-02, 3.897e-01, 1.417e-01, -5.477e-02, -2.623e-01, -4.055e-02, -2.561e-01, -1.195e-02) * s1_0_1;
	r2 += M4(4.843e-02, -6.317e-02, -8.283e-03, -3.336e-02, -3.617e-01, -9.136e-03, 3.969e-02, -4.425e-02, -2.584e-01, 8.709e-02, -2.518e-02, 1.165e-01, -7.517e-02, -9.783e-02, 2.709e-02, 6.568e-02) * s1_0_1;
	r3 += M4(-9.668e-02, 1.058e-03, -2.667e-02, -8.129e-03, 1.771e-01, -3.323e-02, 1.129e-01, -3.756e-03, -1.162e-01, 1.156e-01, -1.987e-01, 5.603e-02, 5.636e-02, 9.900e-03, -1.178e-01, -4.113e-02) * s1_0_1;
	r0 += M4(1.643e-01, -4.269e-02, 1.073e-01, 3.636e-02, -6.936e-02, 2.257e-02, -2.826e-02, -1.080e-02, -8.881e-02, 1.158e-02, -4.478e-02, -2.720e-02, 6.894e-02, -6.670e-03, 6.759e-04, 1.237e-02) * s1_0_2;
	r1 += M4(-6.699e-02, 6.046e-02, -3.822e-02, -8.921e-03, -6.818e-02, 6.238e-02, -1.069e-01, 2.036e-02, 9.170e-02, -1.579e-01, 1.400e-01, -7.069e-03, 5.477e-02, -6.070e-02, -4.200e-02, -2.887e-03) * s1_0_2;
	r2 += M4(2.315e-01, -1.377e-02, 3.943e-02, 1.286e-02, -3.416e-01, -3.628e-02, -2.124e-02, 6.210e-02, -6.366e-02, -2.959e-02, -3.327e-02, -8.165e-02, -1.470e-01, -3.616e-02, -1.341e-02, -1.596e-03) * s1_0_2;
	r3 += M4(4.844e-02, -4.134e-03, 1.803e-02, -2.887e-02, 2.077e-01, -2.481e-03, -4.337e-02, -1.107e-02, -1.390e-01, -2.657e-02, 5.423e-02, 2.120e-02, -3.477e-02, -6.932e-03, -1.481e-02, 7.039e-03) * s1_0_2;
	r0 += M4(7.918e-02, -1.679e-02, -2.497e-02, 8.978e-03, -4.079e-01, -1.997e-02, 7.691e-02, 9.063e-02, -2.571e-01, -3.674e-03, 1.652e-02, -4.431e-02, -2.256e-01, -5.351e-02, -7.831e-02, -7.034e-02) * s1_1_0;
	r1 += M4(1.701e-02, 4.682e-02, -5.421e-03, -2.868e-03, -6.174e-02, -5.120e-02, 8.945e-02, -5.096e-02, 7.015e-03, 1.278e-02, 5.199e-02, -3.715e-02, -2.659e-02, -7.149e-03, -2.756e-01, -5.823e-03) * s1_1_0;
	r2 += M4(-4.920e-02, 4.458e-02, -3.215e-02, -2.473e-01, -9.981e-02, 2.571e-01, 5.978e-02, -1.796e-01, -2.032e-01, -2.426e-01, 1.400e-01, 3.954e-02, -1.763e-02, -9.980e-02, 5.942e-02, -3.599e-01) * s1_1_0;
	r3 += M4(-5.101e-02, 2.908e-02, 3.354e-02, -4.719e-02, 4.963e-01, 1.584e-01, -1.124e-02, 2.903e-02, -7.071e-02, -9.933e-02, -2.666e-01, 2.070e-01, 2.006e-01, -1.826e-01, -8.948e-04, -1.703e-02) * s1_1_0;
	r0 += M4(-1.998e-01, -7.436e-02, -2.251e-01, 4.674e-02, 4.350e-02, -1.244e-01, -2.107e-03, 7.502e-02, 7.479e-02, 7.891e-02, 1.451e-02, -8.798e-02, -6.268e-01, -1.807e-03, -4.347e-01, -1.499e-01) * s1_1_1;
	r1 += M4(-1.934e-01, -1.576e-01, -1.286e-01, -2.689e-02, 1.055e-01, -2.156e-01, 2.357e-01, -1.731e-01, 1.396e-02, -2.012e-01, -1.273e-01, 1.938e-01, -4.569e-01, 1.819e-02, -7.516e-02, -1.289e-02) * s1_1_1;
	r2 += M4(-1.420e-01, 9.635e-02, 1.294e-01, 1.334e-01, -1.680e-01, 6.431e-02, -1.414e-01, -5.531e-02, -1.878e-01, -1.781e-01, -2.358e-01, 2.753e-02, -1.773e-01, -6.488e-01, -8.179e-02, 4.436e-02) * s1_1_1;
	r3 += M4(1.802e-01, -3.900e-02, -6.913e-02, -4.269e-02, 2.359e-01, -4.190e-02, -6.746e-02, 1.176e-02, 1.263e-01, -7.233e-02, 2.738e-02, -2.877e-01, 4.641e-03, 2.365e-02, -1.496e-02, -5.383e-02) * s1_1_1;
	r0 += M4(2.074e-01, 6.025e-02, -3.824e-01, -1.218e-01, -1.392e-01, 3.167e-02, 1.364e-02, -1.916e-02, 2.521e-01, -3.788e-02, 1.704e-01, 7.432e-03, -5.624e-02, -2.671e-02, -5.085e-02, -3.866e-03) * s1_1_2;
	r1 += M4(1.018e-01, 2.247e-01, 3.232e-01, -7.396e-02, -7.553e-02, 5.903e-03, -8.612e-02, 5.401e-02, -9.889e-03, -4.403e-02, -1.482e-01, -7.384e-02, 3.441e-02, 2.274e-02, -2.580e-02, 6.517e-03) * s1_1_2;
	r2 += M4(-7.838e-02, -1.242e-01, -1.937e-01, -2.677e-02, -9.651e-02, 2.487e-02, 4.280e-02, 1.594e-02, -6.896e-02, 8.011e-02, -2.708e-02, -4.138e-02, -9.017e-02, -4.697e-02, -1.602e-02, -1.012e-02) * s1_1_2;
	r3 += M4(-2.886e-02, 3.457e-02, -4.118e-03, 8.574e-02, 3.925e-01, -8.560e-03, -1.300e-02, 5.717e-03, -2.062e-01, 4.456e-02, 1.950e-02, 1.293e-01, 6.249e-02, 4.342e-02, 5.650e-02, 1.743e-02) * s1_1_2;
	r0 += M4(3.584e-01, -1.939e-01, 8.699e-02, 9.989e-02, -1.453e-01, -1.165e-01, 6.490e-02, 1.844e-02, 3.735e-02, 2.969e-02, 2.556e-02, 6.180e-02, -9.733e-02, -1.777e-01, -9.106e-02, -1.946e-01) * s1_2_0;
	r1 += M4(1.107e-02, -2.484e-02, 1.157e-01, -4.138e-02, -2.972e-02, -2.112e-02, -1.198e-01, -9.479e-03, -1.950e-02, 2.021e-02, -1.782e-01, 3.162e-02, 4.071e-02, -1.274e-02, -4.282e-03, 1.898e-04) * s1_2_0;
	r2 += M4(7.034e-02, 7.805e-02, 1.039e-02, 6.958e-02, -3.448e-01, 1.188e-01, -1.032e-02, 4.601e-02, 1.306e-02, -1.938e-02, 3.796e-02, -2.649e-02, 8.883e-02, -1.846e-02, -2.012e-02, 7.598e-03) * s1_2_0;
	r3 += M4(1.130e-01, -2.588e-01, -1.308e-02, -5.422e-02, 3.211e-01, 1.406e-01, 4.422e-02, -2.778e-02, -1.458e-01, 1.139e-01, 2.739e-02, 1.936e-02, 9.325e-02, -2.549e-01, 9.695e-02, -8.133e-03) * s1_2_0;
	r0 += M4(3.306e-01, 1.782e-01, 1.342e-01, 9.449e-02, 9.713e-02, -1.566e-01, -3.610e-02, -3.144e-03, -7.956e-03, 5.262e-02, 3.563e-03, 2.290e-01, -1.987e-01, 3.690e-02, -4.447e-01, -2.125e-01) * s1_2_1;
	r1 += M4(6.098e-02, 4.069e-02, 1.568e-01, -1.090e-02, -6.812e-02, 7.600e-03, 1.478e-01, 1.116e-01, -3.654e-02, -4.463e-03, -7.384e-02, -5.194e-02, -1.573e-01, 8.960e-03, -1.101e-01, -5.676e-03) * s1_2_1;
	r2 += M4(-9.639e-02, -5.494e-02, -5.192e-02, -8.970e-02, -1.224e-01, -1.689e-01, -1.519e-01, -1.160e-02, -3.584e-01, -1.818e-02, -5.417e-02, 1.119e-02, -9.964e-03, 1.216e-02, 5.897e-02, 1.336e-02) * s1_2_1;
	r3 += M4(-5.035e-02, -1.494e-01, -2.065e-03, 3.879e-02, 3.367e-01, -1.434e-01, 4.588e-03, 1.912e-01, -3.916e-01, -8.249e-02, -3.442e-02, 2.467e-01, 8.400e-02, -2.927e-02, -3.616e-02, -8.379e-02) * s1_2_1;
	r0 += M4(8.897e-02, -2.396e-01, 2.612e-01, 8.472e-02, -6.887e-02, 3.887e-03, 2.350e-03, -2.915e-02, 1.298e-02, 1.058e-02, 3.072e-02, 5.397e-02, -2.090e-02, 2.700e-03, -1.520e-01, -3.653e-02) * s1_2_2;
	r1 += M4(-2.627e-01, -5.310e-03, 1.545e-01, -4.759e-02, -3.124e-02, 5.116e-03, -2.570e-02, 1.038e-02, 6.047e-02, -9.563e-04, -9.722e-02, 1.572e-02, 3.980e-02, 1.571e-02, 6.298e-02, 4.838e-03) * s1_2_2;
	r2 += M4(-1.641e-01, -2.621e-01, 9.364e-02, 1.563e-02, -2.076e-01, 5.014e-02, 5.559e-02, 9.925e-03, -2.448e-01, -5.139e-02, -1.568e-02, 1.565e-02, -1.442e-01, -4.832e-02, 2.938e-02, 1.911e-03) * s1_2_2;
	r3 += M4(2.099e-01, 2.735e-02, 1.811e-02, -5.638e-02, 1.267e-01, 8.940e-03, 1.384e-03, -4.355e-02, -1.502e-01, 1.319e-02, 1.744e-02, 7.684e-02, -2.324e-02, -2.643e-02, -3.465e-04, -2.986e-02) * s1_2_2;
	r0 += V4(-2.960e-02, -1.441e-02, -1.345e-02, -1.898e-02);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(-8.563e-03, -2.328e-02, -2.472e-02, -7.655e-04);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-5.918e-02, -1.616e-02, -3.839e-03, -1.180e-02);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-1.685e-01, -2.208e-02, -1.794e-03, 1.773e-03);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC CuNNy-6x16-BILINEAR-MPV-NVL-DS-out-shuffle
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv6
//!BIND LUMA
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 1
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv6_pt;
			V4 sr0 = V4(conv6_gather(p, 0));
			V4 sg0 = V4(conv6_gather(p, 1));
			V4 sb0 = V4(conv6_gather(p, 2));
			V4 sa0 = V4(conv6_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0;
	r0 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(1.617e-03, 6.303e-03, 5.958e-03, -5.537e-03, 2.606e-02, -1.072e-02, -8.008e-03, -1.951e-03, 1.813e-02, -1.303e-02, 1.520e-02, 1.435e-02, 1.358e-02, 2.884e-03, -3.071e-03, 1.447e-02) * s0_0_0;
	r0 += M4(-9.227e-03, 1.095e-02, 5.392e-03, 6.974e-03, -1.743e-01, 9.595e-02, 4.090e-02, -4.733e-03, 4.146e-02, 7.459e-02, 9.848e-03, 5.792e-03, -3.061e-01, -1.337e-01, -4.291e-03, -2.448e-02) * s0_0_1;
	r0 += M4(-1.090e-02, -4.993e-02, -5.909e-04, 6.948e-03, 2.008e-03, 7.573e-03, 2.450e-03, -1.481e-02, -3.373e-03, 1.267e-02, 2.480e-03, 1.114e-02, 6.244e-03, -1.606e-01, -4.915e-04, -2.646e-03) * s0_0_2;
	r0 += M4(-2.870e-02, 1.739e-02, -2.203e-02, -9.735e-03, 1.389e-02, 7.347e-04, 4.735e-02, -1.861e-02, 1.300e-01, -1.590e-03, -1.821e-01, 1.450e-02, -2.325e-02, 1.028e-03, 2.618e-02, -1.412e-04) * s0_1_0;
	r0 += M4(2.835e-01, 3.648e-02, -2.385e-01, -1.375e-01, -9.635e-02, 4.765e-02, -4.659e-01, 1.856e-01, 1.208e-01, 3.018e-01, -1.512e-01, -4.430e-01, 5.731e-02, -3.181e-03, 2.568e-01, 1.772e-01) * s0_1_1;
	r0 += M4(-9.529e-03, 1.743e-01, 2.119e-02, -6.312e-02, 7.073e-03, 2.563e-02, 3.018e-02, 7.434e-02, 1.487e-02, 9.828e-03, -1.490e-02, 1.671e-02, -1.216e-02, 2.571e-02, 1.531e-02, 1.182e-01) * s0_1_2;
	r0 += M4(-3.421e-03, 5.095e-03, 2.378e-02, -1.065e-02, -4.820e-03, -2.748e-03, 7.006e-03, 1.448e-03, -3.910e-03, 1.151e-03, 1.480e-02, 1.581e-02, 2.456e-03, 2.551e-03, 1.010e-02, 8.926e-04) * s0_2_0;
	r0 += M4(-3.972e-02, -3.894e-02, 3.288e-02, 9.406e-02, 1.003e-03, 1.865e-03, 3.536e-02, 3.162e-02, -1.542e-02, -1.583e-02, 1.715e-02, 1.068e-02, -5.503e-03, 1.351e-03, -1.879e-03, 8.880e-03) * s0_2_1;
	r0 += M4(4.103e-04, -1.230e-02, -2.000e-02, -4.163e-02, -6.207e-04, 1.315e-02, -1.338e-03, -2.331e-03, 2.547e-03, -6.296e-04, 1.331e-02, 2.765e-02, -2.778e-03, -1.033e-02, -3.211e-03, -6.199e-03) * s0_2_2;
	r0 += M4(-1.451e-02, -6.778e-03, 7.355e-03, -3.305e-03, 1.376e-03, 9.754e-03, 3.043e-03, 5.960e-04, -1.898e-02, -2.476e-03, -9.052e-03, -4.446e-04, -3.327e-02, -4.452e-03, -8.678e-03, -3.999e-03) * s1_0_0;
	r0 += M4(6.713e-02, 3.315e-02, 1.347e-02, -3.061e-02, -3.073e-04, -4.472e-03, 2.342e-03, 4.658e-03, 3.161e-02, -2.360e-02, -3.176e-02, -2.054e-02, 2.542e-03, -3.772e-02, -5.114e-03, -3.605e-03) * s1_0_1;
	r0 += M4(-2.163e-03, 6.910e-03, 3.660e-04, 6.079e-03, 4.436e-04, -4.965e-03, 8.403e-04, 1.097e-03, -9.307e-03, 4.031e-02, 3.029e-03, -1.409e-02, -8.315e-04, 1.221e-02, -3.230e-03, -8.076e-03) * s1_0_2;
	r0 += M4(8.771e-02, 4.642e-02, 2.434e-02, 1.159e-02, 1.663e-02, -7.638e-03, -3.256e-03, 8.826e-03, 3.553e-02, 1.949e-02, 5.106e-02, -2.117e-03, 2.040e-02, -2.935e-02, -4.161e-02, -1.415e-02) * s1_1_0;
	r0 += M4(3.214e-01, -6.167e-01, 1.597e-01, -1.527e-01, 4.164e-02, 6.372e-02, -5.610e-03, -1.546e-02, -3.495e-01, -2.087e-01, 2.471e-01, 2.292e-01, 2.860e-01, 2.484e-01, 1.140e-01, 1.932e-02) * s1_1_1;
	r0 += M4(-2.206e-02, 5.971e-02, -1.589e-02, 3.162e-02, -1.056e-03, 7.555e-03, -2.120e-03, -8.649e-03, 2.182e-03, -1.175e-01, -1.218e-02, 4.592e-02, 6.273e-04, 8.227e-02, 2.562e-03, 5.558e-02) * s1_1_2;
	r0 += M4(1.013e-02, -7.220e-03, -1.515e-02, -3.994e-03, 3.753e-02, -8.063e-03, 6.149e-02, -1.472e-02, 8.116e-03, -5.604e-03, -5.168e-02, 3.616e-03, -4.220e-02, 9.493e-03, 1.763e-02, -1.861e-02) * s1_2_0;
	r0 += M4(7.283e-03, 3.321e-02, 1.001e-01, -7.200e-02, 1.473e-01, 1.328e-01, 1.872e-01, 2.095e-01, 2.881e-02, 2.376e-02, 3.161e-02, -4.096e-02, -7.139e-02, -1.210e-01, 4.189e-02, 8.127e-02) * s1_2_1;
	r0 += M4(2.146e-03, 1.460e-03, -1.079e-02, 4.088e-02, -1.070e-02, 4.994e-02, -6.246e-03, 4.919e-02, -2.931e-03, 1.274e-02, -1.489e-03, 2.524e-02, 4.203e-03, -2.607e-02, 3.623e-04, 2.810e-02) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(-1.938e-01, 1.533e-01, -1.441e-01, 1.043e-01, 6.616e-02, -1.014e-02, -7.101e-03, 2.265e-03, 5.629e-03, -2.968e-03, -1.423e-02, 9.845e-03, 2.651e-03, 2.245e-03, 1.289e-04, 2.046e-03) * s0_0_0;
	r0 += M4(9.373e-02, -9.157e-02, -1.041e-01, 7.927e-02, 3.502e-02, 1.116e-01, -4.213e-02, -3.100e-02, -3.894e-02, 6.731e-02, -5.317e-03, -1.999e-02, 1.584e-02, -4.408e-04, -2.538e-03, -4.346e-03) * s0_0_1;
	r0 += M4(4.139e-02, 8.141e-02, 7.994e-02, -2.798e-02, -2.092e-02, -3.039e-02, -5.095e-03, -1.590e-02, 7.686e-04, -2.264e-02, 1.348e-04, 5.297e-03, 4.658e-03, -2.985e-02, -3.433e-03, 1.552e-03) * s0_0_2;
	r0 += M4(-1.053e-02, 7.344e-02, 4.524e-02, 1.192e-01, -6.910e-02, 1.322e-02, -5.023e-02, -2.018e-02, 9.438e-02, -4.456e-02, 9.783e-02, -3.724e-02, -1.090e-02, 4.224e-03, 7.513e-03, 4.889e-04) * s0_1_0;
	r0 += M4(2.749e-01, 1.719e-01, -1.299e-01, -1.383e-01, -3.545e-01, -3.238e-01, 3.779e-01, 1.696e-01, -2.639e-01, 2.378e-01, -1.655e-01, 2.744e-01, 5.969e-02, -3.173e-02, -4.174e-03, 8.820e-04) * s0_1_1;
	r0 += M4(2.088e-01, 9.153e-02, 3.428e-01, -1.056e-01, 7.110e-02, -4.548e-02, 4.583e-03, 1.502e-01, 3.748e-03, -7.393e-02, 3.141e-03, -7.593e-02, 2.374e-02, -3.913e-02, -1.285e-02, 3.593e-02) * s0_1_2;
	r0 += M4(-1.008e-01, -6.706e-02, -4.527e-02, 5.093e-02, 3.158e-03, -5.979e-03, 9.782e-03, -1.439e-02, -7.593e-04, 2.264e-02, 1.611e-02, 4.504e-03, 3.777e-03, 4.626e-05, -1.860e-02, 6.893e-03) * s0_2_0;
	r0 += M4(-5.108e-02, -1.217e-01, -2.040e-01, -1.156e-01, 3.969e-02, 1.630e-02, -3.675e-02, 4.871e-02, 1.825e-02, -2.584e-02, -8.945e-02, 2.213e-02, 6.281e-03, -1.598e-02, 1.949e-01, -2.316e-02) * s0_2_1;
	r0 += M4(2.373e-01, -1.178e-02, -2.163e-01, 1.381e-01, 4.685e-03, 2.859e-02, -3.599e-02, -8.521e-02, -3.278e-04, -2.131e-03, 2.503e-03, -3.284e-02, 3.602e-02, 1.892e-02, 2.370e-01, -4.577e-01) * s0_2_2;
	r0 += M4(1.395e-03, -9.840e-05, -4.444e-04, -4.087e-03, 5.248e-03, 2.399e-03, -9.366e-03, -3.450e-03, 6.828e-04, 1.450e-04, -8.558e-04, 4.424e-04, -2.471e-02, 1.131e-02, 1.029e-02, 4.148e-03) * s1_0_0;
	r0 += M4(-2.586e-02, 2.553e-04, -4.221e-03, 3.582e-03, -1.511e-02, -8.904e-04, 1.093e-01, -2.254e-02, 2.029e-03, -3.323e-03, 6.012e-04, -1.143e-03, -7.321e-02, -8.584e-02, 1.205e-02, 1.497e-02) * s1_0_1;
	r0 += M4(-1.355e-02, -4.039e-02, 7.703e-03, 6.909e-03, 2.339e-01, 1.284e-01, -2.387e-01, 5.553e-02, -1.162e-02, 8.706e-04, -3.834e-03, 4.014e-03, -1.450e-04, -8.835e-03, -4.157e-03, -5.092e-03) * s1_0_2;
	r0 += M4(-2.287e-02, -6.320e-05, 1.715e-02, 6.544e-03, 1.116e-03, -5.700e-04, -4.493e-03, 1.306e-03, -4.788e-04, -1.251e-03, 2.836e-03, -7.371e-05, -4.566e-02, 9.567e-03, -6.958e-02, 2.182e-02) * s1_1_0;
	r0 += M4(-2.824e-01, -2.319e-01, -2.072e-01, -9.112e-02, -9.384e-04, -3.883e-03, -1.366e-02, -2.465e-03, -7.715e-03, -1.839e-03, 6.748e-03, -5.520e-03, -1.831e-01, -1.823e-01, -2.194e-01, -2.562e-01) * s1_1_1;
	r0 += M4(-2.281e-02, -1.492e-01, -4.059e-02, -1.315e-01, -2.051e-02, 6.500e-04, 4.289e-02, -2.731e-02, 7.202e-02, -1.785e-02, -5.321e-02, -3.312e-03, 1.438e-03, -5.635e-02, 1.431e-02, -3.630e-02) * s1_1_2;
	r0 += M4(-3.014e-03, -8.911e-05, -4.712e-02, 7.283e-03, 3.176e-03, 1.961e-03, -5.085e-04, 6.568e-04, -1.778e-03, -1.329e-03, -3.579e-03, -1.594e-04, 1.506e-02, 5.843e-03, 7.108e-03, 5.393e-04) * s1_2_0;
	r0 += M4(-2.859e-02, -2.602e-02, -1.642e-01, -1.515e-01, 2.831e-03, 3.431e-03, -5.858e-03, -3.073e-03, 2.580e-02, -2.104e-02, 8.680e-04, -1.073e-02, 2.537e-02, 1.742e-02, -3.371e-02, -1.667e-02) * s1_2_1;
	r0 += M4(-4.715e-03, -2.128e-02, 2.118e-03, -4.675e-02, 1.860e-03, 1.591e-03, -6.630e-03, -7.557e-03, -2.510e-01, 1.974e-01, 2.903e-02, 9.498e-02, -1.527e-03, 2.056e-02, 1.626e-03, -2.274e-02) * s1_2_2;
	r0 += V4(-8.450e-04, -6.843e-04, -6.032e-04, -6.898e-04);
	r0 = tanh(r0);
	vec2 opt = 0.5 * LUMA_pt;
	vec2 fpos = (vec2(opos) + vec2(0.5)) * opt;
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0.x + LUMA_tex(fpos + vec2(0.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r0.y + LUMA_tex(fpos + vec2(1.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r0.z + LUMA_tex(fpos + vec2(0.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r0.w + LUMA_tex(fpos + vec2(1.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
}
